# Generated file. Any changes made will be lost.
from typing import Dict
from shaderinfo import *
from rshader import rShaderObjectId

shaderObjects = []
shaderObjectsByName : Dict[str, ShaderObjectInfo] = {}
shaderObjectsByHash : Dict[int, ShaderObjectInfo] = {}
def _add( shaderObject ):
    shaderObjects.append( shaderObject )
    shaderObjectsByName[ shaderObject.name ] = shaderObject
    shaderObjectsByHash[ shaderObject.hash ] = shaderObject

def getShaderObjectHash( name: str ):
    if name.startswith( '_0x' ):
        # fallback
        return int(name[3:], base=16)
    else:
        return shaderObjectsByName[ name ].hash
    
def getShaderObjectName( hashVal: int ):
    if hashVal in shaderObjectsByHash:
        return shaderObjectsByHash[hashVal].name
    else:
        # fallback
        return f'_{hex(hashVal)}'
    
def getShaderObjectIdFromName( name: str ):
    '''Gets the shader object ID associated with the given shader object name'''
    
    soId = rShaderObjectId()
    if name.startswith('_0x'):
        soId.setHash( getShaderObjectHash( name ) )
        soId.setIndex( 0 )
    else:
        so = shaderObjectsByName[ name ]
        soId.setHash( so.hash )
        soId.setIndex( so.index )
  
    assert( soId.getValue() <= 0xFFFFFFFF )
    return soId
 
_EMPTY_ = ShaderObjectInfo( 0, '', 0x0, [] )
IASystemCopy = ShaderObjectInfo( 1, 'IASystemCopy', 0xabee5, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Texcoord', 2 ), ] )
IASystemClear = ShaderObjectInfo( 2, 'IASystemClear', 0x7fa75, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 1, 'Color', 4 ), ] )
IAFilter = ShaderObjectInfo( 3, 'IAFilter', 0x97c15, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Texcoord', 2 ), ShaderInputInfo( 16, 1, 'Texcoord', 2 ), ShaderInputInfo( 24, 14, 'Color', 1 ), ] )
IAFilter0 = ShaderObjectInfo( 4, 'IAFilter0', 0x30d3b, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 14, 'Color', 1 ), ] )
IAFilter1 = ShaderObjectInfo( 5, 'IAFilter1', 0x43dad, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Texcoord', 2 ), ShaderInputInfo( 16, 14, 'Color', 1 ), ] )
IAFilter2 = ShaderObjectInfo( 6, 'IAFilter2', 0xd6c17, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Texcoord', 2 ), ] )
IADevelopPrim2D = ShaderObjectInfo( 7, 'IADevelopPrim2D', 0x7abfa, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 14, 'Color', 1 ), ShaderInputInfo( 12, 5, 'TexCoord', 2 ), ] )
IADevelopPrim3D = ShaderObjectInfo( 8, 'IADevelopPrim3D', 0xc9abb, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'Color', 1 ), ShaderInputInfo( 16, 5, 'TexCoord', 2 ), ] )
IACollisionInput = ShaderObjectInfo( 9, 'IACollisionInput', 0xfc7fe, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'Color', 1 ), ] )
IASwing = ShaderObjectInfo( 10, 'IASwing', 0x1a6a1, [ShaderInputInfo( 0, 10, 'SWING_ORIGIN', 3 ), ShaderInputInfo( 3, 10, 'SWING_WEIGHT', 1 ), ] )
IASwing2 = ShaderObjectInfo( 11, 'IASwing2', 0x73358, [ShaderInputInfo( 0, 10, 'SWING_ORIGIN', 3 ), ShaderInputInfo( 3, 10, 'SWING_WEIGHT', 1 ), ] )
IASwingHighPrecision = ShaderObjectInfo( 12, 'IASwingHighPrecision', 0xf367f, [ShaderInputInfo( 0, 5, 'SWING_ORIGIN', 3 ), ShaderInputInfo( 6, 5, 'SWING_WEIGHT', 1 ), ] )
IASwing2HighPrecision = ShaderObjectInfo( 13, 'IASwing2HighPrecision', 0x2001e, [ShaderInputInfo( 0, 5, 'SWING_ORIGIN', 3 ), ShaderInputInfo( 6, 5, 'SWING_WEIGHT', 1 ), ] )
IAInstancing = ShaderObjectInfo( 14, 'IAInstancing', 0x7698a, [ShaderInputInfo( 0, 1, 'INSTANCE_MATRIX', 12 ), ] )
IAInstancingColor = ShaderObjectInfo( 15, 'IAInstancingColor', 0x8771a, [ShaderInputInfo( 0, 1, 'INSTANCE_MATRIX', 12 ), ShaderInputInfo( 48, 1, 'INSTANCE_COLOR', 4 ), ] )
IALatticeDeform = ShaderObjectInfo( 16, 'IALatticeDeform', 0x7ebd8, [ShaderInputInfo( 0, 1, 'LdVtx', 2 ), ShaderInputInfo( 8, 1, 'LdVtx', 2 ), ShaderInputInfo( 16, 1, 'LdVtx', 2 ), ShaderInputInfo( 24, 1, 'LdVtx', 2 ), ShaderInputInfo( 32, 1, 'LdVtx', 2 ), ShaderInputInfo( 40, 1, 'LdVtx', 2 ), ShaderInputInfo( 48, 1, 'LdVtx', 2 ), ShaderInputInfo( 56, 1, 'LdVtx', 2 ), ] )
IATetraDeform = ShaderObjectInfo( 17, 'IATetraDeform', 0x6942, [ShaderInputInfo( 0, 1, 'LdVtx', 2 ), ShaderInputInfo( 8, 1, 'LdVtx', 2 ), ShaderInputInfo( 16, 1, 'LdVtx', 2 ), ShaderInputInfo( 24, 1, 'LdVtx', 2 ), ] )
IATetraDeform2 = ShaderObjectInfo( 18, 'IATetraDeform2', 0x3a155, [ShaderInputInfo( 0, 2, 'LdVtx', 2 ), ShaderInputInfo( 4, 2, 'LdVtx', 2 ), ShaderInputInfo( 8, 2, 'LdVtx', 2 ), ShaderInputInfo( 12, 2, 'LdVtx', 2 ), ShaderInputInfo( 16, 2, 'LdVtx', 2 ), ShaderInputInfo( 20, 2, 'LdVtx', 2 ), ] )
IASkinBridge1wt = ShaderObjectInfo( 19, 'IASkinBridge1wt', 0xb0983, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 3, 'Joint', 1 ), ShaderInputInfo( 8, 11, 'Normal', 1 ), ] )
IASkinBridge2wt = ShaderObjectInfo( 20, 'IASkinBridge2wt', 0xdb7da, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 11, 'Normal', 1 ), ShaderInputInfo( 12, 4, 'Joint', 2 ), ] )
IASkinBridge4wt = ShaderObjectInfo( 21, 'IASkinBridge4wt', 0xcb68, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 8, 8, 'Joint', 4 ), ShaderInputInfo( 12, 10, 'Weight', 4 ), ShaderInputInfo( 16, 11, 'Normal', 1 ), ] )
IASkinBridge8wt = ShaderObjectInfo( 22, 'IASkinBridge8wt', 0xa320c, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 8, 8, 'Joint', 8 ), ShaderInputInfo( 16, 10, 'Weight', 8 ), ShaderInputInfo( 24, 11, 'Normal', 1 ), ] )
IASkinBridge4wt4M = ShaderObjectInfo( 23, 'IASkinBridge4wt4M', 0x5d5ad, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 8, 8, 'Joint', 4 ), ShaderInputInfo( 12, 10, 'Weight', 4 ), ShaderInputInfo( 16, 11, 'Normal', 1 ), ShaderInputInfo( 20, 5, 'MorphPosition', 3 ), ShaderInputInfo( 26, 5, 'MorphPosition', 3 ), ShaderInputInfo( 32, 5, 'MorphPosition', 3 ), ShaderInputInfo( 38, 5, 'MorphPosition', 3 ), ShaderInputInfo( 44, 9, 'MorphNormal', 3 ), ShaderInputInfo( 47, 9, 'MorphNormal', 3 ), ShaderInputInfo( 50, 9, 'MorphNormal', 3 ), ShaderInputInfo( 53, 9, 'MorphNormal', 3 ), ] )
IASkinTB1wt = ShaderObjectInfo( 24, 'IASkinTB1wt', 0xa8fab, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 3, 'Joint', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IASkinTBN1wt = ShaderObjectInfo( 25, 'IASkinTBN1wt', 0x667b1, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 3, 'Joint', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IASkinTBC1wt = ShaderObjectInfo( 26, 'IASkinTBC1wt', 0xcbf6c, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 3, 'Joint', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 13, 'VertexColor', 3 ), ShaderInputInfo( 23, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IASkinTBNLA1wt = ShaderObjectInfo( 27, 'IASkinTBNLA1wt', 0xd8778, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 3, 'Joint', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 28, 2, 'UV_Extend', 2 ), ] )
IASkinTB2wt = ShaderObjectInfo( 28, 'IASkinTB2wt', 0xc31f2, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'Joint', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IASkinTBN2wt = ShaderObjectInfo( 29, 'IASkinTBN2wt', 0xd9e8, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'Joint', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 24, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IASkinTBC2wt = ShaderObjectInfo( 30, 'IASkinTBC2wt', 0xa0135, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'Joint', 2 ), ShaderInputInfo( 24, 13, 'VertexColor', 3 ), ShaderInputInfo( 27, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IASkinTBNLA2wt = ShaderObjectInfo( 31, 'IASkinTBNLA2wt', 0xb3921, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 2, 'Joint', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 32, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 28, 2, 'UV_Unique', 2 ), ShaderInputInfo( 32, 2, 'UV_Extend', 2 ), ] )
IASkinTB4wt = ShaderObjectInfo( 32, 'IASkinTB4wt', 0x14d40, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 8, 'Joint', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'Weight', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IASkinTBN4wt = ShaderObjectInfo( 33, 'IASkinTBN4wt', 0xda55a, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 8, 'Joint', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'Weight', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 28, 2, 'UV_Unique', 2 ), ShaderInputInfo( 28, 2, 'UV_Extend', 2 ), ] )
IASkinTBC4wt = ShaderObjectInfo( 34, 'IASkinTBC4wt', 0x77d87, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 8, 'Joint', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'Weight', 2 ), ShaderInputInfo( 28, 13, 'VertexColor', 3 ), ShaderInputInfo( 31, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IASkinTBNLA4wt = ShaderObjectInfo( 35, 'IASkinTBNLA4wt', 0x64593, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 8, 'Joint', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'Weight', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 32, 2, 'TexCoord', 2 ), ShaderInputInfo( 36, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 32, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 28, 2, 'UV_Unique', 2 ), ShaderInputInfo( 36, 2, 'UV_Extend', 2 ), ] )
IASkinTB8wt = ShaderObjectInfo( 36, 'IASkinTB8wt', 0xbb424, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 10, 'Weight', 4 ), ShaderInputInfo( 16, 8, 'Joint', 8 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'Weight', 2 ), ShaderInputInfo( 32, 9, 'Tangent', 4 ), ShaderInputInfo( 24, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 24, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IASkinTBN8wt = ShaderObjectInfo( 37, 'IASkinTBN8wt', 0x75c3e, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 10, 'Weight', 4 ), ShaderInputInfo( 16, 8, 'Joint', 8 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'Weight', 2 ), ShaderInputInfo( 32, 9, 'Tangent', 4 ), ShaderInputInfo( 36, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 36, 2, 'UV_Unique', 2 ), ShaderInputInfo( 36, 2, 'UV_Extend', 2 ), ] )
IASkinTBC8wt = ShaderObjectInfo( 38, 'IASkinTBC8wt', 0xd84e3, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 10, 'Weight', 4 ), ShaderInputInfo( 16, 8, 'Joint', 8 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'Weight', 2 ), ShaderInputInfo( 32, 9, 'Tangent', 4 ), ShaderInputInfo( 36, 13, 'VertexColor', 3 ), ShaderInputInfo( 39, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 24, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 24, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IASkinTBNLA8wt = ShaderObjectInfo( 39, 'IASkinTBNLA8wt', 0xcbcf7, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 9, 'Occlusion', 1 ), ShaderInputInfo( 12, 10, 'Weight', 4 ), ShaderInputInfo( 16, 8, 'Joint', 8 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'Weight', 2 ), ShaderInputInfo( 32, 9, 'Tangent', 4 ), ShaderInputInfo( 36, 2, 'TexCoord', 2 ), ShaderInputInfo( 40, 2, 'TexCoord', 2 ), ShaderInputInfo( 44, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'UV_Primary', 2 ), ShaderInputInfo( 40, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 36, 2, 'UV_Unique', 2 ), ShaderInputInfo( 44, 2, 'UV_Extend', 2 ), ] )
IANonSkinTB = ShaderObjectInfo( 40, 'IANonSkinTB', 0xd8297, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBC = ShaderObjectInfo( 41, 'IANonSkinTBC', 0x49b4f, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 13, 'VertexColor', 3 ), ShaderInputInfo( 27, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBL = ShaderObjectInfo( 42, 'IANonSkinTBL', 0xb86de, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 10, 'Occlusion', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 24, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBL_LA = ShaderObjectInfo( 43, 'IANonSkinTBL_LA', 0xd4504, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 10, 'Occlusion', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 24, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBN = ShaderObjectInfo( 44, 'IANonSkinTBN', 0x5e7f2, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBA = ShaderObjectInfo( 45, 'IANonSkinTBA', 0xafa63, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBNC = ShaderObjectInfo( 46, 'IANonSkinTBNC', 0x926fd, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 13, 'VertexColor', 3 ), ShaderInputInfo( 31, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBNL = ShaderObjectInfo( 47, 'IANonSkinTBNL', 0x63b6c, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 32, 10, 'Occlusion', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 28, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBNL_LA = ShaderObjectInfo( 48, 'IANonSkinTBNL_LA', 0x5402f, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 32, 10, 'Occlusion', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 28, 2, 'UV_Unique', 2 ), ShaderInputInfo( 28, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBNA = ShaderObjectInfo( 49, 'IANonSkinTBNA', 0x747d1, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 28, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBLA = ShaderObjectInfo( 50, 'IANonSkinTBLA', 0x12553, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 28, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBCA = ShaderObjectInfo( 51, 'IANonSkinTBCA', 0x9399c, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 13, 'VertexColor', 3 ), ShaderInputInfo( 31, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBNCA = ShaderObjectInfo( 52, 'IANonSkinTBNCA', 0xb6681, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 13, 'VertexColor', 3 ), ShaderInputInfo( 31, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 32, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 32, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBNLA = ShaderObjectInfo( 53, 'IANonSkinTBNLA', 0x37a4e, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'TexCoord', 2 ), ShaderInputInfo( 32, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 28, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 32, 2, 'UV_Unique', 2 ), ShaderInputInfo( 24, 2, 'UV_Extend', 2 ), ] )
IANonSkinB = ShaderObjectInfo( 54, 'IANonSkinB', 0xa7d7d, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IANonSkinBC = ShaderObjectInfo( 55, 'IANonSkinBC', 0x207d6, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 13, 'VertexColor', 3 ), ShaderInputInfo( 23, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IANonSkinBL = ShaderObjectInfo( 56, 'IANonSkinBL', 0xd1a47, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 16, 2, 'UV_Extend', 2 ), ] )
IANonSkinBL_LA = ShaderObjectInfo( 57, 'IANonSkinBL_LA', 0x8a618, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinBA = ShaderObjectInfo( 58, 'IANonSkinBA', 0xc66fa, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinBLA = ShaderObjectInfo( 59, 'IANonSkinBLA', 0x2082f, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 24, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinBCA = ShaderObjectInfo( 60, 'IANonSkinBCA', 0xa14e0, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 11, 'Normal', 1 ), ShaderInputInfo( 16, 2, 'TexCoord', 2 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 13, 'VertexColor', 3 ), ShaderInputInfo( 27, 10, 'VertexAlpha', 1 ), ShaderInputInfo( 16, 2, 'UV_Primary', 2 ), ShaderInputInfo( 16, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 16, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IASkinOTB_4WT_4M = ShaderObjectInfo( 61, 'IASkinOTB_4WT_4M', 0x2f55c, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 5, 'Weight', 1 ), ShaderInputInfo( 8, 9, 'Normal', 3 ), ShaderInputInfo( 11, 10, 'Occlusion', 1 ), ShaderInputInfo( 12, 9, 'Tangent', 4 ), ShaderInputInfo( 16, 8, 'Joint', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'Weight', 2 ), ShaderInputInfo( 28, 5, 'MorphPosition', 3 ), ShaderInputInfo( 34, 5, 'MorphPosition', 3 ), ShaderInputInfo( 40, 5, 'MorphPosition', 3 ), ShaderInputInfo( 46, 5, 'MorphPosition', 3 ), ShaderInputInfo( 52, 9, 'MorphNormal', 3 ), ShaderInputInfo( 55, 9, 'MorphNormal', 3 ), ShaderInputInfo( 58, 9, 'MorphNormal', 3 ), ShaderInputInfo( 61, 9, 'MorphNormal', 3 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 20, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IANonSkinTBN_4M = ShaderObjectInfo( 62, 'IANonSkinTBN_4M', 0x4325a, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 9, 'Normal', 3 ), ShaderInputInfo( 15, 10, 'Occlusion', 1 ), ShaderInputInfo( 16, 9, 'Tangent', 4 ), ShaderInputInfo( 20, 2, 'TexCoord', 2 ), ShaderInputInfo( 24, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 2, 'MorphPosition', 3 ), ShaderInputInfo( 34, 2, 'MorphPosition', 3 ), ShaderInputInfo( 40, 2, 'MorphPosition', 3 ), ShaderInputInfo( 46, 2, 'MorphPosition', 3 ), ShaderInputInfo( 52, 9, 'MorphNormal', 3 ), ShaderInputInfo( 55, 9, 'MorphNormal', 3 ), ShaderInputInfo( 58, 9, 'MorphNormal', 3 ), ShaderInputInfo( 61, 9, 'MorphNormal', 3 ), ShaderInputInfo( 20, 2, 'UV_Primary', 2 ), ShaderInputInfo( 24, 2, 'UV_Secondary', 2 ), ShaderInputInfo( 20, 2, 'UV_Unique', 2 ), ShaderInputInfo( 20, 2, 'UV_Extend', 2 ), ] )
IASkinVelocytyEdge = ShaderObjectInfo( 63, 'IASkinVelocytyEdge', 0xefc14, [ShaderInputInfo( 0, 5, 'Position', 3 ), ShaderInputInfo( 6, 3, 'Joint', 1 ), ShaderInputInfo( 8, 11, 'Normal', 1 ), ShaderInputInfo( 12, 5, 'Tangent', 3 ), ] )
IADualParaboloid = ShaderObjectInfo( 64, 'IADualParaboloid', 0xb4229, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Direction', 3 ), ] )
IA_DeferredLighting_LightVolume = ShaderObjectInfo( 65, 'IA_DeferredLighting_LightVolume', 0xa0978, [ShaderInputInfo( 0, 1, 'Position', 3 ), ] )
IAPrimitiveCloudBillboard = ShaderObjectInfo( 66, 'IAPrimitiveCloudBillboard', 0x64435, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 3, 'CldAspectRatio', 1 ), ShaderInputInfo( 14, 3, 'CldAlpha', 1 ), ShaderInputInfo( 16, 3, 'TexCoord', 2 ), ShaderInputInfo( 20, 1, 'CldSize', 1 ), ShaderInputInfo( 24, 3, 'CldPosition', 3 ), ShaderInputInfo( 30, 3, 'CldScale', 1 ), ] )
IAPrimitiveCloud = ShaderObjectInfo( 67, 'IAPrimitiveCloud', 0xed029, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 1, 'CldPosition', 3 ), ShaderInputInfo( 24, 1, 'CldAlpha', 1 ), ShaderInputInfo( 28, 3, 'TexCoord', 2 ), ] )
IAPrimitiveSprite = ShaderObjectInfo( 68, 'IAPrimitiveSprite', 0xccc74, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 3, 'TexCoord', 2 ), ShaderInputInfo( 20, 4, 'ZOffset', 1 ), ShaderInputInfo( 22, 4, 'Intensity', 1 ), ShaderInputInfo( 24, 4, 'SprScale', 1 ), ShaderInputInfo( 26, 4, 'SprRot', 1 ), ShaderInputInfo( 28, 7, 'SprWidth', 1 ), ShaderInputInfo( 29, 7, 'SprHeight', 1 ), ShaderInputInfo( 30, 7, 'SprRatio', 1 ), ShaderInputInfo( 31, 7, 'SprVolume', 1 ), ShaderInputInfo( 26, 4, 'PrimRot', 1 ), ShaderInputInfo( 31, 7, 'PrimVol', 1 ), ShaderInputInfo( 31, 7, 'PrimPrScale', 1 ), ] )
IAPrimitiveNT = ShaderObjectInfo( 69, 'IAPrimitiveNT', 0x28185, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 3, 'TexCoord', 2 ), ShaderInputInfo( 20, 4, 'ZOffset', 1 ), ShaderInputInfo( 22, 4, 'Intensity', 1 ), ShaderInputInfo( 24, 3, 'NTRot', 1 ), ShaderInputInfo( 26, 3, 'NTSize', 2 ), ShaderInputInfo( 30, 3, 'NTVolume', 1 ), ShaderInputInfo( 24, 3, 'PrimRot', 1 ), ShaderInputInfo( 30, 3, 'PrimVol', 1 ), ShaderInputInfo( 30, 3, 'PrimPrScale', 1 ), ] )
IAPrimitivePolyline = ShaderObjectInfo( 70, 'IAPrimitivePolyline', 0x55ce2, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 3, 'TexCoord', 2 ), ShaderInputInfo( 20, 4, 'ZOffset', 1 ), ShaderInputInfo( 22, 4, 'Intensity', 1 ), ShaderInputInfo( 24, 3, 'PlnWidth', 1 ), ShaderInputInfo( 26, 3, 'PlnReserved', 1 ), ShaderInputInfo( 28, 7, 'PlnTangent', 3 ), ShaderInputInfo( 31, 7, 'PlnVolume', 1 ), ShaderInputInfo( 31, 7, 'PrimVol', 1 ), ShaderInputInfo( 31, 7, 'PrimPrScale', 1 ), ] )
IAPrimitivePolygon = ShaderObjectInfo( 71, 'IAPrimitivePolygon', 0x814ba, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 3, 'TexCoord', 2 ), ShaderInputInfo( 20, 4, 'ZOffset', 1 ), ShaderInputInfo( 22, 4, 'Intensity', 1 ), ShaderInputInfo( 24, 7, 'PlyNormal', 3 ), ShaderInputInfo( 27, 7, 'PlyBinormal', 1 ), ShaderInputInfo( 28, 7, 'PlyTangent', 3 ), ShaderInputInfo( 31, 7, 'PlyVolume', 1 ), ShaderInputInfo( 31, 7, 'PrimVol', 1 ), ShaderInputInfo( 31, 7, 'PrimPrScale', 1 ), ] )
IACubeMapFilter = ShaderObjectInfo( 72, 'IACubeMapFilter', 0x50217, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'View', 3 ), ] )
IAGSDOFFilter = ShaderObjectInfo( 73, 'IAGSDOFFilter', 0x7d107, [ShaderInputInfo( 0, 1, 'SV_VertexID', 1 ), ShaderInputInfo( 0, 1, 'SV_InstanceID', 1 ), ] )
IABokeh = ShaderObjectInfo( 74, 'IABokeh', 0x377d7, [ShaderInputInfo( 0, 2, 'POSITION', 4 ), ] )
IAWater = ShaderObjectInfo( 75, 'IAWater', 0x40521, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 2, 'TexCoord', 2 ), ] )
IAWaterRipple = ShaderObjectInfo( 76, 'IAWaterRipple', 0xc463c, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 1, 'Height', 1 ), ShaderInputInfo( 16, 1, 'TexCoord', 2 ), ] )
IAGUI = ShaderObjectInfo( 77, 'IAGUI', 0xfc6e2, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'Color', 1 ), ShaderInputInfo( 16, 1, 'Texcoord', 2 ), ] )
IATextureBlend = ShaderObjectInfo( 78, 'IATextureBlend', 0xfa335, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Texcoord', 2 ), ShaderInputInfo( 16, 1, 'Direction', 3 ), ] )
IAGPUParticle = ShaderObjectInfo( 79, 'IAGPUParticle', 0x77562, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 4, 'Scale', 1 ), ShaderInputInfo( 18, 4, 'Index', 1 ), ShaderInputInfo( 20, 4, 'Intensity', 1 ), ShaderInputInfo( 22, 4, 'Rotation', 1 ), ShaderInputInfo( 24, 5, 'TexCoordScl', 2 ), ] )
IAGPULineParticle = ShaderObjectInfo( 80, 'IAGPULineParticle', 0x833a2, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 1, 'Direction', 3 ), ShaderInputInfo( 28, 4, 'Scale', 1 ), ShaderInputInfo( 30, 4, 'Intensity', 1 ), ] )
IAGPUPolylineParticle = ShaderObjectInfo( 81, 'IAGPUPolylineParticle', 0x14093, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 4, 'Intensity', 1 ), ShaderInputInfo( 18, 4, 'Width', 1 ), ShaderInputInfo( 20, 3, 'TexCoord', 2 ), ShaderInputInfo( 24, 7, 'Tangent', 4 ), ShaderInputInfo( 28, 1, 'Scale', 1 ), ] )
IALightShaftInput = ShaderObjectInfo( 82, 'IALightShaftInput', 0x1af65, [ShaderInputInfo( 0, 1, 'Position', 3 ), ] )
IAGrass = ShaderObjectInfo( 83, 'IAGrass', 0xa8e08, [ShaderInputInfo( 0, 10, 'POSITION', 3 ), ShaderInputInfo( 3, 10, 'COLOR_BLEND', 1 ), ShaderInputInfo( 4, 9, 'COS_SIN', 2 ), ShaderInputInfo( 6, 10, 'LIGHTMAP', 1 ), ShaderInputInfo( 7, 10, 'VERTEX_NO', 1 ), ShaderInputInfo( 8, 10, 'WIDTH_HEIGHT', 2 ), ShaderInputInfo( 10, 10, 'GRASS_POWER', 1 ), ShaderInputInfo( 11, 10, 'AMBOCC', 1 ), ] )
IAGrassHicomp = ShaderObjectInfo( 84, 'IAGrassHicomp', 0xa6451, [ShaderInputInfo( 0, 10, 'POSITION', 3 ), ShaderInputInfo( 3, 10, 'VERTEX_NO', 1 ), ShaderInputInfo( 4, 10, 'ANGLE', 1 ), ShaderInputInfo( 5, 10, 'LIGHTMAP', 1 ), ShaderInputInfo( 6, 10, 'COLOR_BLEND', 1 ), ShaderInputInfo( 7, 10, 'AMBOCC', 1 ), ] )
IAGrassHicomp2 = ShaderObjectInfo( 85, 'IAGrassHicomp2', 0xe8a86, [ShaderInputInfo( 0, 10, 'POSITION', 3 ), ShaderInputInfo( 3, 10, 'VNO_CB', 1 ), ShaderInputInfo( 4, 10, 'ANGLE', 1 ), ShaderInputInfo( 5, 10, 'LIGHTMAP', 1 ), ShaderInputInfo( 6, 10, 'SCALING', 1 ), ShaderInputInfo( 7, 10, 'AMBOCC', 1 ), ] )
IAGrassPoint = ShaderObjectInfo( 86, 'IAGrassPoint', 0x4bb95, [ShaderInputInfo( 0, 1, 'POSITION', 4 ), ] )
IAGrassLowest = ShaderObjectInfo( 87, 'IAGrassLowest', 0xb6d3f, [ShaderInputInfo( 0, 1, 'VERTEX_NO', 1 ), ] )
IAGrassSPU = ShaderObjectInfo( 88, 'IAGrassSPU', 0xc8705, [ShaderInputInfo( 0, 1, 'POSITION', 4 ), ShaderInputInfo( 16, 1, 'GRASS_COLOR', 4 ), ShaderInputInfo( 32, 1, 'UV_BASEMAP', 2 ), ShaderInputInfo( 40, 1, 'WORLD_POSITION', 3 ), ShaderInputInfo( 52, 1, 'WORLD_NORMAL', 3 ), ShaderInputInfo( 64, 1, 'WORLD_TANGENT', 3 ), ShaderInputInfo( 76, 1, 'DIFFUSE', 3 ), ShaderInputInfo( 88, 1, 'SPECULAR', 3 ), ShaderInputInfo( 100, 1, 'AMBIENT_OCCLUSION', 1 ), ] )
IAGrassOutsourcing = ShaderObjectInfo( 89, 'IAGrassOutsourcing', 0x11035, [ShaderInputInfo( 0, 2, 'OS_POSITION', 3 ), ] )
IAGrassOutsourcingF32 = ShaderObjectInfo( 90, 'IAGrassOutsourcingF32', 0x1533b, [ShaderInputInfo( 0, 1, 'OS_POSITION', 3 ), ] )
IAMirage = ShaderObjectInfo( 91, 'IAMirage', 0x2aa4, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 1, 'Texcoord', 2 ), ] )
IASimWaterForViewInput = ShaderObjectInfo( 92, 'IASimWaterForViewInput', 0xabe96, [ShaderInputInfo( 0, 1, 'Position', 4 ), ShaderInputInfo( 16, 1, 'Color', 4 ), ShaderInputInfo( 32, 1, 'Texcoord', 2 ), ] )
IASoftBodyQuad = ShaderObjectInfo( 93, 'IASoftBodyQuad', 0xcc1fe, [ShaderInputInfo( 0, 1, 'POSITION', 2 ), ] )
IASoftBodyVertex = ShaderObjectInfo( 94, 'IASoftBodyVertex', 0x79a5e, [ShaderInputInfo( 0, 2, 'SbTexCoord', 2 ), ] )
IASoftBodyDecouple = ShaderObjectInfo( 95, 'IASoftBodyDecouple', 0xcff47, [ShaderInputInfo( 0, 2, 'SbTexCoord', 2 ), ShaderInputInfo( 4, 2, 'SbTexCoord', 2 ), ShaderInputInfo( 8, 2, 'SbTexCoord', 2 ), ShaderInputInfo( 12, 2, 'SbWeight', 3 ), ShaderInputInfo( 18, 2, 'SbOffset', 3 ), ] )
IASoftBodyVertexNoVTF = ShaderObjectInfo( 96, 'IASoftBodyVertexNoVTF', 0x4d186, [ShaderInputInfo( 0, 1, 'SbPos', 3 ), ShaderInputInfo( 12, 2, 'SbQuat', 4 ), ] )
IASoftBodyVertexPS3 = ShaderObjectInfo( 97, 'IASoftBodyVertexPS3', 0xd4e3, [ShaderInputInfo( 0, 1, 'SbQuat', 4 ), ShaderInputInfo( 16, 1, 'SbQuat', 4 ), ] )
IASoftBodyDecoupleNoVTF = ShaderObjectInfo( 98, 'IASoftBodyDecoupleNoVTF', 0x81fcf, [ShaderInputInfo( 0, 1, 'SbPos', 3 ), ShaderInputInfo( 12, 1, 'SbPos', 3 ), ShaderInputInfo( 24, 1, 'SbPos', 3 ), ShaderInputInfo( 36, 2, 'SbQuat', 4 ), ShaderInputInfo( 44, 2, 'SbQuat', 4 ), ShaderInputInfo( 52, 2, 'SbQuat', 4 ), ShaderInputInfo( 60, 2, 'SbWeight', 3 ), ShaderInputInfo( 66, 2, 'SbOffset', 3 ), ] )
IATattooBlend2D = ShaderObjectInfo( 99, 'IATattooBlend2D', 0x96284, [ShaderInputInfo( 0, 1, 'Position', 2 ), ShaderInputInfo( 8, 1, 'Texcoord', 2 ), ShaderInputInfo( 16, 1, 'Direction', 3 ), ] )
IABuilder = ShaderObjectInfo( 100, 'IABuilder', 0x6d5d5, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 14, 'VertexColor', 1 ), ShaderInputInfo( 16, 1, 'TexCoord', 2 ), ShaderInputInfo( 24, 1, 'Reserved', 2 ), ] )
IASky = ShaderObjectInfo( 101, 'IASky', 0xce69f, [ShaderInputInfo( 0, 1, 'Position', 2 ), ] )
IAAstralBody = ShaderObjectInfo( 102, 'IAAstralBody', 0x9821b, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 1, 'TexCoord', 2 ), ] )
IASkyStar = ShaderObjectInfo( 103, 'IASkyStar', 0x13845, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 1, 'Color', 3 ), ShaderInputInfo( 24, 1, 'Offset', 2 ), ] )
IAAmbientShadow = ShaderObjectInfo( 104, 'IAAmbientShadow', 0x507e4, [ShaderInputInfo( 0, 1, 'Position', 4 ), ] )
IAVertexIndexF32 = ShaderObjectInfo( 105, 'IAVertexIndexF32', 0x78320, [ShaderInputInfo( 0, 1, 'PROJECTION_INDEX', 2 ), ] )
IAVertexIndexF16 = ShaderObjectInfo( 106, 'IAVertexIndexF16', 0xc25bb, [ShaderInputInfo( 0, 2, 'PROJECTION_INDEX', 2 ), ] )
IATriangleF32 = ShaderObjectInfo( 107, 'IATriangleF32', 0x6e59d, [ShaderInputInfo( 0, 1, 'TRIANGLE_INDEX', 2 ), ShaderInputInfo( 8, 1, 'TRIANGLE_INDEX', 2 ), ShaderInputInfo( 16, 1, 'TRIANGLE_INDEX', 2 ), ] )
IATriangleF16 = ShaderObjectInfo( 108, 'IATriangleF16', 0xd4306, [ShaderInputInfo( 0, 2, 'TRIANGLE_INDEX', 2 ), ShaderInputInfo( 4, 2, 'TRIANGLE_INDEX', 2 ), ShaderInputInfo( 8, 2, 'TRIANGLE_INDEX', 2 ), ] )
IAInfParticle = ShaderObjectInfo( 109, 'IAInfParticle', 0x710f8, [ShaderInputInfo( 0, 5, 'Position', 4 ), ShaderInputInfo( 8, 14, 'VertexColor', 1 ), ShaderInputInfo( 12, 3, 'Scale', 2 ), ShaderInputInfo( 16, 3, 'Life', 2 ), ShaderInputInfo( 20, 8, 'Attribute', 4 ), ShaderInputInfo( 24, 4, 'Attribute', 2 ), ] )
IATVNoisePrimitive = ShaderObjectInfo( 110, 'IATVNoisePrimitive', 0x21938, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 2, 'TexCoord', 2 ), ShaderInputInfo( 14, 2, 'TexCoord', 2 ), ] )
IATVNoisePrimitiveVColor = ShaderObjectInfo( 111, 'IATVNoisePrimitiveVColor', 0x52377, [ShaderInputInfo( 0, 1, 'Position', 3 ), ShaderInputInfo( 12, 2, 'TexCoord', 2 ), ShaderInputInfo( 14, 2, 'TexCoord', 2 ), ShaderInputInfo( 28, 10, 'VertexColor', 3 ), ShaderInputInfo( 32, 10, 'VertexAlpha', 1 ), ] )
IA_SYSTEM_COPY = ShaderObjectInfo( 112, 'IA_SYSTEM_COPY', 0xc07ae, [] )
IA_SYSTEM_CLEAR = ShaderObjectInfo( 113, 'IA_SYSTEM_CLEAR', 0xc841c, [] )
SYSTEM_OUTPUT = ShaderObjectInfo( 114, 'SYSTEM_OUTPUT', 0xe65d9, [] )
SYSTEM_DEPTHOUT = ShaderObjectInfo( 115, 'SYSTEM_DEPTHOUT', 0xdbabe, [] )
SYSTEM_MRT2 = ShaderObjectInfo( 116, 'SYSTEM_MRT2', 0x670a3, [] )
SYSTEM_MRT3 = ShaderObjectInfo( 117, 'SYSTEM_MRT3', 0x14035, [] )
SYSTEM_MRT4 = ShaderObjectInfo( 118, 'SYSTEM_MRT4', 0x5d596, [] )
PROCEDURAL_TEXTURE_OUT = ShaderObjectInfo( 119, 'PROCEDURAL_TEXTURE_OUT', 0x706b8, [] )
IA_FILTER = ShaderObjectInfo( 120, 'IA_FILTER', 0x33c18, [] )
IA_FILTER0 = ShaderObjectInfo( 121, 'IA_FILTER0', 0x3bc6, [] )
IA_FILTER1 = ShaderObjectInfo( 122, 'IA_FILTER1', 0x70b50, [] )
IA_FILTER2 = ShaderObjectInfo( 123, 'IA_FILTER2', 0xe5aea, [] )
FILTER_OUT = ShaderObjectInfo( 124, 'FILTER_OUT', 0xca1b5, [] )
FILTER_INPUT = ShaderObjectInfo( 125, 'FILTER_INPUT', 0x872f1, [] )
FILTER_OUTPUT_16 = ShaderObjectInfo( 126, 'FILTER_OUTPUT_16', 0x2d292, [] )
SMAA_OUTPUT = ShaderObjectInfo( 127, 'SMAA_OUTPUT', 0x747f4, [] )
IA_DEVELOP_PRIM2D = ShaderObjectInfo( 128, 'IA_DEVELOP_PRIM2D', 0xdb25c, [] )
IA_DEVELOP_PRIM3D = ShaderObjectInfo( 129, 'IA_DEVELOP_PRIM3D', 0x6831d, [] )
DEVELOP_OUTPUT = ShaderObjectInfo( 130, 'DEVELOP_OUTPUT', 0x8a5f0, [] )
IA_COLLISION_VS_INPUT = ShaderObjectInfo( 131, 'IA_COLLISION_VS_INPUT', 0xa1598, [] )
COLLISION_OUT = ShaderObjectInfo( 132, 'COLLISION_OUT', 0xbc628, [] )
MATERIAL_CONTEXT = ShaderObjectInfo( 133, 'MATERIAL_CONTEXT', 0xcfca6, [] )
FOG_OUT = ShaderObjectInfo( 134, 'FOG_OUT', 0x7b5d7, [] )
SKINNING_INPUT = ShaderObjectInfo( 135, 'SKINNING_INPUT', 0x15dc1, [] )
LIGHT_PARAM = ShaderObjectInfo( 136, 'LIGHT_PARAM', 0x6065, [] )
LIGHT_OUTPUT = ShaderObjectInfo( 137, 'LIGHT_OUTPUT', 0xf4f94, [] )
DEFERRED_LIGHTING_RESULT = ShaderObjectInfo( 138, 'DEFERRED_LIGHTING_RESULT', 0x5c34f, [] )
MATERIAL_INPUT = ShaderObjectInfo( 139, 'MATERIAL_INPUT', 0x41e6d, [] )
MORPH_INPUT = ShaderObjectInfo( 140, 'MORPH_INPUT', 0x55aa6, [] )
SOFTBODY_INPUT = ShaderObjectInfo( 141, 'SOFTBODY_INPUT', 0x25636, [] )
LATTICE_DEFORM_INPUT = ShaderObjectInfo( 142, 'LATTICE_DEFORM_INPUT', 0x8f876, [] )
SWING_INPUT = ShaderObjectInfo( 143, 'SWING_INPUT', 0xfb2b, [] )
INSTANCING_INPUT = ShaderObjectInfo( 144, 'INSTANCING_INPUT', 0x97ade, [] )
PROJECTION_INPUT = ShaderObjectInfo( 145, 'PROJECTION_INPUT', 0x6d2ba, [] )
MATERIAL_OUTPUT = ShaderObjectInfo( 146, 'MATERIAL_OUTPUT', 0x31d65, [] )
MATERIAL_HS_INPUT = ShaderObjectInfo( 147, 'MATERIAL_HS_INPUT', 0x580d5, [] )
MATERIAL_HS_OUTPUT = ShaderObjectInfo( 148, 'MATERIAL_HS_OUTPUT', 0xae745, [] )
MATERIAL_OUTPUT_EX = ShaderObjectInfo( 149, 'MATERIAL_OUTPUT_EX', 0xb7ef8, [] )
IA_SWING = ShaderObjectInfo( 150, 'IA_SWING', 0xbbf48, [] )
IA_SWING2 = ShaderObjectInfo( 151, 'IA_SWING2', 0x3539d, [] )
IA_SWING_HIGH_PRECISION = ShaderObjectInfo( 152, 'IA_SWING_HIGH_PRECISION', 0xcb731, [] )
IA_SWING2_HIGH_PRECISION = ShaderObjectInfo( 153, 'IA_SWING2_HIGH_PRECISION', 0xba420, [] )
SWING_INFO = ShaderObjectInfo( 154, 'SWING_INFO', 0x530ae, [] )
IA_INSTANCING = ShaderObjectInfo( 155, 'IA_INSTANCING', 0xf5f8, [] )
IA_INSTANCING_COLOR = ShaderObjectInfo( 156, 'IA_INSTANCING_COLOR', 0x5faf2, [] )
IA_LATTICE_DEFORM = ShaderObjectInfo( 157, 'IA_LATTICE_DEFORM', 0x95853, [] )
IA_TETRA_DEFORM = ShaderObjectInfo( 158, 'IA_TETRA_DEFORM', 0x9f45c, [] )
IA_TETRA_DEFORM2 = ShaderObjectInfo( 159, 'IA_TETRA_DEFORM2', 0x9b5ab, [] )
WORLD_COORDINATE_INPUT = ShaderObjectInfo( 160, 'WORLD_COORDINATE_INPUT', 0xe9811, [] )
IA_SKIN_BRIDGE_1WT = ShaderObjectInfo( 161, 'IA_SKIN_BRIDGE_1WT', 0x8d8cf, [] )
IA_SKIN_BRIDGE_2WT = ShaderObjectInfo( 162, 'IA_SKIN_BRIDGE_2WT', 0xe6696, [] )
IA_SKIN_BRIDGE_4WT = ShaderObjectInfo( 163, 'IA_SKIN_BRIDGE_4WT', 0x31a24, [] )
IA_SKIN_BRIDGE_8WT = ShaderObjectInfo( 164, 'IA_SKIN_BRIDGE_8WT', 0x9e340, [] )
IA_SKIN_BRIDGE_4WT_4M = ShaderObjectInfo( 165, 'IA_SKIN_BRIDGE_4WT_4M', 0x8717a, [] )
IA_SKIN_TB_1WT = ShaderObjectInfo( 166, 'IA_SKIN_TB_1WT', 0x53790, [] )
IA_SKIN_TBN_1WT = ShaderObjectInfo( 167, 'IA_SKIN_TBN_1WT', 0xe29cd, [] )
IA_SKIN_TBC_1WT = ShaderObjectInfo( 168, 'IA_SKIN_TBC_1WT', 0xeed7c, [] )
IA_SKIN_TBNLA_1WT = ShaderObjectInfo( 169, 'IA_SKIN_TBNLA_1WT', 0x2a3a1, [] )
IA_SKIN_TB_2WT = ShaderObjectInfo( 170, 'IA_SKIN_TB_2WT', 0x389c9, [] )
IA_SKIN_TBN_2WT = ShaderObjectInfo( 171, 'IA_SKIN_TBN_2WT', 0x89794, [] )
IA_SKIN_TBC_2WT = ShaderObjectInfo( 172, 'IA_SKIN_TBC_2WT', 0x85325, [] )
IA_SKIN_TBNLA_2WT = ShaderObjectInfo( 173, 'IA_SKIN_TBNLA_2WT', 0x41df8, [] )
IA_SKIN_TB_4WT = ShaderObjectInfo( 174, 'IA_SKIN_TB_4WT', 0xef57b, [] )
IA_SKIN_TBN_4WT = ShaderObjectInfo( 175, 'IA_SKIN_TBN_4WT', 0x5eb26, [] )
IA_SKIN_TBC_4WT = ShaderObjectInfo( 176, 'IA_SKIN_TBC_4WT', 0x52f97, [] )
IA_SKIN_TBNLA_4WT = ShaderObjectInfo( 177, 'IA_SKIN_TBNLA_4WT', 0x9614a, [] )
IA_SKIN_TB_8WT = ShaderObjectInfo( 178, 'IA_SKIN_TB_8WT', 0x40c1f, [] )
IA_SKIN_TBN_8WT = ShaderObjectInfo( 179, 'IA_SKIN_TBN_8WT', 0xf1242, [] )
IA_SKIN_TBC_8WT = ShaderObjectInfo( 180, 'IA_SKIN_TBC_8WT', 0xfd6f3, [] )
IA_SKIN_TBNLA_8WT = ShaderObjectInfo( 181, 'IA_SKIN_TBNLA_8WT', 0x3982e, [] )
IA_NONSKIN_TB = ShaderObjectInfo( 182, 'IA_NONSKIN_TB', 0x3168b, [] )
IA_NONSKIN_TBC = ShaderObjectInfo( 183, 'IA_NONSKIN_TBC', 0x7994, [] )
IA_NONSKIN_TBL = ShaderObjectInfo( 184, 'IA_NONSKIN_TBL', 0xf6405, [] )
IA_NONSKIN_TBL_LA = ShaderObjectInfo( 185, 'IA_NONSKIN_TBL_LA', 0xe28ce, [] )
IA_NONSKIN_TBN = ShaderObjectInfo( 186, 'IA_NONSKIN_TBN', 0x10529, [] )
IA_NONSKIN_TBA = ShaderObjectInfo( 187, 'IA_NONSKIN_TBA', 0xe18b8, [] )
IA_NONSKIN_TBNL = ShaderObjectInfo( 188, 'IA_NONSKIN_TBNL', 0x3d4d2, [] )
IA_NONSKIN_TBNL_LA = ShaderObjectInfo( 189, 'IA_NONSKIN_TBNL_LA', 0xe98ec, [] )
IA_NONSKIN_TBNC = ShaderObjectInfo( 190, 'IA_NONSKIN_TBNC', 0xcc943, [] )
IA_NONSKIN_TBNA = ShaderObjectInfo( 191, 'IA_NONSKIN_TBNA', 0x2a86f, [] )
IA_NONSKIN_TBLA = ShaderObjectInfo( 192, 'IA_NONSKIN_TBLA', 0x4caed, [] )
IA_NONSKIN_TBCA = ShaderObjectInfo( 193, 'IA_NONSKIN_TBCA', 0xcd622, [] )
IA_NONSKIN_TBNCA = ShaderObjectInfo( 194, 'IA_NONSKIN_TBNCA', 0x3ede5, [] )
IA_NONSKIN_TBNLA = ShaderObjectInfo( 195, 'IA_NONSKIN_TBNLA', 0xbf12a, [] )
IA_NONSKIN_B = ShaderObjectInfo( 196, 'IA_NONSKIN_B', 0x6cb0, [] )
IA_NONSKIN_BC = ShaderObjectInfo( 197, 'IA_NONSKIN_BC', 0xc93ca, [] )
IA_NONSKIN_BL = ShaderObjectInfo( 198, 'IA_NONSKIN_BL', 0x38e5b, [] )
IA_NONSKIN_BL_LA = ShaderObjectInfo( 199, 'IA_NONSKIN_BL_LA', 0x2d7c, [] )
IA_NONSKIN_BA = ShaderObjectInfo( 200, 'IA_NONSKIN_BA', 0x2f2e6, [] )
IA_NONSKIN_BLA = ShaderObjectInfo( 201, 'IA_NONSKIN_BLA', 0x6eaf4, [] )
IA_NONSKIN_BCA = ShaderObjectInfo( 202, 'IA_NONSKIN_BCA', 0xef63b, [] )
IA_SKIN_OTB_4WT_4M = ShaderObjectInfo( 203, 'IA_SKIN_OTB_4WT_4M', 0xab495, [] )
IA_NONSKIN_TBN_4M = ShaderObjectInfo( 204, 'IA_NONSKIN_TBN_4M', 0x75f90, [] )
MATERIAL_VELOCITY_OUTPUT = ShaderObjectInfo( 205, 'MATERIAL_VELOCITY_OUTPUT', 0x44a51, [] )
IA_SKIN_VELOCITY_EDGE = ShaderObjectInfo( 206, 'IA_SKIN_VELOCITY_EDGE', 0x7760, [] )
OUTLINE_DETECTOR = ShaderObjectInfo( 207, 'OUTLINE_DETECTOR', 0xaf772, [] )
MATERIAL_OUTLINE_OUTPUT = ShaderObjectInfo( 208, 'MATERIAL_OUTLINE_OUTPUT', 0xa4d9b, [] )
ShadowReceiveParam = ShaderObjectInfo( 209, 'ShadowReceiveParam', 0x74524, [] )
ShadowReceiveContext = ShaderObjectInfo( 210, 'ShadowReceiveContext', 0x82e10, [] )
SHADOWRECEIVE_OUTPUT = ShaderObjectInfo( 211, 'SHADOWRECEIVE_OUTPUT', 0xfe3ab, [] )
SHADOWRECEIVE_DEFERRED_OUTPUT = ShaderObjectInfo( 212, 'SHADOWRECEIVE_DEFERRED_OUTPUT', 0x9f0e6, [] )
IA_DUAL_PARABOLOID = ShaderObjectInfo( 213, 'IA_DUAL_PARABOLOID', 0xd5abd, [] )
DUAL_PARABOLOID_OUTPUT = ShaderObjectInfo( 214, 'DUAL_PARABOLOID_OUTPUT', 0x258e3, [] )
DEFERRED_LIGHTING_GEOMETRY_PARAMETER = ShaderObjectInfo( 215, 'DEFERRED_LIGHTING_GEOMETRY_PARAMETER', 0xdaa39, [] )
DIFERRED_LIGHTING_MRT = ShaderObjectInfo( 216, 'DIFERRED_LIGHTING_MRT', 0xcff23, [] )
DEFERRED_LIGHTING_GBUFFER_PASS_VS_OUTPUT = ShaderObjectInfo( 217, 'DEFERRED_LIGHTING_GBUFFER_PASS_VS_OUTPUT', 0xe90ec, [] )
IA_DEFERRED_LIGHTING_LIGHT_VOLUME = ShaderObjectInfo( 218, 'IA_DEFERRED_LIGHTING_LIGHT_VOLUME', 0x1adf9, [] )
DEFERRED_LIGHTING_LIGHT_VOLUME_VS_OUTPUT = ShaderObjectInfo( 219, 'DEFERRED_LIGHTING_LIGHT_VOLUME_VS_OUTPUT', 0x6a816, [] )
DEFERRED_LIGHTING_LIGHT_VOLUME_MRT_PS_OUTPUT = ShaderObjectInfo( 220, 'DEFERRED_LIGHTING_LIGHT_VOLUME_MRT_PS_OUTPUT', 0xc99bf, [] )
RSM_PARAM = ShaderObjectInfo( 221, 'RSM_PARAM', 0x3913b, [] )
RSM_OUTPUT = ShaderObjectInfo( 222, 'RSM_OUTPUT', 0xa8096, [] )
ADHESION_INPUT = ShaderObjectInfo( 223, 'ADHESION_INPUT', 0xbf40b, [] )
ADHESION_OUTPUT = ShaderObjectInfo( 224, 'ADHESION_OUTPUT', 0x1c6e2, [] )
ADHESION_OUTPUT_PV = ShaderObjectInfo( 225, 'ADHESION_OUTPUT_PV', 0x64692, [] )
HS_PN_CONSTANT = ShaderObjectInfo( 226, 'HS_PN_CONSTANT', 0x60350, [] )
HS_PH_CONSTANT = ShaderObjectInfo( 227, 'HS_PH_CONSTANT', 0x87317, [] )
MATERIAL_PH_OUTPUT = ShaderObjectInfo( 228, 'MATERIAL_PH_OUTPUT', 0x32a51, [] )
HS_DM_CONSTANT = ShaderObjectInfo( 229, 'HS_DM_CONSTANT', 0xe0f1a, [] )
SHADOWCAST_INPUT = ShaderObjectInfo( 230, 'SHADOWCAST_INPUT', 0x65d64, [] )
SHADOWCAST_OUTPUT = ShaderObjectInfo( 231, 'SHADOWCAST_OUTPUT', 0x39782, [] )
IA_PRIMITIVE_CLOUD_BILLBOARD = ShaderObjectInfo( 232, 'IA_PRIMITIVE_CLOUD_BILLBOARD', 0xbc7fb, [] )
IA_PRIMITIVE_CLOUD = ShaderObjectInfo( 233, 'IA_PRIMITIVE_CLOUD', 0x21249, [] )
IA_PRIMITIVE_SPRITE = ShaderObjectInfo( 234, 'IA_PRIMITIVE_SPRITE', 0x3a126, [] )
IA_PRIMITIVE_NT = ShaderObjectInfo( 235, 'IA_PRIMITIVE_NT', 0x8d153, [] )
IA_PRIMITIVE_POLYLINE = ShaderObjectInfo( 236, 'IA_PRIMITIVE_POLYLINE', 0x10c04, [] )
IA_PRIMITIVE_POLYGON = ShaderObjectInfo( 237, 'IA_PRIMITIVE_POLYGON', 0x5bbc7, [] )
PRIMITIVE_VS_INPUT = ShaderObjectInfo( 238, 'PRIMITIVE_VS_INPUT', 0x6b8f1, [] )
PRIMITIVE_VS_OUTPUT = ShaderObjectInfo( 239, 'PRIMITIVE_VS_OUTPUT', 0xbf0ac, [] )
PRIMITIVE_HS_INPUT = ShaderObjectInfo( 240, 'PRIMITIVE_HS_INPUT', 0x79be8, [] )
PRIMITIVE_HS_CONST_DATA = ShaderObjectInfo( 241, 'PRIMITIVE_HS_CONST_DATA', 0x796b4, [] )
PRIMITIVE_HS_CONTROL_POINT = ShaderObjectInfo( 242, 'PRIMITIVE_HS_CONTROL_POINT', 0x8a335, [] )
PRIMITIVE_DS_OUTPUT = ShaderObjectInfo( 243, 'PRIMITIVE_DS_OUTPUT', 0xd9a5b, [] )
PRIMITIVE_DC_OUTPUT = ShaderObjectInfo( 244, 'PRIMITIVE_DC_OUTPUT', 0x6ab70, [] )
RADIAL_BLUR_OUTPUT = ShaderObjectInfo( 245, 'RADIAL_BLUR_OUTPUT', 0xba85c, [] )
TVNOISE_FILTER_OUTPUT = ShaderObjectInfo( 246, 'TVNOISE_FILTER_OUTPUT', 0xfc9bb, [] )
VARIANCE_FILTER_OUTPUT = ShaderObjectInfo( 247, 'VARIANCE_FILTER_OUTPUT', 0x62b51, [] )
CUBEMAP_VARIANCE_FILTER_OUTPUT = ShaderObjectInfo( 248, 'CUBEMAP_VARIANCE_FILTER_OUTPUT', 0x2a944, [] )
BLOOM_FILTER_OUTPUT = ShaderObjectInfo( 249, 'BLOOM_FILTER_OUTPUT', 0x553c3, [] )
IMAGE_PLANE_FILTER_OUT = ShaderObjectInfo( 250, 'IMAGE_PLANE_FILTER_OUT', 0xd800d, [] )
IA_CUBEMAP_FILTER = ShaderObjectInfo( 251, 'IA_CUBEMAP_FILTER', 0x5add1, [] )
CUBEMAP_FILTER_OUTPUT = ShaderObjectInfo( 252, 'CUBEMAP_FILTER_OUTPUT', 0x3d8db, [] )
IA_GSDOFFILTER = ShaderObjectInfo( 253, 'IA_GSDOFFILTER', 0x9c9cc, [] )
VS_DOF_INPUT = ShaderObjectInfo( 254, 'VS_DOF_INPUT', 0x1dfcd, [] )
GS_DOF_INPUT = ShaderObjectInfo( 255, 'GS_DOF_INPUT', 0xc7e5e, [] )
PS_DOF_INPUT = ShaderObjectInfo( 256, 'PS_DOF_INPUT', 0xc7a2d, [] )
GS_DOF_OUTPUT = ShaderObjectInfo( 257, 'GS_DOF_OUTPUT', 0x7c413, [] )
SSAO_OUTPUT = ShaderObjectInfo( 258, 'SSAO_OUTPUT', 0xae49d, [] )
SSAO_NORMAL_OUT = ShaderObjectInfo( 259, 'SSAO_NORMAL_OUT', 0xa4beb, [] )
IA_BOKEH = ShaderObjectInfo( 260, 'IA_BOKEH', 0x96e3e, [] )
TANGENT_FILTER_OUT = ShaderObjectInfo( 261, 'TANGENT_FILTER_OUT', 0x76b67, [] )
PRIM_FOG_OUT = ShaderObjectInfo( 262, 'PRIM_FOG_OUT', 0x3bb7f, [] )
PRIM_EYE_OUT = ShaderObjectInfo( 263, 'PRIM_EYE_OUT', 0x41304, [] )
PRIM_NTB_OUT = ShaderObjectInfo( 264, 'PRIM_NTB_OUT', 0xd8830, [] )
IA_WATER = ShaderObjectInfo( 265, 'IA_WATER', 0xe1cc8, [] )
IA_WATER_VCOLOR = ShaderObjectInfo( 266, 'IA_WATER_VCOLOR', 0xf8a54, [] )
IA_WATER_RIPPLE = ShaderObjectInfo( 267, 'IA_WATER_RIPPLE', 0x61b3a, [] )
WATER_OUTPUT = ShaderObjectInfo( 268, 'WATER_OUTPUT', 0xf3318, [] )
WATER_RIPPLE_OUTPUT = ShaderObjectInfo( 269, 'WATER_RIPPLE_OUTPUT', 0xf552, [] )
WATER_POSITION_OUTPUT = ShaderObjectInfo( 270, 'WATER_POSITION_OUTPUT', 0x874fd, [] )
IA_GUI = ShaderObjectInfo( 271, 'IA_GUI', 0xea095, [] )
VS_OUT_GUI = ShaderObjectInfo( 272, 'VS_OUT_GUI', 0x2dc14, [] )
IA_TEXTURE_BLEND = ShaderObjectInfo( 273, 'IA_TEXTURE_BLEND', 0x940df, [] )
TEXTURE_BLEND_OUTPUT = ShaderObjectInfo( 274, 'TEXTURE_BLEND_OUTPUT', 0x31675, [] )
IA_GPU_PARTICLE = ShaderObjectInfo( 275, 'IA_GPU_PARTICLE', 0xff8fd, [] )
IA_GPU_LINE_PARTICLE = ShaderObjectInfo( 276, 'IA_GPU_LINE_PARTICLE', 0x730a6, [] )
IA_GPU_POLYLINE_PARTICLE = ShaderObjectInfo( 277, 'IA_GPU_POLYLINE_PARTICLE', 0x78491, [] )
GPU_PARTICLE_VS_INPUT = ShaderObjectInfo( 278, 'GPU_PARTICLE_VS_INPUT', 0x621ba, [] )
GPU_PARTICLE_PS_INPUT = ShaderObjectInfo( 279, 'GPU_PARTICLE_PS_INPUT', 0x9283d, [] )
IA_LIGHTSHAFT_INPUT = ShaderObjectInfo( 280, 'IA_LIGHTSHAFT_INPUT', 0x229bf, [] )
LIGHTSHAFT_OUTPUT = ShaderObjectInfo( 281, 'LIGHTSHAFT_OUTPUT', 0x94b18, [] )
IA_GRASS = ShaderObjectInfo( 282, 'IA_GRASS', 0x97e1, [] )
IA_GRASS_HICOMP = ShaderObjectInfo( 283, 'IA_GRASS_HICOMP', 0xcdae, [] )
IA_GRASS_HICOMP2 = ShaderObjectInfo( 284, 'IA_GRASS_HICOMP2', 0x5bfa2, [] )
IA_GRASS_LOWEST = ShaderObjectInfo( 285, 'IA_GRASS_LOWEST', 0x1c4c0, [] )
IA_GRASS_POINT = ShaderObjectInfo( 286, 'IA_GRASS_POINT', 0xb3523, [] )
GRASS_INPUT = ShaderObjectInfo( 287, 'GRASS_INPUT', 0x1b919, [] )
GRASS_OUTPUT = ShaderObjectInfo( 288, 'GRASS_OUTPUT', 0x40de7, [] )
GRASS_SHADOWRECEIVE_OUTPUT = ShaderObjectInfo( 289, 'GRASS_SHADOWRECEIVE_OUTPUT', 0x66dfd, [] )
DYNAMICEDIT_INPUT = ShaderObjectInfo( 290, 'DYNAMICEDIT_INPUT', 0xcbc3, [] )
DYNAMICEDIT_OUTPUT = ShaderObjectInfo( 291, 'DYNAMICEDIT_OUTPUT', 0x875f, [] )
GRASS_INFOMATION = ShaderObjectInfo( 292, 'GRASS_INFOMATION', 0x34009, [] )
GRASS_REFLECTION = ShaderObjectInfo( 293, 'GRASS_REFLECTION', 0x36f5b, [] )
DEFERRED_MATERIAL_PS_OUTPUT = ShaderObjectInfo( 294, 'DEFERRED_MATERIAL_PS_OUTPUT', 0xed79e, [] )
IA_GRASS_SPU_INPUT = ShaderObjectInfo( 295, 'IA_GRASS_SPU_INPUT', 0x9718e, [] )
IA_GRASS_OUTSOURCING = ShaderObjectInfo( 296, 'IA_GRASS_OUTSOURCING', 0xc5a78, [] )
IA_GRASS_OUTSOURCING_F32 = ShaderObjectInfo( 297, 'IA_GRASS_OUTSOURCING_F32', 0xbf6f7, [] )
GRASS_SPU_INPUT = ShaderObjectInfo( 298, 'GRASS_SPU_INPUT', 0xcd440, [] )
GRASS_OUTSOURCING_INPUT = ShaderObjectInfo( 299, 'GRASS_OUTSOURCING_INPUT', 0x9a582, [] )
IA_MIRAGEFILTER = ShaderObjectInfo( 300, 'IA_MIRAGEFILTER', 0xd1c9e, [] )
MIRAGE_FILTER_VS_INPUT = ShaderObjectInfo( 301, 'MIRAGE_FILTER_VS_INPUT', 0xa01bd, [] )
MIRAGE_FILTER_PS_INPUT = ShaderObjectInfo( 302, 'MIRAGE_FILTER_PS_INPUT', 0x5083a, [] )
MIRAGE_HEAT_VS_INPUT = ShaderObjectInfo( 303, 'MIRAGE_HEAT_VS_INPUT', 0x8b6cd, [] )
MIRAGE_HEAT_PS_INPUT = ShaderObjectInfo( 304, 'MIRAGE_HEAT_PS_INPUT', 0x7bf4a, [] )
IA_SIMWATER_FOR_VIEW_VS_INPUT = ShaderObjectInfo( 305, 'IA_SIMWATER_FOR_VIEW_VS_INPUT', 0x6a81, [] )
SIMWATER_FOR_VIEW_VS_OUTPUT = ShaderObjectInfo( 306, 'SIMWATER_FOR_VIEW_VS_OUTPUT', 0xf4adc, [] )
SIMWATER_FOR_VIEW_PS_INPUT = ShaderObjectInfo( 307, 'SIMWATER_FOR_VIEW_PS_INPUT', 0x71052, [] )
IA_SOFTBODY_QUAD = ShaderObjectInfo( 308, 'IA_SOFTBODY_QUAD', 0x1c10e, [] )
IA_SOFTBODY_VERTEX = ShaderObjectInfo( 309, 'IA_SOFTBODY_VERTEX', 0x17b34, [] )
IA_SOFTBODY_DECOUPLE = ShaderObjectInfo( 310, 'IA_SOFTBODY_DECOUPLE', 0x910b8, [] )
IA_SOFTBODY_VERTEX_NOVTF = ShaderObjectInfo( 311, 'IA_SOFTBODY_VERTEX_NOVTF', 0x4f4a8, [] )
IA_SOFTBODY_VERTEX_PS3 = ShaderObjectInfo( 312, 'IA_SOFTBODY_VERTEX_PS3', 0x9ba18, [] )
IA_SOFTBODY_DECOUPLE_NOVTF = ShaderObjectInfo( 313, 'IA_SOFTBODY_DECOUPLE_NOVTF', 0xde9fc, [] )
SB_IC_OUTPUT = ShaderObjectInfo( 314, 'SB_IC_OUTPUT', 0xe5730, [] )
SB_INPUT = ShaderObjectInfo( 315, 'SB_INPUT', 0x60dbb, [] )
SB_OUTPUT = ShaderObjectInfo( 316, 'SB_OUTPUT', 0x8b897, [] )
SB_OUTPUT2 = ShaderObjectInfo( 317, 'SB_OUTPUT2', 0xdbfdf, [] )
SB_PSMRTOUT = ShaderObjectInfo( 318, 'SB_PSMRTOUT', 0xd470d, [] )
SB_PSMRTOUT2 = ShaderObjectInfo( 319, 'SB_PSMRTOUT2', 0x6c07a, [] )
SB_PSMRTOUT3 = ShaderObjectInfo( 320, 'SB_PSMRTOUT3', 0x1f0ec, [] )
TATTOO_OUTPUT = ShaderObjectInfo( 321, 'TATTOO_OUTPUT', 0x960e3, [] )
IA_TATTOO_BLEND2D = ShaderObjectInfo( 322, 'IA_TATTOO_BLEND2D', 0x9bfd7, [] )
TATTOO_BLEND2D_OUTPUT = ShaderObjectInfo( 323, 'TATTOO_BLEND2D_OUTPUT', 0xbba0b, [] )
IA_BUILDER = ShaderObjectInfo( 324, 'IA_BUILDER', 0xbc3e0, [] )
BUILDER_VS_INPUT = ShaderObjectInfo( 325, 'BUILDER_VS_INPUT', 0xe48a8, [] )
BUILDER_PS_INPUT = ShaderObjectInfo( 326, 'BUILDER_PS_INPUT', 0x1412f, [] )
IA_SKY = ShaderObjectInfo( 327, 'IA_SKY', 0x78482, [] )
IA_ASTRAL_BODY = ShaderObjectInfo( 328, 'IA_ASTRAL_BODY', 0xbc9a5, [] )
SKY_MAP_VS_OUT = ShaderObjectInfo( 329, 'SKY_MAP_VS_OUT', 0xe49c1, [] )
SKY_OUT = ShaderObjectInfo( 330, 'SKY_OUT', 0x6d4b, [] )
ASTRAL_BODY_VS_OUT = ShaderObjectInfo( 331, 'ASTRAL_BODY_VS_OUT', 0x6136b, [] )
IA_SKY_STAR = ShaderObjectInfo( 332, 'IA_SKY_STAR', 0x3377f, [] )
SKY_STAR_OUT = ShaderObjectInfo( 333, 'SKY_STAR_OUT', 0xa99f4, [] )
SKY_STARRY_SKY_OUT = ShaderObjectInfo( 334, 'SKY_STARRY_SKY_OUT', 0xb7070, [] )
IA_AMBIENT_SHADOW = ShaderObjectInfo( 335, 'IA_AMBIENT_SHADOW', 0x3d2e3, [] )
AMBIENT_SHADOW_OUT = ShaderObjectInfo( 336, 'AMBIENT_SHADOW_OUT', 0xb8e92, [] )
OCCLUSION_QUERY_VS_OUTPUT = ShaderObjectInfo( 337, 'OCCLUSION_QUERY_VS_OUTPUT', 0x28c98, [] )
MRTOutput = ShaderObjectInfo( 338, 'MRTOutput', 0x28615, [] )
MRTOutput3T = ShaderObjectInfo( 339, 'MRTOutput3T', 0x3bcde, [] )
IA_VERTEX_INDEX_F32 = ShaderObjectInfo( 340, 'IA_VERTEX_INDEX_F32', 0x7a857, [] )
IA_VERTEX_INDEX_F16 = ShaderObjectInfo( 341, 'IA_VERTEX_INDEX_F16', 0xc0ecc, [] )
TRIANGLE_INPUT = ShaderObjectInfo( 342, 'TRIANGLE_INPUT', 0xe6233, [] )
TRIANGLE_OUTPUT = ShaderObjectInfo( 343, 'TRIANGLE_OUTPUT', 0x8ebea, [] )
IA_TRIANGLE_INDEX_F32 = ShaderObjectInfo( 344, 'IA_TRIANGLE_INDEX_F32', 0x4bec1, [] )
IA_TRIANGLE_INDEX_F16 = ShaderObjectInfo( 345, 'IA_TRIANGLE_INDEX_F16', 0xf185a, [] )
MIRROR_OUTPUT = ShaderObjectInfo( 346, 'MIRROR_OUTPUT', 0x224d1, [] )
MIRROR_FILTER = ShaderObjectInfo( 347, 'MIRROR_FILTER', 0x86f52, [] )
IA_INF_PARTICLE = ShaderObjectInfo( 348, 'IA_INF_PARTICLE', 0x7fec5, [] )
INF_PARTICLE_VS_INPUT = ShaderObjectInfo( 349, 'INF_PARTICLE_VS_INPUT', 0x370eb, [] )
INF_PARTICLE_PS_INPUT = ShaderObjectInfo( 350, 'INF_PARTICLE_PS_INPUT', 0xc796c, [] )
IA_TVNoisePrimitive = ShaderObjectInfo( 351, 'IA_TVNoisePrimitive', 0xea108, [] )
IA_TVNoisePrimitive_VCOLOR = ShaderObjectInfo( 352, 'IA_TVNoisePrimitive_VCOLOR', 0x73b9c, [] )
TVNoisePrimitive_OUTPUT = ShaderObjectInfo( 353, 'TVNoisePrimitive_OUTPUT', 0x22c41, [] )
_DOLLAR_Globals = ShaderObjectInfo( 354, '$Globals', 0x7b2c2, [] )
ComputeVals = ShaderObjectInfo( 355, 'ComputeVals', 0x42441, [] )
CBViewProjection = ShaderObjectInfo( 356, 'CBViewProjection', 0xb933b, [] )
CBScreen = ShaderObjectInfo( 357, 'CBScreen', 0x9446d, [] )
CBViewProjectionPF = ShaderObjectInfo( 358, 'CBViewProjectionPF', 0xff2c, [] )
CBViewFrustum = ShaderObjectInfo( 359, 'CBViewFrustum', 0x6d556, [] )
CBWorld = ShaderObjectInfo( 360, 'CBWorld', 0x42d58, [] )
CBTest = ShaderObjectInfo( 361, 'CBTest', 0xb2399, [] )
CBPicker = ShaderObjectInfo( 362, 'CBPicker', 0x76fdd, [] )
CBMipLevel = ShaderObjectInfo( 363, 'CBMipLevel', 0x1c76a, [] )
CBHDRFactor = ShaderObjectInfo( 364, 'CBHDRFactor', 0xc3b63, [] )
CBROPTest = ShaderObjectInfo( 365, 'CBROPTest', 0xf90c1, [] )
CBBlendFactor = ShaderObjectInfo( 366, 'CBBlendFactor', 0x17fa6, [] )
SSPoint = ShaderObjectInfo( 367, 'SSPoint', 0x282cf, [] )
SSLinear = ShaderObjectInfo( 368, 'SSLinear', 0x93bbf, [] )
SSAnisotoropic = ShaderObjectInfo( 369, 'SSAnisotoropic', 0xa82cc, [] )
SSWrapPoint = ShaderObjectInfo( 370, 'SSWrapPoint', 0x41382, [] )
SSWrapLinear = ShaderObjectInfo( 371, 'SSWrapLinear', 0x71003, [] )
SSWrapAnisotoropic = ShaderObjectInfo( 372, 'SSWrapAnisotoropic', 0x99e5f, [] )
SSBorderPoint = ShaderObjectInfo( 373, 'SSBorderPoint', 0x344a, [] )
SSBorderLinear = ShaderObjectInfo( 374, 'SSBorderLinear', 0x58ea6, [] )
SSLinearMipPoint = ShaderObjectInfo( 375, 'SSLinearMipPoint', 0x9099a, [] )
SSClampPoint = ShaderObjectInfo( 376, 'SSClampPoint', 0xd6fa6, [] )
SSClampLinear = ShaderObjectInfo( 377, 'SSClampLinear', 0x11dae, [] )
BSDefault = ShaderObjectInfo( 378, 'BSDefault', 0x4d2c8, [] )
BSSolid = ShaderObjectInfo( 379, 'BSSolid', 0x62b2d, [] )
BSSolidEx = ShaderObjectInfo( 380, 'BSSolidEx', 0x67927, [] )
BSBlendAlpha = ShaderObjectInfo( 381, 'BSBlendAlpha', 0x23baf, [] )
BSComposite = ShaderObjectInfo( 382, 'BSComposite', 0xd4823, [] )
BSInvComposite = ShaderObjectInfo( 383, 'BSInvComposite', 0xeb00e, [] )
BSBlendInvAlpha = ShaderObjectInfo( 384, 'BSBlendInvAlpha', 0x3e21b, [] )
BSAdd = ShaderObjectInfo( 385, 'BSAdd', 0x4f92, [] )
BSMul = ShaderObjectInfo( 386, 'BSMul', 0x81dd4, [] )
BSAddAlpha = ShaderObjectInfo( 387, 'BSAddAlpha', 0xd3b1d, [] )
BSAddInvAlpha = ShaderObjectInfo( 388, 'BSAddInvAlpha', 0x9463d, [] )
BSBlendFactor = ShaderObjectInfo( 389, 'BSBlendFactor', 0xa07b0, [] )
BSBlendFactorAlpha = ShaderObjectInfo( 390, 'BSBlendFactorAlpha', 0x13c43, [] )
BSMax = ShaderObjectInfo( 391, 'BSMax', 0xc1efc, [] )
BSNoWrite = ShaderObjectInfo( 392, 'BSNoWrite', 0x52518, [] )
BSAZero = ShaderObjectInfo( 393, 'BSAZero', 0x6cec1, [] )
BSAAdd = ShaderObjectInfo( 394, 'BSAAdd', 0x936d, [] )
BSASub = ShaderObjectInfo( 395, 'BSASub', 0x86256, [] )
BSAInvert = ShaderObjectInfo( 396, 'BSAInvert', 0xb806a, [] )
BSRGBWrite = ShaderObjectInfo( 397, 'BSRGBWrite', 0x28bca, [] )
BSRWrite = ShaderObjectInfo( 398, 'BSRWrite', 0x61d96, [] )
BSGWrite = ShaderObjectInfo( 399, 'BSGWrite', 0xd8ebe, [] )
BSBWrite = ShaderObjectInfo( 400, 'BSBWrite', 0x1f0d, [] )
BSAWrite = ShaderObjectInfo( 401, 'BSAWrite', 0x46da3, [] )
BSAddColor = ShaderObjectInfo( 402, 'BSAddColor', 0xb4a9e, [] )
BSBlendColor = ShaderObjectInfo( 403, 'BSBlendColor', 0x44a2c, [] )
BSRevSubAlpha = ShaderObjectInfo( 404, 'BSRevSubAlpha', 0xc4064, [] )
BSRevSubInvAlpha = ShaderObjectInfo( 405, 'BSRevSubInvAlpha', 0xa161b, [] )
BSRevSubBlendAlpha = ShaderObjectInfo( 406, 'BSRevSubBlendAlpha', 0x7017, [] )
BSRevSubColor = ShaderObjectInfo( 407, 'BSRevSubColor', 0xa31e7, [] )
BSRevSubBlendColor = ShaderObjectInfo( 408, 'BSRevSubBlendColor', 0x60194, [] )
BSRevSub = ShaderObjectInfo( 409, 'BSRevSub', 0x6a583, [] )
BSAddAlphaRGB = ShaderObjectInfo( 410, 'BSAddAlphaRGB', 0x3e185, [] )
BSBlendAlphaRGB = ShaderObjectInfo( 411, 'BSBlendAlphaRGB', 0x945a3, [] )
BSAddColorRGB = ShaderObjectInfo( 412, 'BSAddColorRGB', 0x61ae4, [] )
BSBlendColorRGB = ShaderObjectInfo( 413, 'BSBlendColorRGB', 0xcbec2, [] )
BSAddRGB = ShaderObjectInfo( 414, 'BSAddRGB', 0x87d9c, [] )
BSRevSubAlphaRGB = ShaderObjectInfo( 415, 'BSRevSubAlphaRGB', 0xb1a3, [] )
BSRevSubBlendAlphaRGB = ShaderObjectInfo( 416, 'BSRevSubBlendAlphaRGB', 0xdff3a, [] )
BSRevSubColorRGB = ShaderObjectInfo( 417, 'BSRevSubColorRGB', 0x54ac2, [] )
BSRevSubBlendColorRGB = ShaderObjectInfo( 418, 'BSRevSubBlendColorRGB', 0x8045b, [] )
BSRevSubRGB = ShaderObjectInfo( 419, 'BSRevSubRGB', 0xdd886, [] )
BSMinAlpha = ShaderObjectInfo( 420, 'BSMinAlpha', 0xe6cf4, [] )
BSMaxAlpha = ShaderObjectInfo( 421, 'BSMaxAlpha', 0xec315, [] )
BSMinAlphaRGB = ShaderObjectInfo( 422, 'BSMinAlphaRGB', 0x9726c, [] )
BSMaxAlphaRGB = ShaderObjectInfo( 423, 'BSMaxAlphaRGB', 0x40963, [] )
BSBlendAlphaEx = ShaderObjectInfo( 424, 'BSBlendAlphaEx', 0x4959e, [] )
BSAddAlphaEx = ShaderObjectInfo( 425, 'BSAddAlphaEx', 0x7d43b, [] )
BSBlendColorEx = ShaderObjectInfo( 426, 'BSBlendColorEx', 0x8a90a, [] )
BSAddColorEx = ShaderObjectInfo( 427, 'BSAddColorEx', 0xbe8af, [] )
BSAccumulateColorAlpha = ShaderObjectInfo( 428, 'BSAccumulateColorAlpha', 0x7c9ee, [] )
DSDefault = ShaderObjectInfo( 429, 'DSDefault', 0xeab42, [] )
DSZTestWrite = ShaderObjectInfo( 430, 'DSZTestWrite', 0xb8139, [] )
DSZTestWriteGT = ShaderObjectInfo( 431, 'DSZTestWriteGT', 0x50a08, [] )
DSZTest = ShaderObjectInfo( 432, 'DSZTest', 0x7d2f6, [] )
DSZWrite = ShaderObjectInfo( 433, 'DSZWrite', 0xa967c, [] )
DSZWriteStencilWrite = ShaderObjectInfo( 434, 'DSZWriteStencilWrite', 0xd79e0, [] )
DSZTestWriteStencilWrite = ShaderObjectInfo( 435, 'DSZTestWriteStencilWrite', 0xc80a6, [] )
DSZTestStencilWrite = ShaderObjectInfo( 436, 'DSZTestStencilWrite', 0x30511, [] )
DSStencilWrite = ShaderObjectInfo( 437, 'DSStencilWrite', 0x45aeb, [] )
RSDefault = ShaderObjectInfo( 438, 'RSDefault', 0x490b9, [] )
RSMesh = ShaderObjectInfo( 439, 'RSMesh', 0x108cf, [] )
RSMeshBias1 = ShaderObjectInfo( 440, 'RSMeshBias1', 0xc220b, [] )
RSMeshBias2 = ShaderObjectInfo( 441, 'RSMeshBias2', 0x573b1, [] )
RSMeshBias3 = ShaderObjectInfo( 442, 'RSMeshBias3', 0x24327, [] )
RSMeshBias4 = ShaderObjectInfo( 443, 'RSMeshBias4', 0x6d684, [] )
RSMeshBias5 = ShaderObjectInfo( 444, 'RSMeshBias5', 0x1e612, [] )
RSMeshBias6 = ShaderObjectInfo( 445, 'RSMeshBias6', 0x8b7a8, [] )
RSMeshBias7 = ShaderObjectInfo( 446, 'RSMeshBias7', 0xf873e, [] )
RSMeshBias8 = ShaderObjectInfo( 447, 'RSMeshBias8', 0x9aaf, [] )
RSMeshBias9 = ShaderObjectInfo( 448, 'RSMeshBias9', 0x7aa39, [] )
RSMeshBias10 = ShaderObjectInfo( 449, 'RSMeshBias10', 0xb5506, [] )
RSMeshBias11 = ShaderObjectInfo( 450, 'RSMeshBias11', 0xc6590, [] )
RSMeshBias12 = ShaderObjectInfo( 451, 'RSMeshBias12', 0x5342a, [] )
RSMeshCF = ShaderObjectInfo( 452, 'RSMeshCF', 0x2ab01, [] )
RSMeshCN = ShaderObjectInfo( 453, 'RSMeshCN', 0x92333, [] )
RSPrim = ShaderObjectInfo( 454, 'RSPrim', 0xc3c2c, [] )
RSScissorMesh = ShaderObjectInfo( 455, 'RSScissorMesh', 0x29883, [] )
RSScissorPrim = ShaderObjectInfo( 456, 'RSScissorPrim', 0xfac60, [] )
RSWireFrame = ShaderObjectInfo( 457, 'RSWireFrame', 0xb3bad, [] )
CBSystemGamma = ShaderObjectInfo( 458, 'CBSystemGamma', 0x46fd4, [] )
CBSystemMipTarget = ShaderObjectInfo( 459, 'CBSystemMipTarget', 0x73a1c, [] )
CBSystemNormalSlope = ShaderObjectInfo( 460, 'CBSystemNormalSlope', 0x2f3d9, [] )
CBSystemDepthCopy = ShaderObjectInfo( 461, 'CBSystemDepthCopy', 0x7aa9a, [] )
CBHDREmphasis = ShaderObjectInfo( 462, 'CBHDREmphasis', 0x83d11, [] )
CBSystemStencilRouting = ShaderObjectInfo( 463, 'CBSystemStencilRouting', 0xc0dfc, [] )
SSSystemCopy = ShaderObjectInfo( 464, 'SSSystemCopy', 0xfc672, [] )
BSMRTWrite0001 = ShaderObjectInfo( 465, 'BSMRTWrite0001', 0x33564, [] )
BSMRTWrite0010 = ShaderObjectInfo( 466, 'BSMRTWrite0010', 0xf34b3, [] )
BSMRTWrite0011 = ShaderObjectInfo( 467, 'BSMRTWrite0011', 0x80425, [] )
BSMRTWrite0100 = ShaderObjectInfo( 468, 'BSMRTWrite0100', 0x66fc5, [] )
BSMRTWrite0101 = ShaderObjectInfo( 469, 'BSMRTWrite0101', 0x15f53, [] )
BSMRTWrite0110 = ShaderObjectInfo( 470, 'BSMRTWrite0110', 0xd5e84, [] )
BSMRTWrite0111 = ShaderObjectInfo( 471, 'BSMRTWrite0111', 0xa6e12, [] )
BSMRTWrite1000 = ShaderObjectInfo( 472, 'BSMRTWrite1000', 0x86297, [] )
BSMRTWrite1001 = ShaderObjectInfo( 473, 'BSMRTWrite1001', 0xf5201, [] )
BSMRTWrite1010 = ShaderObjectInfo( 474, 'BSMRTWrite1010', 0x353d6, [] )
BSMRTWrite1011 = ShaderObjectInfo( 475, 'BSMRTWrite1011', 0x46340, [] )
BSMRTWrite1100 = ShaderObjectInfo( 476, 'BSMRTWrite1100', 0xa08a0, [] )
BSMRTWrite1101 = ShaderObjectInfo( 477, 'BSMRTWrite1101', 0xd3836, [] )
BSMRTWrite1110 = ShaderObjectInfo( 478, 'BSMRTWrite1110', 0x139e1, [] )
SSProcedural = ShaderObjectInfo( 479, 'SSProcedural', 0xa575c, [] )
DSFilterStencilEqual = ShaderObjectInfo( 480, 'DSFilterStencilEqual', 0x138a5, [] )
CBFilter = ShaderObjectInfo( 481, 'CBFilter', 0x17a40, [] )
SSFilter = ShaderObjectInfo( 482, 'SSFilter', 0x3dc11, [] )
CBHermiteCurve = ShaderObjectInfo( 483, 'CBHermiteCurve', 0x1ec3f, [] )
CBSMAA = ShaderObjectInfo( 484, 'CBSMAA', 0x19c2a, [] )
CBDevelopFlags = ShaderObjectInfo( 485, 'CBDevelopFlags', 0x6eaa9, [] )
SSDevelop = ShaderObjectInfo( 486, 'SSDevelop', 0xa8b0a, [] )
BSBlendAddAlpha = ShaderObjectInfo( 487, 'BSBlendAddAlpha', 0x80570, [] )
BSBlendBlendAlpha = ShaderObjectInfo( 488, 'BSBlendBlendAlpha', 0xf09b, [] )
BSBlendAddColor = ShaderObjectInfo( 489, 'BSBlendAddColor', 0xe74f3, [] )
BSBlendBlendColor = ShaderObjectInfo( 490, 'BSBlendBlendColor', 0x68118, [] )
BSBlendAdd = ShaderObjectInfo( 491, 'BSBlendAdd', 0x20522, [] )
BSBlendRevSubAlpha = ShaderObjectInfo( 492, 'BSBlendRevSubAlpha', 0x9861a, [] )
BSBlendRevSubBlendAlpha = ShaderObjectInfo( 493, 'BSBlendRevSubBlendAlpha', 0x8150b, [] )
BSBlendRevSubColor = ShaderObjectInfo( 494, 'BSBlendRevSubColor', 0xff799, [] )
BSBlendRevSubBlendColor = ShaderObjectInfo( 495, 'BSBlendRevSubBlendColor', 0xe6488, [] )
BSBlendRevSub = ShaderObjectInfo( 496, 'BSBlendRevSub', 0x2fc8a, [] )
BSBlendMinAlpha = ShaderObjectInfo( 497, 'BSBlendMinAlpha', 0xb5299, [] )
BSBlendMaxAlpha = ShaderObjectInfo( 498, 'BSBlendMaxAlpha', 0xbfd78, [] )
BSBlendNoBlend = ShaderObjectInfo( 499, 'BSBlendNoBlend', 0x3e292, [] )
BSBlendAddAlphaRGB = ShaderObjectInfo( 500, 'BSBlendAddAlphaRGB', 0x627fb, [] )
BSBlendBlendAlphaRGB = ShaderObjectInfo( 501, 'BSBlendBlendAlphaRGB', 0x257fb, [] )
BSBlendAddColorRGB = ShaderObjectInfo( 502, 'BSBlendAddColorRGB', 0x3dc9a, [] )
BSBlendBlendColorRGB = ShaderObjectInfo( 503, 'BSBlendBlendColorRGB', 0x7ac9a, [] )
BSBlendAddRGB = ShaderObjectInfo( 504, 'BSBlendAddRGB', 0xc2495, [] )
BSBlendRevSubAlphaRGB = ShaderObjectInfo( 505, 'BSBlendRevSubAlphaRGB', 0x3d377, [] )
BSBlendRevSubBlendAlphaRGB = ShaderObjectInfo( 506, 'BSBlendRevSubBlendAlphaRGB', 0xa50c0, [] )
BSBlendRevSubColorRGB = ShaderObjectInfo( 507, 'BSBlendRevSubColorRGB', 0x62816, [] )
BSBlendRevSubBlendColorRGB = ShaderObjectInfo( 508, 'BSBlendRevSubBlendColorRGB', 0xfaba1, [] )
BSBlendRevSubRGB = ShaderObjectInfo( 509, 'BSBlendRevSubRGB', 0xdb05d, [] )
BSBlendMinAlphaRGB = ShaderObjectInfo( 510, 'BSBlendMinAlphaRGB', 0xcb412, [] )
BSBlendMaxAlphaRGB = ShaderObjectInfo( 511, 'BSBlendMaxAlphaRGB', 0x1cf1d, [] )
BSBlendAddDestColor = ShaderObjectInfo( 512, 'BSBlendAddDestColor', 0xb444c, [] )
BSBlendBlendAddDestColor = ShaderObjectInfo( 513, 'BSBlendBlendAddDestColor', 0xcf066, [] )
BSBlendBlendAddDestAlpha = ShaderObjectInfo( 514, 'BSBlendBlendAddDestAlpha', 0xa81e5, [] )
BSBlendAddDestColorRGB = ShaderObjectInfo( 515, 'BSBlendAddDestColorRGB', 0x5598, [] )
BSBlendBlendAddDestColorRGB = ShaderObjectInfo( 516, 'BSBlendBlendAddDestColorRGB', 0xb2935, [] )
BSBlendBlendAddDestAlphaRGB = ShaderObjectInfo( 517, 'BSBlendBlendAddDestAlphaRGB', 0xed254, [] )
BSBlendNoBlendRGB = ShaderObjectInfo( 518, 'BSBlendNoBlendRGB', 0x6ceb8, [] )
CBLocalWind = ShaderObjectInfo( 519, 'CBLocalWind', 0x99073, [] )
CBMaterial = ShaderObjectInfo( 520, 'CBMaterial', 0x6c801, [] )
CBFog = ShaderObjectInfo( 521, 'CBFog', 0x7c82c, [] )
CBBlendFog = ShaderObjectInfo( 522, 'CBBlendFog', 0x9a6da, [] )
BSFogBlend = ShaderObjectInfo( 523, 'BSFogBlend', 0x65c12, [] )
CBSkinning = ShaderObjectInfo( 524, 'CBSkinning', 0xab962, [] )
CBJointMatrix = ShaderObjectInfo( 525, 'CBJointMatrix', 0x4e7f5, [] )
CBJointMatrixPF = ShaderObjectInfo( 526, 'CBJointMatrixPF', 0x18096, [] )
CBJointMatrixEx = ShaderObjectInfo( 527, 'CBJointMatrixEx', 0x57b29, [] )
CBAmbient = ShaderObjectInfo( 528, 'CBAmbient', 0x11529, [] )
CBLightGroup = ShaderObjectInfo( 529, 'CBLightGroup', 0x25444, [] )
CBDeferredLightingDiscontinuitySensitiveFiltering = ShaderObjectInfo( 530, 'CBDeferredLightingDiscontinuitySensitiveFiltering', 0x7554f, [] )
CBDynamicLighting = ShaderObjectInfo( 531, 'CBDynamicLighting', 0xea691, [] )
CBDynamicLightingDL = ShaderObjectInfo( 532, 'CBDynamicLightingDL', 0x6c72, [] )
SSTransparencyMap = ShaderObjectInfo( 533, 'SSTransparencyMap', 0xef767, [] )
SSAlbedoMap = ShaderObjectInfo( 534, 'SSAlbedoMap', 0xcaa79, [] )
SSAlbedoMapClamp = ShaderObjectInfo( 535, 'SSAlbedoMapClamp', 0x92388, [] )
SSOcclusionMap = ShaderObjectInfo( 536, 'SSOcclusionMap', 0x9788f, [] )
SSNormalMap = ShaderObjectInfo( 537, 'SSNormalMap', 0x25c76, [] )
SSNormalMapClamp = ShaderObjectInfo( 538, 'SSNormalMapClamp', 0x80088, [] )
SSDetailNormalMap = ShaderObjectInfo( 539, 'SSDetailNormalMap', 0x8c4be, [] )
SSParallaxHeightMap = ShaderObjectInfo( 540, 'SSParallaxHeightMap', 0xba5e, [] )
CBLightMask = ShaderObjectInfo( 541, 'CBLightMask', 0x2a7a2, [] )
SSLightMap = ShaderObjectInfo( 542, 'SSLightMap', 0xa0809, [] )
SSThinMap = ShaderObjectInfo( 543, 'SSThinMap', 0x78211, [] )
CBChannelBlend = ShaderObjectInfo( 544, 'CBChannelBlend', 0x4e02c, [] )
SSFresnelMap = ShaderObjectInfo( 545, 'SSFresnelMap', 0x41971, [] )
SSEnvMap = ShaderObjectInfo( 546, 'SSEnvMap', 0xbbf63, [] )
SSEnvMapLODBias1 = ShaderObjectInfo( 547, 'SSEnvMapLODBias1', 0xf7792, [] )
SSEnvMapLODBias2 = ShaderObjectInfo( 548, 'SSEnvMapLODBias2', 0x62628, [] )
SSEnvMapLODBias3 = ShaderObjectInfo( 549, 'SSEnvMapLODBias3', 0x116be, [] )
SSEnvMapLODBias4 = ShaderObjectInfo( 550, 'SSEnvMapLODBias4', 0x5831d, [] )
SSEnvMapLODBias5 = ShaderObjectInfo( 551, 'SSEnvMapLODBias5', 0x2b38b, [] )
SSSphereMap = ShaderObjectInfo( 552, 'SSSphereMap', 0x339e2, [] )
SSSpecularMap = ShaderObjectInfo( 553, 'SSSpecularMap', 0x8043e, [] )
SSSpecularMapClamp = ShaderObjectInfo( 554, 'SSSpecularMapClamp', 0x7d302, [] )
SSShininessMap = ShaderObjectInfo( 555, 'SSShininessMap', 0x20b29, [] )
SSEmissionMap = ShaderObjectInfo( 556, 'SSEmissionMap', 0x6301e, [] )
CBDistortion = ShaderObjectInfo( 557, 'CBDistortion', 0xefca3, [] )
CBDistortionRefract = ShaderObjectInfo( 558, 'CBDistortionRefract', 0xc48f7, [] )
SSDistortionMap = ShaderObjectInfo( 559, 'SSDistortionMap', 0x60776, [] )
CBDissolve = ShaderObjectInfo( 560, 'CBDissolve', 0x4be4c, [] )
SSDisolveMap = ShaderObjectInfo( 561, 'SSDisolveMap', 0xed825, [] )
CBSwing1Weight = ShaderObjectInfo( 562, 'CBSwing1Weight', 0xb3c62, [] )
CBSwing2Weight = ShaderObjectInfo( 563, 'CBSwing2Weight', 0x326ff, [] )
CBQuantCompress = ShaderObjectInfo( 564, 'CBQuantCompress', 0x34794, [] )
CBSwingBillboard = ShaderObjectInfo( 565, 'CBSwingBillboard', 0x4f981, [] )
CBInstanceMatrix = ShaderObjectInfo( 566, 'CBInstanceMatrix', 0x9845c, [] )
CBInstanceID = ShaderObjectInfo( 567, 'CBInstanceID', 0xadd99, [] )
CBInstanceShadowCasterCache = ShaderObjectInfo( 568, 'CBInstanceShadowCasterCache', 0xf9284, [] )
CBLatticeDeform = ShaderObjectInfo( 569, 'CBLatticeDeform', 0x9b315, [] )
CBMorph = ShaderObjectInfo( 570, 'CBMorph', 0x5b30d, [] )
SSWrapOneLinear = ShaderObjectInfo( 571, 'SSWrapOneLinear', 0xd7f0c, [] )
CBVertexDisplacement = ShaderObjectInfo( 572, 'CBVertexDisplacement', 0x15419, [] )
CBVertexDisplacement2 = ShaderObjectInfo( 573, 'CBVertexDisplacement2', 0x51814, [] )
CBVertexDisplacement3 = ShaderObjectInfo( 574, 'CBVertexDisplacement3', 0x22882, [] )
CBVertexDisplacementWave = ShaderObjectInfo( 575, 'CBVertexDisplacementWave', 0xceb0f, [] )
CBVertexDisplacementExplosion = ShaderObjectInfo( 576, 'CBVertexDisplacementExplosion', 0x61e43, [] )
CBVertexDisplacementRandUV = ShaderObjectInfo( 577, 'CBVertexDisplacementRandUV', 0x65ba7, [] )
CBVertexDisplacementExplosionQuant = ShaderObjectInfo( 578, 'CBVertexDisplacementExplosionQuant', 0xb1999, [] )
CBVertexDispMaskUV = ShaderObjectInfo( 579, 'CBVertexDispMaskUV', 0x61c6e, [] )
CBVertexDispUV = ShaderObjectInfo( 580, 'CBVertexDispUV', 0x3253f, [] )
CBVertexDisplacementDirExplosion = ShaderObjectInfo( 581, 'CBVertexDisplacementDirExplosion', 0xd6e60, [] )
CBDebugView = ShaderObjectInfo( 582, 'CBDebugView', 0x7abfb, [] )
CBMotionBlur = ShaderObjectInfo( 583, 'CBMotionBlur', 0xae375, [] )
CBMaterialVelocity = ShaderObjectInfo( 584, 'CBMaterialVelocity', 0xdd686, [] )
BSOutlineModulate = ShaderObjectInfo( 585, 'BSOutlineModulate', 0xd846b, [] )
BSOutlineBlend = ShaderObjectInfo( 586, 'BSOutlineBlend', 0xed449, [] )
CBOutlineFilter = ShaderObjectInfo( 587, 'CBOutlineFilter', 0xcb409, [] )
CBOutlineMask = ShaderObjectInfo( 588, 'CBOutlineMask', 0x4c59c, [] )
DSOutlineZTestStencilTest = ShaderObjectInfo( 589, 'DSOutlineZTestStencilTest', 0xedb6c, [] )
DSOutlineZTestWriteStencilTest = ShaderObjectInfo( 590, 'DSOutlineZTestWriteStencilTest', 0x462bd, [] )
CBShadowLight = ShaderObjectInfo( 591, 'CBShadowLight', 0x12ceb, [] )
CBShadowType = ShaderObjectInfo( 592, 'CBShadowType', 0xb8cc1, [] )
CBMultiShadow = ShaderObjectInfo( 593, 'CBMultiShadow', 0x3b517, [] )
CBShadowReceiverMode = ShaderObjectInfo( 594, 'CBShadowReceiverMode', 0x33657, [] )
CBShadowCasterRasterizerState = ShaderObjectInfo( 595, 'CBShadowCasterRasterizerState', 0xa1d64, [] )
CBShadowCast = ShaderObjectInfo( 596, 'CBShadowCast', 0xd621e, [] )
CBShadowCastOption = ShaderObjectInfo( 597, 'CBShadowCastOption', 0x118c5, [] )
CBShadowFrustum = ShaderObjectInfo( 598, 'CBShadowFrustum', 0x7899, [] )
CBShadowReceive = ShaderObjectInfo( 599, 'CBShadowReceive', 0x873d4, [] )
SSShadowDepth = ShaderObjectInfo( 600, 'SSShadowDepth', 0x26b3c, [] )
SSShadowDepthComp = ShaderObjectInfo( 601, 'SSShadowDepthComp', 0x42282, [] )
SSShadowVariance = ShaderObjectInfo( 602, 'SSShadowVariance', 0x44a27, [] )
SSShadowVariance0 = ShaderObjectInfo( 603, 'SSShadowVariance0', 0x8618d, [] )
SSShadowVariance1 = ShaderObjectInfo( 604, 'SSShadowVariance1', 0xf511b, [] )
SSShadowVariance2 = ShaderObjectInfo( 605, 'SSShadowVariance2', 0x600a1, [] )
SSShadowVariance3 = ShaderObjectInfo( 606, 'SSShadowVariance3', 0x13037, [] )
SSShadowVarianceMIP0 = ShaderObjectInfo( 607, 'SSShadowVarianceMIP0', 0x47a52, [] )
BSShadowRecvSolidGroup0 = ShaderObjectInfo( 608, 'BSShadowRecvSolidGroup0', 0xead2, [] )
BSShadowRecvSolidGroup1 = ShaderObjectInfo( 609, 'BSShadowRecvSolidGroup1', 0x7da44, [] )
BSShadowRecvTransparentGroup0 = ShaderObjectInfo( 610, 'BSShadowRecvTransparentGroup0', 0x7e510, [] )
BSShadowRecvTransparentGroup1 = ShaderObjectInfo( 611, 'BSShadowRecvTransparentGroup1', 0xd586, [] )
BSShadowRecvMultiSolidGroup0 = ShaderObjectInfo( 612, 'BSShadowRecvMultiSolidGroup0', 0x44f6e, [] )
BSShadowRecvMultiSolidGroup1 = ShaderObjectInfo( 613, 'BSShadowRecvMultiSolidGroup1', 0x37ff8, [] )
BSShadowRecvMultiTransparentGroup0 = ShaderObjectInfo( 614, 'BSShadowRecvMultiTransparentGroup0', 0xd9b33, [] )
BSShadowRecvMultiTransparentGroup1 = ShaderObjectInfo( 615, 'BSShadowRecvMultiTransparentGroup1', 0xaaba5, [] )
BSShadowRecvZPass = ShaderObjectInfo( 616, 'BSShadowRecvZPass', 0xc3ce7, [] )
CBDualParaboloid = ShaderObjectInfo( 617, 'CBDualParaboloid', 0x5927c, [] )
DSDeferredLightingZWriteStencilTestRouted = ShaderObjectInfo( 618, 'DSDeferredLightingZWriteStencilTestRouted', 0x32881, [] )
DSDeferredLightingZTestStencilWriteDepthFail = ShaderObjectInfo( 619, 'DSDeferredLightingZTestStencilWriteDepthFail', 0x253fe, [] )
DSDeferredLightingZTestStencilWriteDepthPass = ShaderObjectInfo( 620, 'DSDeferredLightingZTestStencilWriteDepthPass', 0x5ac93, [] )
DSDeferredLightingZTestStencilTest = ShaderObjectInfo( 621, 'DSDeferredLightingZTestStencilTest', 0x1c51f, [] )
DSDeferredLightingStencilTest = ShaderObjectInfo( 622, 'DSDeferredLightingStencilTest', 0xcedca, [] )
BSAccumulateColorAlphaMRT2 = ShaderObjectInfo( 623, 'BSAccumulateColorAlphaMRT2', 0xb1f17, [] )
BSMultiplyColorAlpha = ShaderObjectInfo( 624, 'BSMultiplyColorAlpha', 0x3e812, [] )
BSMultiplyColorAlphaMRT2 = ShaderObjectInfo( 625, 'BSMultiplyColorAlphaMRT2', 0xe9f8f, [] )
CBLightVolume = ShaderObjectInfo( 626, 'CBLightVolume', 0xb03f5, [] )
CBAmbientMask = ShaderObjectInfo( 627, 'CBAmbientMask', 0x1ce5f, [] )
BSAmbientMaskGroup0 = ShaderObjectInfo( 628, 'BSAmbientMaskGroup0', 0xb255f, [] )
BSAmbientMaskGroup1 = ShaderObjectInfo( 629, 'BSAmbientMaskGroup1', 0xc15c9, [] )
BSAmbientMaskGroup2 = ShaderObjectInfo( 630, 'BSAmbientMaskGroup2', 0x54473, [] )
BSAmbientMaskGroup3 = ShaderObjectInfo( 631, 'BSAmbientMaskGroup3', 0x274e5, [] )
BSAmbientMaskAlphaGroup0 = ShaderObjectInfo( 632, 'BSAmbientMaskAlphaGroup0', 0x6536e, [] )
BSAmbientMaskAlphaGroup1 = ShaderObjectInfo( 633, 'BSAmbientMaskAlphaGroup1', 0x163f8, [] )
BSAmbientMaskAlphaGroup2 = ShaderObjectInfo( 634, 'BSAmbientMaskAlphaGroup2', 0x83242, [] )
CBRSMIndirectLighting = ShaderObjectInfo( 635, 'CBRSMIndirectLighting', 0x21012, [] )
CBAdhesion = ShaderObjectInfo( 636, 'CBAdhesion', 0x41bce, [] )
CBMaterialSSS = ShaderObjectInfo( 637, 'CBMaterialSSS', 0x97d31, [] )
CBMaterialSSSBlend = ShaderObjectInfo( 638, 'CBMaterialSSSBlend', 0x16977, [] )
CBTessellation = ShaderObjectInfo( 639, 'CBTessellation', 0xe0fb1, [] )
SSDisplacementMap = ShaderObjectInfo( 640, 'SSDisplacementMap', 0xc2a7d, [] )
CBDisplacement = ShaderObjectInfo( 641, 'CBDisplacement', 0xd0bfb, [] )
CBShadowReceive0 = ShaderObjectInfo( 642, 'CBShadowReceive0', 0xffe12, [] )
CBShadowReceive1 = ShaderObjectInfo( 643, 'CBShadowReceive1', 0x8ce84, [] )
CBShadowReceive2 = ShaderObjectInfo( 644, 'CBShadowReceive2', 0x19f3e, [] )
CBShadowReceive3 = ShaderObjectInfo( 645, 'CBShadowReceive3', 0x6afa8, [] )
CBBilateralFilter = ShaderObjectInfo( 646, 'CBBilateralFilter', 0x762c6, [] )
CBPrimitiveDebug = ShaderObjectInfo( 647, 'CBPrimitiveDebug', 0x9510f, [] )
CBPrimitiveView = ShaderObjectInfo( 648, 'CBPrimitiveView', 0xbdc9, [] )
CBPrimitiveCoord = ShaderObjectInfo( 649, 'CBPrimitiveCoord', 0x43955, [] )
CBPrimitiveEx = ShaderObjectInfo( 650, 'CBPrimitiveEx', 0xf807b, [] )
CBPrimitiveTessellationCmn = ShaderObjectInfo( 651, 'CBPrimitiveTessellationCmn', 0x86183, [] )
CBPrimitiveMetaDataFresnel = ShaderObjectInfo( 652, 'CBPrimitiveMetaDataFresnel', 0x4801, [] )
CBPrimitiveMetaDataUvClamp = ShaderObjectInfo( 653, 'CBPrimitiveMetaDataUvClamp', 0x88053, [] )
CBPrimitiveMetaDataShade = ShaderObjectInfo( 654, 'CBPrimitiveMetaDataShade', 0xa7282, [] )
CBPrimitiveMetaDataOcclusion = ShaderObjectInfo( 655, 'CBPrimitiveMetaDataOcclusion', 0x8e5f5, [] )
CBPrimitiveMetaDataLvCorrection = ShaderObjectInfo( 656, 'CBPrimitiveMetaDataLvCorrection', 0x8f8dc, [] )
CBPrimitiveMetaDataLensFlare = ShaderObjectInfo( 657, 'CBPrimitiveMetaDataLensFlare', 0xb608a, [] )
CBCloudMetaData = ShaderObjectInfo( 658, 'CBCloudMetaData', 0x3d833, [] )
CBPrimitiveModel = ShaderObjectInfo( 659, 'CBPrimitiveModel', 0x96471, [] )
CBPrimitiveModelDistortion = ShaderObjectInfo( 660, 'CBPrimitiveModelDistortion', 0x1737f, [] )
CBPrimitiveTessellation = ShaderObjectInfo( 661, 'CBPrimitiveTessellation', 0x2f33e, [] )
CBPrimitiveParallaxTess = ShaderObjectInfo( 662, 'CBPrimitiveParallaxTess', 0x120d2, [] )
CBPrimitiveParticleTess = ShaderObjectInfo( 663, 'CBPrimitiveParticleTess', 0x198c, [] )
SSPrimOcclusionMap = ShaderObjectInfo( 664, 'SSPrimOcclusionMap', 0x144fb, [] )
DSPrimStencilTestEQ = ShaderObjectInfo( 665, 'DSPrimStencilTestEQ', 0x589a0, [] )
DSPrimStencilTestNEQ = ShaderObjectInfo( 666, 'DSPrimStencilTestNEQ', 0x55fb7, [] )
DSPrimZTestStencilTestEQ = ShaderObjectInfo( 667, 'DSPrimZTestStencilTestEQ', 0x874e6, [] )
DSPrimZTestStencilTestNEQ = ShaderObjectInfo( 668, 'DSPrimZTestStencilTestNEQ', 0x566ef, [] )
DSPrimZWriteStencilTestEQ = ShaderObjectInfo( 669, 'DSPrimZWriteStencilTestEQ', 0xb4db, [] )
DSPrimZWriteStencilTestNEQ = ShaderObjectInfo( 670, 'DSPrimZWriteStencilTestNEQ', 0x523e, [] )
DSPrimZTestWriteStencilTestEQ = ShaderObjectInfo( 671, 'DSPrimZTestWriteStencilTestEQ', 0x948b0, [] )
DSPrimZTestWriteStencilTestNEQ = ShaderObjectInfo( 672, 'DSPrimZTestWriteStencilTestNEQ', 0x58312, [] )
CBRadialBlurFilter = ShaderObjectInfo( 673, 'CBRadialBlurFilter', 0x2efc0, [] )
SSRadialFilterClampLinear = ShaderObjectInfo( 674, 'SSRadialFilterClampLinear', 0xf144a, [] )
CBTVNoiseFilter = ShaderObjectInfo( 675, 'CBTVNoiseFilter', 0x12819, [] )
CBFishEyeFilter = ShaderObjectInfo( 676, 'CBFishEyeFilter', 0xe2e0, [] )
CBColorCorrectMatrix = ShaderObjectInfo( 677, 'CBColorCorrectMatrix', 0x6c72d, [] )
CBColorCorrectGamma = ShaderObjectInfo( 678, 'CBColorCorrectGamma', 0x38b38, [] )
CBColorCorrectColor = ShaderObjectInfo( 679, 'CBColorCorrectColor', 0x613a0, [] )
SSVariance = ShaderObjectInfo( 680, 'SSVariance', 0x20868, [] )
CBBloomFilter = ShaderObjectInfo( 681, 'CBBloomFilter', 0x10368, [] )
CBBloomGaussBlur = ShaderObjectInfo( 682, 'CBBloomGaussBlur', 0x799b6, [] )
CBLightScattering = ShaderObjectInfo( 683, 'CBLightScattering', 0xef6d, [] )
CBImagePlane = ShaderObjectInfo( 684, 'CBImagePlane', 0x90f19, [] )
CBHazeFilter = ShaderObjectInfo( 685, 'CBHazeFilter', 0x23b9f, [] )
CBToneMapFilter = ShaderObjectInfo( 686, 'CBToneMapFilter', 0xa6d02, [] )
CBCubeMapFilter = ShaderObjectInfo( 687, 'CBCubeMapFilter', 0xb5ada, [] )
CBDOFFilter = ShaderObjectInfo( 688, 'CBDOFFilter', 0xfdfe1, [] )
CBSSAOFFilter = ShaderObjectInfo( 689, 'CBSSAOFFilter', 0xe97d7, [] )
CBSSAOFFilterLinearDepth = ShaderObjectInfo( 690, 'CBSSAOFFilterLinearDepth', 0xf10ba, [] )
CBSSAOFFilterIntensity = ShaderObjectInfo( 691, 'CBSSAOFFilterIntensity', 0xd350, [] )
BSSSAO = ShaderObjectInfo( 692, 'BSSSAO', 0xd52c0, [] )
CBBokehComposite = ShaderObjectInfo( 693, 'CBBokehComposite', 0xa2dd4, [] )
CBFilterEdgeAntiAliasing = ShaderObjectInfo( 694, 'CBFilterEdgeAntiAliasing', 0x1bca, [] )
CBGodRaysIterator = ShaderObjectInfo( 695, 'CBGodRaysIterator', 0x1f7d8, [] )
CBGodRaysFilter = ShaderObjectInfo( 696, 'CBGodRaysFilter', 0x42767, [] )
SSP2O = ShaderObjectInfo( 697, 'SSP2O', 0x93b75, [] )
BSGodRays = ShaderObjectInfo( 698, 'BSGodRays', 0x79707, [] )
CBBlurMask = ShaderObjectInfo( 699, 'CBBlurMask', 0x67f65, [] )
CBBlurMaskIntermediate = ShaderObjectInfo( 700, 'CBBlurMaskIntermediate', 0x8b744, [] )
CBChromaticAberration = ShaderObjectInfo( 701, 'CBChromaticAberration', 0xad62f, [] )
CBTangentFilter = ShaderObjectInfo( 702, 'CBTangentFilter', 0x87825, [] )
CBBruteForceLightingParam = ShaderObjectInfo( 703, 'CBBruteForceLightingParam', 0xe8494, [] )
CBWaterWave = ShaderObjectInfo( 704, 'CBWaterWave', 0x16e2f, [] )
CBWaterNormal = ShaderObjectInfo( 705, 'CBWaterNormal', 0xcfbeb, [] )
CBWaterDetail = ShaderObjectInfo( 706, 'CBWaterDetail', 0xfec9c, [] )
CBWaterFog = ShaderObjectInfo( 707, 'CBWaterFog', 0xd1039, [] )
CBWaterCaustics = ShaderObjectInfo( 708, 'CBWaterCaustics', 0xa91ac, [] )
CBWaterBubble = ShaderObjectInfo( 709, 'CBWaterBubble', 0x962f8, [] )
CBWaterShadow = ShaderObjectInfo( 710, 'CBWaterShadow', 0xf1122, [] )
CBWaterRipple = ShaderObjectInfo( 711, 'CBWaterRipple', 0xdf2ea, [] )
CBWater = ShaderObjectInfo( 712, 'CBWater', 0x28c1, [] )
CBGUIGlobal = ShaderObjectInfo( 713, 'CBGUIGlobal', 0x6ab0, [] )
CBGUIMatrix = ShaderObjectInfo( 714, 'CBGUIMatrix', 0x6a0fc, [] )
CBGUIStaticColor = ShaderObjectInfo( 715, 'CBGUIStaticColor', 0x31804, [] )
CBGUIColor = ShaderObjectInfo( 716, 'CBGUIColor', 0xbc61b, [] )
CBGUIColorAttribute = ShaderObjectInfo( 717, 'CBGUIColorAttribute', 0xc9548, [] )
CBGUICoord = ShaderObjectInfo( 718, 'CBGUICoord', 0x5a10f, [] )
CBGUIAlphaMask = ShaderObjectInfo( 719, 'CBGUIAlphaMask', 0x961c2, [] )
CBGUIFontFilter = ShaderObjectInfo( 720, 'CBGUIFontFilter', 0xcc76e, [] )
SSGUI = ShaderObjectInfo( 721, 'SSGUI', 0xfd6d5, [] )
RSGUIScissorEnable = ShaderObjectInfo( 722, 'RSGUIScissorEnable', 0x21f00, [] )
BSGUIAddColorRGB = ShaderObjectInfo( 723, 'BSGUIAddColorRGB', 0xcb2cf, [] )
BSGUIAddInvColor = ShaderObjectInfo( 724, 'BSGUIAddInvColor', 0x59f95, [] )
BSGUIColorBlendAlphaAdd = ShaderObjectInfo( 725, 'BSGUIColorBlendAlphaAdd', 0x5a070, [] )
BSGUIAlphaMaskWrite = ShaderObjectInfo( 726, 'BSGUIAlphaMaskWrite', 0xe7275, [] )
BSGUIAlphaMaskUpdate = ShaderObjectInfo( 727, 'BSGUIAlphaMaskUpdate', 0xee62b, [] )
BSGUIAlphaMaskAdd = ShaderObjectInfo( 728, 'BSGUIAlphaMaskAdd', 0xdfa1c, [] )
DSGUIStencilWrite = ShaderObjectInfo( 729, 'DSGUIStencilWrite', 0x85bd, [] )
DSGUIStencilApply = ShaderObjectInfo( 730, 'DSGUIStencilApply', 0x473fd, [] )
DSGUIStencilApplyReverse = ShaderObjectInfo( 731, 'DSGUIStencilApplyReverse', 0xa321e, [] )
DSGUIStencilUpdate = ShaderObjectInfo( 732, 'DSGUIStencilUpdate', 0xc325e, [] )
DSGUIZTestStencilApply = ShaderObjectInfo( 733, 'DSGUIZTestStencilApply', 0x8c2a7, [] )
DSGUIZTestStencilApplyReverse = ShaderObjectInfo( 734, 'DSGUIZTestStencilApplyReverse', 0x786cb, [] )
DSGUIZTestStencilUpdate = ShaderObjectInfo( 735, 'DSGUIZTestStencilUpdate', 0x97605, [] )
DSGUIZWriteStencilApply = ShaderObjectInfo( 736, 'DSGUIZWriteStencilApply', 0xb37b8, [] )
DSGUIZWriteStencilApplyReverse = ShaderObjectInfo( 737, 'DSGUIZWriteStencilApplyReverse', 0xf50c2, [] )
DSGUIZWriteStencilUpdate = ShaderObjectInfo( 738, 'DSGUIZWriteStencilUpdate', 0x94805, [] )
DSGUIZTestWriteStencilApply = ShaderObjectInfo( 739, 'DSGUIZTestWriteStencilApply', 0x944e, [] )
DSGUIZTestWriteStencilApplyReverse = ShaderObjectInfo( 740, 'DSGUIZTestWriteStencilApplyReverse', 0xfbde2, [] )
DSGUIZTestWriteStencilUpdate = ShaderObjectInfo( 741, 'DSGUIZTestWriteStencilUpdate', 0x7948f, [] )
CBProjectionTexture = ShaderObjectInfo( 742, 'CBProjectionTexture', 0x830df, [] )
CBTextureBlend = ShaderObjectInfo( 743, 'CBTextureBlend', 0x21560, [] )
CBGPUParticleEx = ShaderObjectInfo( 744, 'CBGPUParticleEx', 0xa4392, [] )
CBGPUParticleTex = ShaderObjectInfo( 745, 'CBGPUParticleTex', 0x8b47e, [] )
CBGPUParticleLvCorrection = ShaderObjectInfo( 746, 'CBGPUParticleLvCorrection', 0x2ae35, [] )
CBLightShaft = ShaderObjectInfo( 747, 'CBLightShaft', 0xa7a7c, [] )
CBMark = ShaderObjectInfo( 748, 'CBMark', 0xafe4, [] )
SSGrass = ShaderObjectInfo( 749, 'SSGrass', 0xaee18, [] )
CBGrassCommon = ShaderObjectInfo( 750, 'CBGrassCommon', 0xe2958, [] )
CBGrassMaterial = ShaderObjectInfo( 751, 'CBGrassMaterial', 0x21601, [] )
CBGrassChain = ShaderObjectInfo( 752, 'CBGrassChain', 0x6de1b, [] )
CBGrassBillboard = ShaderObjectInfo( 753, 'CBGrassBillboard', 0xe2745, [] )
CBGrassRoot = ShaderObjectInfo( 754, 'CBGrassRoot', 0xc351b, [] )
CBGrassGlobalWind = ShaderObjectInfo( 755, 'CBGrassGlobalWind', 0xc67d4, [] )
CBGrassUnit = ShaderObjectInfo( 756, 'CBGrassUnit', 0x3c013, [] )
CBGrassPointShadow = ShaderObjectInfo( 757, 'CBGrassPointShadow', 0xcf50f, [] )
BSAddRWrite = ShaderObjectInfo( 758, 'BSAddRWrite', 0x93f, [] )
BSAddGWrite = ShaderObjectInfo( 759, 'BSAddGWrite', 0xb9a17, [] )
BSAddBWrite = ShaderObjectInfo( 760, 'BSAddBWrite', 0x60ba4, [] )
BSAddAWrite = ShaderObjectInfo( 761, 'BSAddAWrite', 0x2790a, [] )
BSSubRWrite = ShaderObjectInfo( 762, 'BSSubRWrite', 0x76747, [] )
BSSubGWrite = ShaderObjectInfo( 763, 'BSSubGWrite', 0xcf46f, [] )
BSSubBWrite = ShaderObjectInfo( 764, 'BSSubBWrite', 0x165dc, [] )
BSSubAWrite = ShaderObjectInfo( 765, 'BSSubAWrite', 0x51772, [] )
BSAlphaToCoverage = ShaderObjectInfo( 766, 'BSAlphaToCoverage', 0x430ef, [] )
CBMirageCommon = ShaderObjectInfo( 767, 'CBMirageCommon', 0xeb037, [] )
CBMirageNoise = ShaderObjectInfo( 768, 'CBMirageNoise', 0xcffe1, [] )
CBMirageRefract = ShaderObjectInfo( 769, 'CBMirageRefract', 0xf1f19, [] )
CBMirageDepthBlend = ShaderObjectInfo( 770, 'CBMirageDepthBlend', 0xb67fd, [] )
BSRGWrite = ShaderObjectInfo( 771, 'BSRGWrite', 0x454f9, [] )
BSBAWrite = ShaderObjectInfo( 772, 'BSBAWrite', 0x32b2a, [] )
DSZTestWriteBack = ShaderObjectInfo( 773, 'DSZTestWriteBack', 0x273ee, [] )
CBSoftBodySim = ShaderObjectInfo( 774, 'CBSoftBodySim', 0x2544d, [] )
CBSoftBodyRtParam2 = ShaderObjectInfo( 775, 'CBSoftBodyRtParam2', 0x70110, [] )
CBSoftBodyDirectGrassWind = ShaderObjectInfo( 776, 'CBSoftBodyDirectGrassWind', 0xd64a9, [] )
CBSoftBodyRtParam = ShaderObjectInfo( 777, 'CBSoftBodyRtParam', 0xd5f2e, [] )
CBSoftBodyQuad = ShaderObjectInfo( 778, 'CBSoftBodyQuad', 0x177ab, [] )
CBSoftBodyCollision = ShaderObjectInfo( 779, 'CBSoftBodyCollision', 0x28ecf, [] )
CBSoftBodyWorldOffset = ShaderObjectInfo( 780, 'CBSoftBodyWorldOffset', 0x43407, [] )
CBSoftBodyLWMatrix = ShaderObjectInfo( 781, 'CBSoftBodyLWMatrix', 0x53f32, [] )
CBSbViewProjection = ShaderObjectInfo( 782, 'CBSbViewProjection', 0x84f12, [] )
CBSbExtrapolation = ShaderObjectInfo( 783, 'CBSbExtrapolation', 0xd2f6, [] )
CBTattoo = ShaderObjectInfo( 784, 'CBTattoo', 0xb6932, [] )
CBSky = ShaderObjectInfo( 785, 'CBSky', 0x951d0, [] )
CBSkyFog = ShaderObjectInfo( 786, 'CBSkyFog', 0x203a, [] )
CBSkyAstralBody = ShaderObjectInfo( 787, 'CBSkyAstralBody', 0xdd14a, [] )
CBSkyStar = ShaderObjectInfo( 788, 'CBSkyStar', 0xb538, [] )
CBSkyStarrySkyColor = ShaderObjectInfo( 789, 'CBSkyStarrySkyColor', 0xbb8ef, [] )
CBAmbientShadow = ShaderObjectInfo( 790, 'CBAmbientShadow', 0xb5f29, [] )
DSAmbientShadow = ShaderObjectInfo( 791, 'DSAmbientShadow', 0x78d29, [] )
BSAddMRT = ShaderObjectInfo( 792, 'BSAddMRT', 0x3ca94, [] )
CBMirror = ShaderObjectInfo( 793, 'CBMirror', 0x23e17, [] )
CBInfParticleContext = ShaderObjectInfo( 794, 'CBInfParticleContext', 0xe1115, [] )
CBInfParticleTexture = ShaderObjectInfo( 795, 'CBInfParticleTexture', 0x59919, [] )
SSInfParticle = ShaderObjectInfo( 796, 'SSInfParticle', 0xca367, [] )
SSInfParticlePoint = ShaderObjectInfo( 797, 'SSInfParticlePoint', 0xaddac, [] )
SSIndirectMapUser = ShaderObjectInfo( 798, 'SSIndirectMapUser', 0x50ddc, [] )
SSFrozenNoizeMapUser = ShaderObjectInfo( 799, 'SSFrozenNoizeMapUser', 0x2db20, [] )
CBIndirectUser = ShaderObjectInfo( 800, 'CBIndirectUser', 0x5bb67, [] )
CBFrozenUser = ShaderObjectInfo( 801, 'CBFrozenUser', 0xfacd6, [] )
SSMVC3AlbedoMap = ShaderObjectInfo( 802, 'SSMVC3AlbedoMap', 0xb6fd, [] )
SSMVC3AlbedoMapClamp = ShaderObjectInfo( 803, 'SSMVC3AlbedoMapClamp', 0x6b55, [] )
SSMVC3NormalMap = ShaderObjectInfo( 804, 'SSMVC3NormalMap', 0xe40f2, [] )
SSMVC3NormalMapClamp = ShaderObjectInfo( 805, 'SSMVC3NormalMapClamp', 0x14855, [] )
SSMVC3TransparencyMap = ShaderObjectInfo( 806, 'SSMVC3TransparencyMap', 0x8a046, [] )
SSMVC3SpecularMap = ShaderObjectInfo( 807, 'SSMVC3SpecularMap', 0x62b12, [] )
SSMVC3OcclusionMap = ShaderObjectInfo( 808, 'SSMVC3OcclusionMap', 0xafa43, [] )
SSMVC3LightMap = ShaderObjectInfo( 809, 'SSMVC3LightMap', 0xb0d74, [] )
SSTransparencyMapClamp = ShaderObjectInfo( 810, 'SSTransparencyMapClamp', 0xde5e0, [] )
CBToon = ShaderObjectInfo( 811, 'CBToon', 0x90268, [] )
CBToon2 = ShaderObjectInfo( 812, 'CBToon2', 0x4f1e8, [] )
CBHalfLambert = ShaderObjectInfo( 813, 'CBHalfLambert', 0xac903, [] )
CBDiffuseColorCorect = ShaderObjectInfo( 814, 'CBDiffuseColorCorect', 0x7e1bf, [] )
SSToonMap = ShaderObjectInfo( 815, 'SSToonMap', 0x24709, [] )
CBHatchingFilter = ShaderObjectInfo( 816, 'CBHatchingFilter', 0xad4f1, [] )
CBFurSell = ShaderObjectInfo( 817, 'CBFurSell', 0xfdec2, [] )
CBFilterAntiEdgeBrightness = ShaderObjectInfo( 818, 'CBFilterAntiEdgeBrightness', 0xf7055, [] )
SSAntiEdgeBrightnessMask = ShaderObjectInfo( 819, 'SSAntiEdgeBrightnessMask', 0x7bab9, [] )
CBFilterAnaglyph = ShaderObjectInfo( 820, 'CBFilterAnaglyph', 0x87db1, [] )
CBDistortionFilter = ShaderObjectInfo( 821, 'CBDistortionFilter', 0x7748f, [] )
tBaseMap = ShaderObjectInfo( 822, 'tBaseMap', 0xaf34, [] )
tCubeMap = ShaderObjectInfo( 823, 'tCubeMap', 0x5a3f, [] )
tDepthMap = ShaderObjectInfo( 824, 'tDepthMap', 0x377b6, [] )
tVolumeMap = ShaderObjectInfo( 825, 'tVolumeMap', 0x603e7, [] )
tTestMap = ShaderObjectInfo( 826, 'tTestMap', 0xa742c, [] )
tBlendMap = ShaderObjectInfo( 827, 'tBlendMap', 0x99851, [] )
tReductionBlendMap = ShaderObjectInfo( 828, 'tReductionBlendMap', 0x8f23f, [] )
tOcclusionDepth = ShaderObjectInfo( 829, 'tOcclusionDepth', 0x904d, [] )
tTableMap = ShaderObjectInfo( 830, 'tTableMap', 0x3c580, [] )
tVertexPositionMap = ShaderObjectInfo( 831, 'tVertexPositionMap', 0x298de, [] )
tVertexPositionSubMap = ShaderObjectInfo( 832, 'tVertexPositionSubMap', 0xa227d, [] )
tVertexNormalMap = ShaderObjectInfo( 833, 'tVertexNormalMap', 0x282e9, [] )
tVertexTangentMap = ShaderObjectInfo( 834, 'tVertexTangentMap', 0x15232, [] )
tProcedural1D0 = ShaderObjectInfo( 835, 'tProcedural1D0', 0x85551, [] )
tProcedural1D1 = ShaderObjectInfo( 836, 'tProcedural1D1', 0xf65c7, [] )
tProcedural1D2 = ShaderObjectInfo( 837, 'tProcedural1D2', 0x6347d, [] )
tProcedural1D3 = ShaderObjectInfo( 838, 'tProcedural1D3', 0x104eb, [] )
tProcedural2D0 = ShaderObjectInfo( 839, 'tProcedural2D0', 0xeeb08, [] )
tProcedural2D1 = ShaderObjectInfo( 840, 'tProcedural2D1', 0x9db9e, [] )
tProcedural2D2 = ShaderObjectInfo( 841, 'tProcedural2D2', 0x8a24, [] )
tProcedural2D3 = ShaderObjectInfo( 842, 'tProcedural2D3', 0x7bab2, [] )
tFilterTempMap1 = ShaderObjectInfo( 843, 'tFilterTempMap1', 0x931b7, [] )
tFilterTempMap2 = ShaderObjectInfo( 844, 'tFilterTempMap2', 0x600d, [] )
tFogTable = ShaderObjectInfo( 845, 'tFogTable', 0xee653, [] )
tFogTableVTF = ShaderObjectInfo( 846, 'tFogTableVTF', 0x74491, [] )
tFogVolumeMap = ShaderObjectInfo( 847, 'tFogVolumeMap', 0xe7104, [] )
tFogFrontDepth = ShaderObjectInfo( 848, 'tFogFrontDepth', 0x6166e, [] )
tFogBackDepth = ShaderObjectInfo( 849, 'tFogBackDepth', 0x726bd, [] )
tFogFrontDepthSmall = ShaderObjectInfo( 850, 'tFogFrontDepthSmall', 0x7b747, [] )
tFogBackDepthSmall = ShaderObjectInfo( 851, 'tFogBackDepthSmall', 0xa27e3, [] )
tMatrixMap = ShaderObjectInfo( 852, 'tMatrixMap', 0xe06ea, [] )
tMatrixPFMap = ShaderObjectInfo( 853, 'tMatrixPFMap', 0x7c770, [] )
tSpotLightTexture0 = ShaderObjectInfo( 854, 'tSpotLightTexture0', 0xe2e4, [] )
tSpotLightTexture1 = ShaderObjectInfo( 855, 'tSpotLightTexture1', 0x7d272, [] )
tSpotLightTexture2 = ShaderObjectInfo( 856, 'tSpotLightTexture2', 0xe83c8, [] )
tSpotLightTexture3 = ShaderObjectInfo( 857, 'tSpotLightTexture3', 0x9b35e, [] )
tSpotLightTexture4 = ShaderObjectInfo( 858, 'tSpotLightTexture4', 0xd26fd, [] )
tSpotLightTexture5 = ShaderObjectInfo( 859, 'tSpotLightTexture5', 0xa166b, [] )
tSpotLightTexture6 = ShaderObjectInfo( 860, 'tSpotLightTexture6', 0x347d1, [] )
tSpotLightTexture7 = ShaderObjectInfo( 861, 'tSpotLightTexture7', 0x47747, [] )
tPointLightTexture0 = ShaderObjectInfo( 862, 'tPointLightTexture0', 0x60f5a, [] )
tPointLightTexture1 = ShaderObjectInfo( 863, 'tPointLightTexture1', 0x13fcc, [] )
tPointLightTexture2 = ShaderObjectInfo( 864, 'tPointLightTexture2', 0x86e76, [] )
tPointLightTexture3 = ShaderObjectInfo( 865, 'tPointLightTexture3', 0xf5ee0, [] )
tPointLightTexture4 = ShaderObjectInfo( 866, 'tPointLightTexture4', 0xbcb43, [] )
tPointLightTexture5 = ShaderObjectInfo( 867, 'tPointLightTexture5', 0xcfbd5, [] )
tPointLightTexture6 = ShaderObjectInfo( 868, 'tPointLightTexture6', 0x5aa6f, [] )
tPointLightTexture7 = ShaderObjectInfo( 869, 'tPointLightTexture7', 0x29af9, [] )
tLightAccumulationTexture0 = ShaderObjectInfo( 870, 'tLightAccumulationTexture0', 0x225b6, [] )
tLightAccumulationTexture1 = ShaderObjectInfo( 871, 'tLightAccumulationTexture1', 0x51520, [] )
tSpheremapLutTexture = ShaderObjectInfo( 872, 'tSpheremapLutTexture', 0xd0e52, [] )
tDSFBuffer = ShaderObjectInfo( 873, 'tDSFBuffer', 0xf0061, [] )
tTransparencyMap = ShaderObjectInfo( 874, 'tTransparencyMap', 0x1698a, [] )
tAlbedoMap = ShaderObjectInfo( 875, 'tAlbedoMap', 0xcd06f, [] )
tAlbedoBlendMap = ShaderObjectInfo( 876, 'tAlbedoBlendMap', 0xff5be, [] )
tOcclusionMap = ShaderObjectInfo( 877, 'tOcclusionMap', 0x1e421, [] )
tNormalMap = ShaderObjectInfo( 878, 'tNormalMap', 0x22660, [] )
tNormalBlendMap = ShaderObjectInfo( 879, 'tNormalBlendMap', 0xed6be, [] )
tDetailNormalMap = ShaderObjectInfo( 880, 'tDetailNormalMap', 0x75a53, [] )
tDetailNormalMap2 = ShaderObjectInfo( 881, 'tDetailNormalMap2', 0xd4694, [] )
tDetailMaskMap = ShaderObjectInfo( 882, 'tDetailMaskMap', 0x88165, [] )
tHeightMap = ShaderObjectInfo( 883, 'tHeightMap', 0x7b571, [] )
tHairShiftMap = ShaderObjectInfo( 884, 'tHairShiftMap', 0x1cb2a, [] )
tLightMaskMap = ShaderObjectInfo( 885, 'tLightMaskMap', 0xc496e, [] )
tLightMap = ShaderObjectInfo( 886, 'tLightMap', 0xaa6f0, [] )
tThinMap = ShaderObjectInfo( 887, 'tThinMap', 0x5f2a, [] )
tIndirectMap = ShaderObjectInfo( 888, 'tIndirectMap', 0x6ab7e, [] )
tIndirectMaskMap = ShaderObjectInfo( 889, 'tIndirectMaskMap', 0x90ac1, [] )
tFresnelMap = ShaderObjectInfo( 890, 'tFresnelMap', 0x47c5a, [] )
tEnvMap = ShaderObjectInfo( 891, 'tEnvMap', 0x64c43, [] )
tSphereMap = ShaderObjectInfo( 892, 'tSphereMap', 0x343f4, [] )
tGlobalEnvMap = ShaderObjectInfo( 893, 'tGlobalEnvMap', 0xf1d7e, [] )
tMaskMap = ShaderObjectInfo( 894, 'tMaskMap', 0x7a8ee, [] )
tSpecularMap = ShaderObjectInfo( 895, 'tSpecularMap', 0xed1b, [] )
tSpecularBlendMap = ShaderObjectInfo( 896, 'tSpecularBlendMap', 0x181cf, [] )
tShininessMap = ShaderObjectInfo( 897, 'tShininessMap', 0xa9787, [] )
tEmissionMap = ShaderObjectInfo( 898, 'tEmissionMap', 0xed93b, [] )
tDistortionMap = ShaderObjectInfo( 899, 'tDistortionMap', 0x32105, [] )
tNoise = ShaderObjectInfo( 900, 'tNoise', 0x45fbb, [] )
tDepthTestMap = ShaderObjectInfo( 901, 'tDepthTestMap', 0x57e05, [] )
tWcVtfPos = ShaderObjectInfo( 902, 'tWcVtfPos', 0x9a94b, [] )
tWcVtfPos1 = ShaderObjectInfo( 903, 'tWcVtfPos1', 0xe818b, [] )
tWcVtfPrevPos = ShaderObjectInfo( 904, 'tWcVtfPrevPos', 0xe1a61, [] )
tWcVtfPrevPos1 = ShaderObjectInfo( 905, 'tWcVtfPrevPos1', 0x2efee, [] )
tShaderAttributes = ShaderObjectInfo( 906, 'tShaderAttributes', 0x1c967, [] )
tVtxDisplacement = ShaderObjectInfo( 907, 'tVtxDisplacement', 0x4934a, [] )
tVtxDispMask = ShaderObjectInfo( 908, 'tVtxDispMask', 0x39c0, [] )
tShadowMapCombine = ShaderObjectInfo( 909, 'tShadowMapCombine', 0xd8dbb, [] )
tShadowMapCombine0 = ShaderObjectInfo( 910, 'tShadowMapCombine0', 0x4f725, [] )
tShadowMapCombine1 = ShaderObjectInfo( 911, 'tShadowMapCombine1', 0x3c7b3, [] )
tShadowMapCombine2 = ShaderObjectInfo( 912, 'tShadowMapCombine2', 0xa9609, [] )
tShadowMapCombine3 = ShaderObjectInfo( 913, 'tShadowMapCombine3', 0xda69f, [] )
tVirtualCubeShadowFaceSelection = ShaderObjectInfo( 914, 'tVirtualCubeShadowFaceSelection', 0x811a3, [] )
tVirtualCubeShadowFaceOffset = ShaderObjectInfo( 915, 'tVirtualCubeShadowFaceOffset', 0xc1f66, [] )
tVirtualCubeShadowIndirection = ShaderObjectInfo( 916, 'tVirtualCubeShadowIndirection', 0xbb0eb, [] )
tFrontParaboloidMap = ShaderObjectInfo( 917, 'tFrontParaboloidMap', 0x6d000, [] )
tBackParaboloidMap = ShaderObjectInfo( 918, 'tBackParaboloidMap', 0xa52e7, [] )
tGBuffer = ShaderObjectInfo( 919, 'tGBuffer', 0xfa06c, [] )
tComparisonTexture = ShaderObjectInfo( 920, 'tComparisonTexture', 0x3be61, [] )
tAmbientMaskMap = ShaderObjectInfo( 921, 'tAmbientMaskMap', 0xa820, [] )
tReflectiveShadowMap0 = ShaderObjectInfo( 922, 'tReflectiveShadowMap0', 0x4d7ed, [] )
tReflectiveShadowMap1 = ShaderObjectInfo( 923, 'tReflectiveShadowMap1', 0x3e77b, [] )
tIndirectLighting = ShaderObjectInfo( 924, 'tIndirectLighting', 0x2323f, [] )
tSSSDiffuseMap0 = ShaderObjectInfo( 925, 'tSSSDiffuseMap0', 0x47a64, [] )
tSSSDiffuseMap1 = ShaderObjectInfo( 926, 'tSSSDiffuseMap1', 0x34af2, [] )
tSSSDiffuseMap2 = ShaderObjectInfo( 927, 'tSSSDiffuseMap2', 0xa1b48, [] )
tSSSDiffuseMap3 = ShaderObjectInfo( 928, 'tSSSDiffuseMap3', 0xd2bde, [] )
tSSSDiffuseMap4 = ShaderObjectInfo( 929, 'tSSSDiffuseMap4', 0x9be7d, [] )
tSSSDiffuseMap5 = ShaderObjectInfo( 930, 'tSSSDiffuseMap5', 0xe8eeb, [] )
tDisplacementMap = ShaderObjectInfo( 931, 'tDisplacementMap', 0x3b490, [] )
tDepthBiasMap = ShaderObjectInfo( 932, 'tDepthBiasMap', 0xeebd1, [] )
tDispersionMap = ShaderObjectInfo( 933, 'tDispersionMap', 0x1356f, [] )
tPrimDepthMap = ShaderObjectInfo( 934, 'tPrimDepthMap', 0x75926, [] )
tPrimNormalMap = ShaderObjectInfo( 935, 'tPrimNormalMap', 0x9210a, [] )
tPrimMaskMap = ShaderObjectInfo( 936, 'tPrimMaskMap', 0xa9e1d, [] )
tPrimSceneMap = ShaderObjectInfo( 937, 'tPrimSceneMap', 0x890f8, [] )
tPrimAlphaMap = ShaderObjectInfo( 938, 'tPrimAlphaMap', 0x72798, [] )
tTVNoiseMap = ShaderObjectInfo( 939, 'tTVNoiseMap', 0xd6b8a, [] )
tTVNoiseMaskMap = ShaderObjectInfo( 940, 'tTVNoiseMaskMap', 0xd808a, [] )
tColorCorrectTableMap = ShaderObjectInfo( 941, 'tColorCorrectTableMap', 0xeb178, [] )
tCubeBlendMap = ShaderObjectInfo( 942, 'tCubeBlendMap', 0x8c5a1, [] )
tDOFMap = ShaderObjectInfo( 943, 'tDOFMap', 0x61f3, [] )
tSSAONarrowMap = ShaderObjectInfo( 944, 'tSSAONarrowMap', 0x2abaf, [] )
tSSAOWideMap = ShaderObjectInfo( 945, 'tSSAOWideMap', 0xfa82e, [] )
tSSAONormalMap = ShaderObjectInfo( 946, 'tSSAONormalMap', 0x672c, [] )
tSSAOReductionNormalMap = ShaderObjectInfo( 947, 'tSSAOReductionNormalMap', 0xb6053, [] )
tSSAOBackFaceDepthMap = ShaderObjectInfo( 948, 'tSSAOBackFaceDepthMap', 0x86f0b, [] )
tTangentMap = ShaderObjectInfo( 949, 'tTangentMap', 0x34912, [] )
tWaterRefraction = ShaderObjectInfo( 950, 'tWaterRefraction', 0x3ffea, [] )
tWaterReflection = ShaderObjectInfo( 951, 'tWaterReflection', 0x35a6f, [] )
tWaterEnvironment = ShaderObjectInfo( 952, 'tWaterEnvironment', 0xae385, [] )
tWaterDetail = ShaderObjectInfo( 953, 'tWaterDetail', 0xd02f0, [] )
tWaterDetail2 = ShaderObjectInfo( 954, 'tWaterDetail2', 0xbe9e, [] )
tWaterCaustics = ShaderObjectInfo( 955, 'tWaterCaustics', 0xf58a, [] )
tWaterBubble = ShaderObjectInfo( 956, 'tWaterBubble', 0xb8c94, [] )
tWaterBubble2 = ShaderObjectInfo( 957, 'tWaterBubble2', 0xa3d51, [] )
tWaterBubbleMask = ShaderObjectInfo( 958, 'tWaterBubbleMask', 0xa0778, [] )
tWaterShadow = ShaderObjectInfo( 959, 'tWaterShadow', 0xdff4e, [] )
tWaterRipple = ShaderObjectInfo( 960, 'tWaterRipple', 0xf1c86, [] )
tWaterDepthMap = ShaderObjectInfo( 961, 'tWaterDepthMap', 0x3a000, [] )
tWaterSurfaceMap = ShaderObjectInfo( 962, 'tWaterSurfaceMap', 0xc9f82, [] )
tWaterSurfaceMap2 = ShaderObjectInfo( 963, 'tWaterSurfaceMap2', 0xa7f13, [] )
tGUIBaseMap = ShaderObjectInfo( 964, 'tGUIBaseMap', 0x5be8c, [] )
tGUIBlendMap = ShaderObjectInfo( 965, 'tGUIBlendMap', 0x996fe, [] )
tGUIAlphaMap = ShaderObjectInfo( 966, 'tGUIAlphaMap', 0x307a7, [] )
tYUVDecoderY = ShaderObjectInfo( 967, 'tYUVDecoderY', 0xdbccc, [] )
tYUVDecoderU = ShaderObjectInfo( 968, 'tYUVDecoderU', 0xbf0e7, [] )
tYUVDecoderV = ShaderObjectInfo( 969, 'tYUVDecoderV', 0x2a15d, [] )
tTextureBlendSource0 = ShaderObjectInfo( 970, 'tTextureBlendSource0', 0x2267c, [] )
tTextureBlendSource1 = ShaderObjectInfo( 971, 'tTextureBlendSource1', 0x516ea, [] )
tTextureBlendSourceCube0 = ShaderObjectInfo( 972, 'tTextureBlendSourceCube0', 0x8a204, [] )
tTextureBlendSourceCube1 = ShaderObjectInfo( 973, 'tTextureBlendSourceCube1', 0xf9292, [] )
tGrassAlbedoMap = ShaderObjectInfo( 974, 'tGrassAlbedoMap', 0x29f23, [] )
tDynamicEditMap = ShaderObjectInfo( 975, 'tDynamicEditMap', 0x4a4f4, [] )
tWindMap = ShaderObjectInfo( 976, 'tWindMap', 0x9aa66, [] )
tMirageDepthMap = ShaderObjectInfo( 977, 'tMirageDepthMap', 0x79784, [] )
tMirageSceneMap = ShaderObjectInfo( 978, 'tMirageSceneMap', 0x85e5a, [] )
tMirageRefractionMap = ShaderObjectInfo( 979, 'tMirageRefractionMap', 0xeccaa, [] )
tMirageNoiseMap = ShaderObjectInfo( 980, 'tMirageNoiseMap', 0x4839c, [] )
tSimWaterForView = ShaderObjectInfo( 981, 'tSimWaterForView', 0x91766, [] )
tSoftBodySrcTex1 = ShaderObjectInfo( 982, 'tSoftBodySrcTex1', 0x2d4ef, [] )
tSoftBodySrcTex2 = ShaderObjectInfo( 983, 'tSoftBodySrcTex2', 0xb8555, [] )
tSoftBodySrcTex3 = ShaderObjectInfo( 984, 'tSoftBodySrcTex3', 0xcb5c3, [] )
tSoftBodySrcTex4 = ShaderObjectInfo( 985, 'tSoftBodySrcTex4', 0x82060, [] )
tSoftBodySrcTex5 = ShaderObjectInfo( 986, 'tSoftBodySrcTex5', 0xf10f6, [] )
tSoftBodySrcTex6 = ShaderObjectInfo( 987, 'tSoftBodySrcTex6', 0x6414c, [] )
tSoftBodySrcTex7 = ShaderObjectInfo( 988, 'tSoftBodySrcTex7', 0x171da, [] )
tSoftBodyTexSphere = ShaderObjectInfo( 989, 'tSoftBodyTexSphere', 0x6ed89, [] )
tSoftBodyTexTriangle = ShaderObjectInfo( 990, 'tSoftBodyTexTriangle', 0x7dc41, [] )
tSoftBodyTexBox = ShaderObjectInfo( 991, 'tSoftBodyTexBox', 0x60555, [] )
tSoftBodyTexEllipsoid = ShaderObjectInfo( 992, 'tSoftBodyTexEllipsoid', 0x7b304, [] )
tSoftBodyTexCapsule = ShaderObjectInfo( 993, 'tSoftBodyTexCapsule', 0x67c82, [] )
tSoftBodyTexTerrain = ShaderObjectInfo( 994, 'tSoftBodyTexTerrain', 0x88eb0, [] )
tSoftBodyTexDepthNorm1 = ShaderObjectInfo( 995, 'tSoftBodyTexDepthNorm1', 0x30c86, [] )
tSoftBodyTexDepthNorm2 = ShaderObjectInfo( 996, 'tSoftBodyTexDepthNorm2', 0xa5d3c, [] )
tSoftBodyTexDepthNorm3 = ShaderObjectInfo( 997, 'tSoftBodyTexDepthNorm3', 0xd6daa, [] )
tSoftBodyTexDepthNorm4 = ShaderObjectInfo( 998, 'tSoftBodyTexDepthNorm4', 0x9f809, [] )
tSoftBodyTexDepthNorm5 = ShaderObjectInfo( 999, 'tSoftBodyTexDepthNorm5', 0xec89f, [] )
tSoftBodyTexDepthNorm6 = ShaderObjectInfo( 1000, 'tSoftBodyTexDepthNorm6', 0x79925, [] )
tSoftBodyTexDepthNorm7 = ShaderObjectInfo( 1001, 'tSoftBodyTexDepthNorm7', 0xa9b3, [] )
tSoftBodyTexDepthNorm8 = ShaderObjectInfo( 1002, 'tSoftBodyTexDepthNorm8', 0xfb422, [] )
tBuilderBaseMap = ShaderObjectInfo( 1003, 'tBuilderBaseMap', 0xf0bbe, [] )
tRayleighDepthMap = ShaderObjectInfo( 1004, 'tRayleighDepthMap', 0x23a7c, [] )
tMieDepthMap = ShaderObjectInfo( 1005, 'tMieDepthMap', 0x6329c, [] )
tRayleighScatterMap = ShaderObjectInfo( 1006, 'tRayleighScatterMap', 0x6edb9, [] )
tMieScatterMap = ShaderObjectInfo( 1007, 'tMieScatterMap', 0x319d3, [] )
tCloudScatterMap = ShaderObjectInfo( 1008, 'tCloudScatterMap', 0x76682, [] )
tStarrySkyMap = ShaderObjectInfo( 1009, 'tStarrySkyMap', 0x367b0, [] )
tAmbientShadowMap = ShaderObjectInfo( 1010, 'tAmbientShadowMap', 0x2edc, [] )
tIndirectMapUser = ShaderObjectInfo( 1011, 'tIndirectMapUser', 0xa9331, [] )
tIndirectMapSpecularUser = ShaderObjectInfo( 1012, 'tIndirectMapSpecularUser', 0xce285, [] )
tFrozenNoizeMapUser = ShaderObjectInfo( 1013, 'tFrozenNoizeMapUser', 0x23264, [] )
tToonMap = ShaderObjectInfo( 1014, 'tToonMap', 0x59a32, [] )
tToonRevMap = ShaderObjectInfo( 1015, 'tToonRevMap', 0x51942, [] )
rwTileMax = ShaderObjectInfo( 1016, 'rwTileMax', 0x72bbb, [] )
max4 = ShaderObjectInfo( 1017, 'max4', 0xa961, [] )
makeDirectionFromUV = ShaderObjectInfo( 1018, 'makeDirectionFromUV', 0x32a4, [] )
easeIn = ShaderObjectInfo( 1019, 'easeIn', 0x120e2, [] )
calcViewDepth = ShaderObjectInfo( 1020, 'calcViewDepth', 0xe8d21, [] )
FLinearColor = ShaderObjectInfo( 1021, 'FLinearColor', 0x90, [] )
FLinearColorSRGB = ShaderObjectInfo( 1022, 'FLinearColorSRGB', 0x45e67, [] )
FFrontFaceNormal = ShaderObjectInfo( 1023, 'FFrontFaceNormal', 0xd88b4, [] )
FFrontFaceNormalTwoSidedLH = ShaderObjectInfo( 1024, 'FFrontFaceNormalTwoSidedLH', 0x2cb25, [] )
FFrontFaceReverseNormal = ShaderObjectInfo( 1025, 'FFrontFaceReverseNormal', 0x4e157, [] )
FFrontFaceReverseNormalTwoSidedLH = ShaderObjectInfo( 1026, 'FFrontFaceReverseNormalTwoSidedLH', 0xe2133, [] )
FViewProj = ShaderObjectInfo( 1027, 'FViewProj', 0x88c2f, [] )
FUVProj = ShaderObjectInfo( 1028, 'FUVProj', 0x28f5f, [] )
FDithering = ShaderObjectInfo( 1029, 'FDithering', 0x1a2ad, [] )
FDitheringBayer10bit = ShaderObjectInfo( 1030, 'FDitheringBayer10bit', 0x7e772, [] )
FDitheringBayer8bit = ShaderObjectInfo( 1031, 'FDitheringBayer8bit', 0x49610, [] )
VS_System = ShaderObjectInfo( 1032, 'VS_System', 0x90bc8, [] )
VS_SystemDownSample16 = ShaderObjectInfo( 1033, 'VS_SystemDownSample16', 0x2898c, [] )
FToneMap = ShaderObjectInfo( 1034, 'FToneMap', 0xc6083, [] )
FLuminance = ShaderObjectInfo( 1035, 'FLuminance', 0x4eeed, [] )
FLuminanceEnable = ShaderObjectInfo( 1036, 'FLuminanceEnable', 0xfe847, [] )
FSystemCopy = ShaderObjectInfo( 1037, 'FSystemCopy', 0x95184, [] )
FSystemCopyGamma = ShaderObjectInfo( 1038, 'FSystemCopyGamma', 0xfff1e, [] )
FSystemConvertHightMapToNormalMap = ShaderObjectInfo( 1039, 'FSystemConvertHightMapToNormalMap', 0x76269, [] )
FSystemConvertHightMapToParallaxMap = ShaderObjectInfo( 1040, 'FSystemConvertHightMapToParallaxMap', 0x2af95, [] )
FSystemConvertReverseHightMapToNormalMap = ShaderObjectInfo( 1041, 'FSystemConvertReverseHightMapToNormalMap', 0x6e9ab, [] )
FSystemConvertReverseHightMapToParallaxMap = ShaderObjectInfo( 1042, 'FSystemConvertReverseHightMapToParallaxMap', 0x41b10, [] )
FSystemConvertBaseMapToNormalMap = ShaderObjectInfo( 1043, 'FSystemConvertBaseMapToNormalMap', 0x8554a, [] )
FSystemMakeMipLevel = ShaderObjectInfo( 1044, 'FSystemMakeMipLevel', 0xe8a14, [] )
FSystemCacheCopyY = ShaderObjectInfo( 1045, 'FSystemCacheCopyY', 0x3b944, [] )
FSystemCacheCopyCb = ShaderObjectInfo( 1046, 'FSystemCacheCopyCb', 0xe6c9f, [] )
FSystemCacheCopyCr = ShaderObjectInfo( 1047, 'FSystemCacheCopyCr', 0x97cfb, [] )
FSystemCacheDecodeCopy = ShaderObjectInfo( 1048, 'FSystemCacheDecodeCopy', 0x2314, [] )
PS_SystemCopy = ShaderObjectInfo( 1049, 'PS_SystemCopy', 0xee329, [] )
PS_SystemDepthCopy = ShaderObjectInfo( 1050, 'PS_SystemDepthCopy', 0x15da8, [] )
PS_SystemDepthDownSample = ShaderObjectInfo( 1051, 'PS_SystemDepthDownSample', 0xec68f, [] )
PS_SystemDepthHMax = ShaderObjectInfo( 1052, 'PS_SystemDepthHMax', 0x75ba1, [] )
PS_SystemDepthVMax = ShaderObjectInfo( 1053, 'PS_SystemDepthVMax', 0x17b0d, [] )
PS_SystemMiniDepthCopy = ShaderObjectInfo( 1054, 'PS_SystemMiniDepthCopy', 0xf93e4, [] )
PS_SystemAACopy = ShaderObjectInfo( 1055, 'PS_SystemAACopy', 0xfbc8a, [] )
PS_SystemToneMap = ShaderObjectInfo( 1056, 'PS_SystemToneMap', 0xe86da, [] )
PS_SystemToneMapDepth = ShaderObjectInfo( 1057, 'PS_SystemToneMapDepth', 0x990f1, [] )
PS_SystemClear = ShaderObjectInfo( 1058, 'PS_SystemClear', 0x2f0b3, [] )
PS_SystemClearMRT2 = ShaderObjectInfo( 1059, 'PS_SystemClearMRT2', 0x8fc66, [] )
PS_SystemClearMRT3 = ShaderObjectInfo( 1060, 'PS_SystemClearMRT3', 0xfccf0, [] )
PS_SystemClearMRT4 = ShaderObjectInfo( 1061, 'PS_SystemClearMRT4', 0xb5953, [] )
PS_SystemDepthToAlpha = ShaderObjectInfo( 1062, 'PS_SystemDepthToAlpha', 0xcb16a, [] )
PS_SystemDepthToAlphaAA = ShaderObjectInfo( 1063, 'PS_SystemDepthToAlphaAA', 0xd9a99, [] )
PS_SystemDownSample4 = ShaderObjectInfo( 1064, 'PS_SystemDownSample4', 0xf6893, [] )
PS_SystemDownSample4Emphansis = ShaderObjectInfo( 1065, 'PS_SystemDownSample4Emphansis', 0x790f3, [] )
PS_SystemDownSample4HDR = ShaderObjectInfo( 1066, 'PS_SystemDownSample4HDR', 0x9bcaa, [] )
PS_SystemDownSample16 = ShaderObjectInfo( 1067, 'PS_SystemDownSample16', 0xf8c4a, [] )
PS_SystemOcclusionConvertZ = ShaderObjectInfo( 1068, 'PS_SystemOcclusionConvertZ', 0x9ecd2, [] )
PS_SystemPS3AACopy = ShaderObjectInfo( 1069, 'PS_SystemPS3AACopy', 0xaa0a0, [] )
PS_SystemPS3AADepthCopy = ShaderObjectInfo( 1070, 'PS_SystemPS3AADepthCopy', 0x4a7ab, [] )
PS_SystemPS3ZcullReload = ShaderObjectInfo( 1071, 'PS_SystemPS3ZcullReload', 0xbdcf2, [] )
PS_SystemClearStencilRouting = ShaderObjectInfo( 1072, 'PS_SystemClearStencilRouting', 0xd812b, [] )
PS_SystemFillStencilRouting = ShaderObjectInfo( 1073, 'PS_SystemFillStencilRouting', 0x22a87, [] )
FAlphaTest = ShaderObjectInfo( 1074, 'FAlphaTest', 0x84f11, [] )
FAlphaTestAlways = ShaderObjectInfo( 1075, 'FAlphaTestAlways', 0xaa2b3, [] )
FAlphaTestNever = ShaderObjectInfo( 1076, 'FAlphaTestNever', 0xafebf, [] )
FAlphaTestGreater = ShaderObjectInfo( 1077, 'FAlphaTestGreater', 0xd0c33, [] )
FAlphaTestGreaterEqual = ShaderObjectInfo( 1078, 'FAlphaTestGreaterEqual', 0xe273, [] )
FAlphaTestLess = ShaderObjectInfo( 1079, 'FAlphaTestLess', 0x93ab, [] )
FAlphaTestLessEqual = ShaderObjectInfo( 1080, 'FAlphaTestLessEqual', 0x10d43, [] )
FAlphaTestEqual = ShaderObjectInfo( 1081, 'FAlphaTestEqual', 0x44958, [] )
FAlphaTestNotEqual = ShaderObjectInfo( 1082, 'FAlphaTestNotEqual', 0x6dd66, [] )
FAlphaToCoverageROP = ShaderObjectInfo( 1083, 'FAlphaToCoverageROP', 0x4af2b, [] )
FAlphaToCoverage = ShaderObjectInfo( 1084, 'FAlphaToCoverage', 0x49cbc, [] )
encodeSRGB = ShaderObjectInfo( 1085, 'encodeSRGB', 0xd8f42, [] )
FOutputEncode = ShaderObjectInfo( 1086, 'FOutputEncode', 0x111b7, [] )
FOutputEncodeNone = ShaderObjectInfo( 1087, 'FOutputEncodeNone', 0x1760c, [] )
FOutputEncodeZero = ShaderObjectInfo( 1088, 'FOutputEncodeZero', 0xf8751, [] )
FOutputEncodeDepth24 = ShaderObjectInfo( 1089, 'FOutputEncodeDepth24', 0xbbae2, [] )
FOutputEncodeRCRGB = ShaderObjectInfo( 1090, 'FOutputEncodeRCRGB', 0x2ad30, [] )
FOutputEncodeRRRGB = ShaderObjectInfo( 1091, 'FOutputEncodeRRRGB', 0x79dca, [] )
FOutputEncodeRGBI = ShaderObjectInfo( 1092, 'FOutputEncodeRGBI', 0x98e3e, [] )
FOutputEncodeRRRGBI = ShaderObjectInfo( 1093, 'FOutputEncodeRRRGBI', 0xd3507, [] )
FOutputEncodeNormal = ShaderObjectInfo( 1094, 'FOutputEncodeNormal', 0xd44fe, [] )
FOutputEncodeVariance = ShaderObjectInfo( 1095, 'FOutputEncodeVariance', 0x3fe89, [] )
FOutputEncodeSRGBRCRGB = ShaderObjectInfo( 1096, 'FOutputEncodeSRGBRCRGB', 0xea25, [] )
FOutputEncodeSRGBRRRGBI = ShaderObjectInfo( 1097, 'FOutputEncodeSRGBRRRGBI', 0x883ab, [] )
FOutputEncodeSRGBRRRGB = ShaderObjectInfo( 1098, 'FOutputEncodeSRGBRRRGB', 0x5dadf, [] )
FOutputEncodeSRGB = ShaderObjectInfo( 1099, 'FOutputEncodeSRGB', 0xda50d, [] )
FOutputEncodeSRGBRGBI = ShaderObjectInfo( 1100, 'FOutputEncodeSRGBRGBI', 0xb9409, [] )
decodeSRGB = ShaderObjectInfo( 1101, 'decodeSRGB', 0xa7aa1, [] )
FProcedural1D1E0 = ShaderObjectInfo( 1102, 'FProcedural1D1E0', 0xc559d, [] )
FProcedural1D1E1 = ShaderObjectInfo( 1103, 'FProcedural1D1E1', 0xb650b, [] )
FProcedural1D1E2 = ShaderObjectInfo( 1104, 'FProcedural1D1E2', 0x234b1, [] )
FProcedural1D1E3 = ShaderObjectInfo( 1105, 'FProcedural1D1E3', 0x50427, [] )
FProcedural1D2E0 = ShaderObjectInfo( 1106, 'FProcedural1D2E0', 0xaebc4, [] )
FProcedural1D2E1 = ShaderObjectInfo( 1107, 'FProcedural1D2E1', 0xddb52, [] )
FProcedural1D2E2 = ShaderObjectInfo( 1108, 'FProcedural1D2E2', 0x48ae8, [] )
FProcedural1D2E3 = ShaderObjectInfo( 1109, 'FProcedural1D2E3', 0x3ba7e, [] )
FProcedural1D3E0 = ShaderObjectInfo( 1110, 'FProcedural1D3E0', 0x881f3, [] )
FProcedural1D3E1 = ShaderObjectInfo( 1111, 'FProcedural1D3E1', 0xfb165, [] )
FProcedural1D3E2 = ShaderObjectInfo( 1112, 'FProcedural1D3E2', 0x6e0df, [] )
FProcedural1D3E3 = ShaderObjectInfo( 1113, 'FProcedural1D3E3', 0x1d049, [] )
FProcedural1D4E0 = ShaderObjectInfo( 1114, 'FProcedural1D4E0', 0x79776, [] )
FProcedural1D4E1 = ShaderObjectInfo( 1115, 'FProcedural1D4E1', 0xa7e0, [] )
FProcedural1D4E2 = ShaderObjectInfo( 1116, 'FProcedural1D4E2', 0x9f65a, [] )
FProcedural1D4E3 = ShaderObjectInfo( 1117, 'FProcedural1D4E3', 0xec6cc, [] )
FProcedural2D1E0 = ShaderObjectInfo( 1118, 'FProcedural2D1E0', 0xc2f4d, [] )
FProcedural2D1E1 = ShaderObjectInfo( 1119, 'FProcedural2D1E1', 0xb1fdb, [] )
FProcedural2D1E2 = ShaderObjectInfo( 1120, 'FProcedural2D1E2', 0x24e61, [] )
FProcedural2D1E3 = ShaderObjectInfo( 1121, 'FProcedural2D1E3', 0x57ef7, [] )
FProcedural2D2E0 = ShaderObjectInfo( 1122, 'FProcedural2D2E0', 0xa9114, [] )
FProcedural2D2E1 = ShaderObjectInfo( 1123, 'FProcedural2D2E1', 0xda182, [] )
FProcedural2D2E2 = ShaderObjectInfo( 1124, 'FProcedural2D2E2', 0x4f038, [] )
FProcedural2D2E3 = ShaderObjectInfo( 1125, 'FProcedural2D2E3', 0x3c0ae, [] )
FProcedural2D3E0 = ShaderObjectInfo( 1126, 'FProcedural2D3E0', 0x8fb23, [] )
FProcedural2D3E1 = ShaderObjectInfo( 1127, 'FProcedural2D3E1', 0xfcbb5, [] )
FProcedural2D3E2 = ShaderObjectInfo( 1128, 'FProcedural2D3E2', 0x69a0f, [] )
FProcedural2D3E3 = ShaderObjectInfo( 1129, 'FProcedural2D3E3', 0x1aa99, [] )
FProcedural2D4E0 = ShaderObjectInfo( 1130, 'FProcedural2D4E0', 0x7eda6, [] )
FProcedural2D4E1 = ShaderObjectInfo( 1131, 'FProcedural2D4E1', 0xdd30, [] )
FProcedural2D4E2 = ShaderObjectInfo( 1132, 'FProcedural2D4E2', 0x98c8a, [] )
FProcedural2D4E3 = ShaderObjectInfo( 1133, 'FProcedural2D4E3', 0xebc1c, [] )
VS_ProceduralTexture = ShaderObjectInfo( 1134, 'VS_ProceduralTexture', 0xb33dd, [] )
FProcedural1E = ShaderObjectInfo( 1135, 'FProcedural1E', 0x75dd2, [] )
FProcedural2E = ShaderObjectInfo( 1136, 'FProcedural2E', 0xa0e11, [] )
FProcedural3E = ShaderObjectInfo( 1137, 'FProcedural3E', 0x13f50, [] )
FProcedural4E = ShaderObjectInfo( 1138, 'FProcedural4E', 0xa997, [] )
PS_ProceduralTextureUnorm = ShaderObjectInfo( 1139, 'PS_ProceduralTextureUnorm', 0x2fc3e, [] )
PS_ProceduralTextureSnorm = ShaderObjectInfo( 1140, 'PS_ProceduralTextureSnorm', 0x2099e, [] )
FxaaFilter = ShaderObjectInfo( 1141, 'FxaaFilter', 0x9d5f, [] )
Fxaa3 = ShaderObjectInfo( 1142, 'Fxaa3', 0x6b79f, [] )
Fxaa3HQ = ShaderObjectInfo( 1143, 'Fxaa3HQ', 0xde53, [] )
VS_FXAA = ShaderObjectInfo( 1144, 'VS_FXAA', 0x6a9e4, [] )
PS_FXAA = ShaderObjectInfo( 1145, 'PS_FXAA', 0x69cde, [] )
VS_FXAA3 = ShaderObjectInfo( 1146, 'VS_FXAA3', 0x1e1de, [] )
PS_FXAA3 = ShaderObjectInfo( 1147, 'PS_FXAA3', 0xee859, [] )
PS_FXAA3HQ = ShaderObjectInfo( 1148, 'PS_FXAA3HQ', 0x4f6c6, [] )
FSampleCount = ShaderObjectInfo( 1149, 'FSampleCount', 0x42c8b, [] )
FSampleCount1 = ShaderObjectInfo( 1150, 'FSampleCount1', 0x73ebe, [] )
FSampleCount2 = ShaderObjectInfo( 1151, 'FSampleCount2', 0xe6f04, [] )
FSampleCount3 = ShaderObjectInfo( 1152, 'FSampleCount3', 0x95f92, [] )
FSampleCount4 = ShaderObjectInfo( 1153, 'FSampleCount4', 0xdca31, [] )
FSampleCount5 = ShaderObjectInfo( 1154, 'FSampleCount5', 0xafaa7, [] )
FSampleCount6 = ShaderObjectInfo( 1155, 'FSampleCount6', 0x3ab1d, [] )
FSampleCount7 = ShaderObjectInfo( 1156, 'FSampleCount7', 0x49b8b, [] )
FSampleCount8 = ShaderObjectInfo( 1157, 'FSampleCount8', 0xb861a, [] )
FSampleCount9 = ShaderObjectInfo( 1158, 'FSampleCount9', 0xcb68c, [] )
FSampleCount10 = ShaderObjectInfo( 1159, 'FSampleCount10', 0xb0919, [] )
FSampleCount11 = ShaderObjectInfo( 1160, 'FSampleCount11', 0xc398f, [] )
FSampleCount12 = ShaderObjectInfo( 1161, 'FSampleCount12', 0x56835, [] )
FSampleCount13 = ShaderObjectInfo( 1162, 'FSampleCount13', 0x258a3, [] )
FSampleCount14 = ShaderObjectInfo( 1163, 'FSampleCount14', 0x6cd00, [] )
FSampleCount15 = ShaderObjectInfo( 1164, 'FSampleCount15', 0x1fd96, [] )
FSampleCount16 = ShaderObjectInfo( 1165, 'FSampleCount16', 0x8ac2c, [] )
FSampleCount17 = ShaderObjectInfo( 1166, 'FSampleCount17', 0xf9cba, [] )
FSampleCount18 = ShaderObjectInfo( 1167, 'FSampleCount18', 0x812b, [] )
FSampleCount19 = ShaderObjectInfo( 1168, 'FSampleCount19', 0x7b1bd, [] )
FSampleCount20 = ShaderObjectInfo( 1169, 'FSampleCount20', 0x65ada, [] )
FSampleCount21 = ShaderObjectInfo( 1170, 'FSampleCount21', 0x16a4c, [] )
FSampleCount22 = ShaderObjectInfo( 1171, 'FSampleCount22', 0x83bf6, [] )
FSampleCount23 = ShaderObjectInfo( 1172, 'FSampleCount23', 0xf0b60, [] )
FSampleCount24 = ShaderObjectInfo( 1173, 'FSampleCount24', 0xb9ec3, [] )
FSampleCount25 = ShaderObjectInfo( 1174, 'FSampleCount25', 0xcae55, [] )
FSampleCount26 = ShaderObjectInfo( 1175, 'FSampleCount26', 0x5ffef, [] )
FSampleCount27 = ShaderObjectInfo( 1176, 'FSampleCount27', 0x2cf79, [] )
FSampleCount28 = ShaderObjectInfo( 1177, 'FSampleCount28', 0xdd2e8, [] )
FSampleCount29 = ShaderObjectInfo( 1178, 'FSampleCount29', 0xae27e, [] )
FSampleCount30 = ShaderObjectInfo( 1179, 'FSampleCount30', 0xd6b9b, [] )
FSampleCount31 = ShaderObjectInfo( 1180, 'FSampleCount31', 0xa5b0d, [] )
FSampleCount32 = ShaderObjectInfo( 1181, 'FSampleCount32', 0x30ab7, [] )
FFilterTexcoord = ShaderObjectInfo( 1182, 'FFilterTexcoord', 0x1d2cb, [] )
FFilterScreenTexcoord = ShaderObjectInfo( 1183, 'FFilterScreenTexcoord', 0x80adc, [] )
FFilterCopy = ShaderObjectInfo( 1184, 'FFilterCopy', 0x57a8d, [] )
FFilterCopyColor = ShaderObjectInfo( 1185, 'FFilterCopyColor', 0xfd3a4, [] )
VS_Filter = ShaderObjectInfo( 1186, 'VS_Filter', 0x455e, [] )
PS_Filter = ShaderObjectInfo( 1187, 'PS_Filter', 0xa3cd4, [] )
PS_FilterDepth = ShaderObjectInfo( 1188, 'PS_FilterDepth', 0x6c953, [] )
FFilterComposite = ShaderObjectInfo( 1189, 'FFilterComposite', 0x9d9f6, [] )
VS_EdgeDetection = ShaderObjectInfo( 1190, 'VS_EdgeDetection', 0xdba81, [] )
VS_BlendingWeightCalculation = ShaderObjectInfo( 1191, 'VS_BlendingWeightCalculation', 0x6a34b, [] )
VS_NeighborhoodBlending = ShaderObjectInfo( 1192, 'VS_NeighborhoodBlending', 0x505d, [] )
PS_EdgeDetection = ShaderObjectInfo( 1193, 'PS_EdgeDetection', 0xcd365, [] )
smaaSearchXLeft = ShaderObjectInfo( 1194, 'smaaSearchXLeft', 0xc2f17, [] )
smaaSearchXRight = ShaderObjectInfo( 1195, 'smaaSearchXRight', 0x25dfc, [] )
smaaSearchYUp = ShaderObjectInfo( 1196, 'smaaSearchYUp', 0xcc5f3, [] )
smaaSearchYDown = ShaderObjectInfo( 1197, 'smaaSearchYDown', 0x471f4, [] )
smaaArea = ShaderObjectInfo( 1198, 'smaaArea', 0xb5488, [] )
smaaDetectHorizontalCornerPattern = ShaderObjectInfo( 1199, 'smaaDetectHorizontalCornerPattern', 0x27ff8, [] )
smaaDetectVerticalCornerPattern = ShaderObjectInfo( 1200, 'smaaDetectVerticalCornerPattern', 0x4978c, [] )
PS_BlendingWeightCalculation = ShaderObjectInfo( 1201, 'PS_BlendingWeightCalculation', 0xaad05, [] )
PS_NeighborhoodBlending = ShaderObjectInfo( 1202, 'PS_NeighborhoodBlending', 0xa2227, [] )
VS_Develop2D = ShaderObjectInfo( 1203, 'VS_Develop2D', 0xce301, [] )
VS_Develop3D = ShaderObjectInfo( 1204, 'VS_Develop3D', 0x7d240, [] )
getDevelopTexEdgeFont = ShaderObjectInfo( 1205, 'getDevelopTexEdgeFont', 0xbee36, [] )
getDevelopTexCubeFace = ShaderObjectInfo( 1206, 'getDevelopTexCubeFace', 0x92cd, [] )
getDevelopTexCubeRefrect = ShaderObjectInfo( 1207, 'getDevelopTexCubeRefrect', 0xeb150, [] )
FDevelopTexture = ShaderObjectInfo( 1208, 'FDevelopTexture', 0x68cd5, [] )
FDevelopTexCubeFace = ShaderObjectInfo( 1209, 'FDevelopTexCubeFace', 0xe1bb5, [] )
FDevelopTexCubeRefrect = ShaderObjectInfo( 1210, 'FDevelopTexCubeRefrect', 0xcb6c5, [] )
FDevelopTexEdgeFont = ShaderObjectInfo( 1211, 'FDevelopTexEdgeFont', 0x5674e, [] )
getDevelopTexture = ShaderObjectInfo( 1212, 'getDevelopTexture', 0x4151b, [] )
FDevelopDecode = ShaderObjectInfo( 1213, 'FDevelopDecode', 0xdc291, [] )
FDevelopDecode_R = ShaderObjectInfo( 1214, 'FDevelopDecode_R', 0x6de99, [] )
FDevelopDecode_G = ShaderObjectInfo( 1215, 'FDevelopDecode_G', 0xb3a72, [] )
FDevelopDecode_B = ShaderObjectInfo( 1216, 'FDevelopDecode_B', 0x1cefd, [] )
FDevelopDecode_A = ShaderObjectInfo( 1217, 'FDevelopDecode_A', 0x89f47, [] )
FDevelopDecode_RGB = ShaderObjectInfo( 1218, 'FDevelopDecode_RGB', 0x29288, [] )
FDevelopDecode_RGBI = ShaderObjectInfo( 1219, 'FDevelopDecode_RGBI', 0x5f0b4, [] )
FDevelopDecode_RGBY = ShaderObjectInfo( 1220, 'FDevelopDecode_RGBY', 0x2e0d0, [] )
FDevelopDecode_RGBN = ShaderObjectInfo( 1221, 'FDevelopDecode_RGBN', 0x16517, [] )
FDevelopDecode_Font = ShaderObjectInfo( 1222, 'FDevelopDecode_Font', 0x9009b, [] )
PS_Develop = ShaderObjectInfo( 1223, 'PS_Develop', 0x264d5, [] )
PS_DevelopSimple = ShaderObjectInfo( 1224, 'PS_DevelopSimple', 0xbb354, [] )
PS_DevelopEdgeFont = ShaderObjectInfo( 1225, 'PS_DevelopEdgeFont', 0x9d005, [] )
FCollisionSimpleVS = ShaderObjectInfo( 1226, 'FCollisionSimpleVS', 0x74ee9, [] )
FCollisionSimplePS = ShaderObjectInfo( 1227, 'FCollisionSimplePS', 0xde96f, [] )
FWindTriangleCurve = ShaderObjectInfo( 1228, 'FWindTriangleCurve', 0x2e955, [] )
FWindSinCosCurve = ShaderObjectInfo( 1229, 'FWindSinCosCurve', 0x6fc06, [] )
FWindDirection = ShaderObjectInfo( 1230, 'FWindDirection', 0x10345, [] )
FWindPoint = ShaderObjectInfo( 1231, 'FWindPoint', 0xc2688, [] )
FWindLine = ShaderObjectInfo( 1232, 'FWindLine', 0xd1946, [] )
FLocalWindLoopDirection = ShaderObjectInfo( 1233, 'FLocalWindLoopDirection', 0xbf216, [] )
FLocalWindLoopPoint = ShaderObjectInfo( 1234, 'FLocalWindLoopPoint', 0xf2310, [] )
FLocalWindLoopLine = ShaderObjectInfo( 1235, 'FLocalWindLoopLine', 0xdb440, [] )
FLocalWindLoopSlot0 = ShaderObjectInfo( 1236, 'FLocalWindLoopSlot0', 0xbf5ce, [] )
FLocalWindLoopSlot1 = ShaderObjectInfo( 1237, 'FLocalWindLoopSlot1', 0xcc558, [] )
FLocalWindLoopSlot2 = ShaderObjectInfo( 1238, 'FLocalWindLoopSlot2', 0x594e2, [] )
FLocalWindReference = ShaderObjectInfo( 1239, 'FLocalWindReference', 0x3a4fa, [] )
FLocalWind = ShaderObjectInfo( 1240, 'FLocalWind', 0x5967d, [] )
FLocalWindDisable = ShaderObjectInfo( 1241, 'FLocalWindDisable', 0xa4f8b, [] )
FDynamicLocalWind0 = ShaderObjectInfo( 1242, 'FDynamicLocalWind0', 0x879e6, [] )
FDynamicLocalWind1 = ShaderObjectInfo( 1243, 'FDynamicLocalWind1', 0xf4970, [] )
FDynamicLocalWind2 = ShaderObjectInfo( 1244, 'FDynamicLocalWind2', 0x618ca, [] )
FDynamicLocalWind3 = ShaderObjectInfo( 1245, 'FDynamicLocalWind3', 0x1285c, [] )
FDynamicLocalWind4 = ShaderObjectInfo( 1246, 'FDynamicLocalWind4', 0x5bdff, [] )
FDynamicLocalWind5 = ShaderObjectInfo( 1247, 'FDynamicLocalWind5', 0x28d69, [] )
FDynamicLocalWind6 = ShaderObjectInfo( 1248, 'FDynamicLocalWind6', 0xbdcd3, [] )
FDynamicLocalWind7 = ShaderObjectInfo( 1249, 'FDynamicLocalWind7', 0xcec45, [] )
FLocalWindDirection = ShaderObjectInfo( 1250, 'FLocalWindDirection', 0xa3c5a, [] )
FLocalWindPoint = ShaderObjectInfo( 1251, 'FLocalWindPoint', 0x2ef38, [] )
FLocalWindLine = ShaderObjectInfo( 1252, 'FLocalWindLine', 0x9840b, [] )
FLocalWindUnroll = ShaderObjectInfo( 1253, 'FLocalWindUnroll', 0xc9df1, [] )
initMaterialContext = ShaderObjectInfo( 1254, 'initMaterialContext', 0xd2ac6, [] )
FBlendFog = ShaderObjectInfo( 1255, 'FBlendFog', 0xb37ad, [] )
FBlendFogDiffuse = ShaderObjectInfo( 1256, 'FBlendFogDiffuse', 0xc6c1e, [] )
FBlendFogModulate = ShaderObjectInfo( 1257, 'FBlendFogModulate', 0x4ea8b, [] )
FHeightFog = ShaderObjectInfo( 1258, 'FHeightFog', 0x4a0dc, [] )
FHeightFogVTF = ShaderObjectInfo( 1259, 'FHeightFogVTF', 0xd683e, [] )
FHeightFogWorldY = ShaderObjectInfo( 1260, 'FHeightFogWorldY', 0x80526, [] )
FHeightFogDistance = ShaderObjectInfo( 1261, 'FHeightFogDistance', 0xe05f3, [] )
FHeightFogVolume = ShaderObjectInfo( 1262, 'FHeightFogVolume', 0x8a91e, [] )
FHeightFogModelSimple = ShaderObjectInfo( 1263, 'FHeightFogModelSimple', 0xab951, [] )
FHeightFogModelSimpleVTF = ShaderObjectInfo( 1264, 'FHeightFogModelSimpleVTF', 0x9d797, [] )
FHeightFogModel = ShaderObjectInfo( 1265, 'FHeightFogModel', 0x1b226, [] )
FHeightFogModelVTF = ShaderObjectInfo( 1266, 'FHeightFogModelVTF', 0x1a40, [] )
FDistanceFog = ShaderObjectInfo( 1267, 'FDistanceFog', 0x25f1b, [] )
FDistanceFogLinear = ShaderObjectInfo( 1268, 'FDistanceFogLinear', 0xf94a9, [] )
FDistanceFogExp = ShaderObjectInfo( 1269, 'FDistanceFogExp', 0xf7362, [] )
FDistanceFogExp2 = ShaderObjectInfo( 1270, 'FDistanceFogExp2', 0xf6e87, [] )
FDistanceFogReverseExp = ShaderObjectInfo( 1271, 'FDistanceFogReverseExp', 0xb85e7, [] )
FDistanceFogReverseExp2 = ShaderObjectInfo( 1272, 'FDistanceFogReverseExp2', 0xb3dde, [] )
FDistanceFogTable = ShaderObjectInfo( 1273, 'FDistanceFogTable', 0x4cdd9, [] )
FDistanceFogTableVTF = ShaderObjectInfo( 1274, 'FDistanceFogTableVTF', 0xa2c0f, [] )
FFog = ShaderObjectInfo( 1275, 'FFog', 0x55e3, [] )
FFogDistance = ShaderObjectInfo( 1276, 'FFogDistance', 0x16c02, [] )
FFogDistanceEst = ShaderObjectInfo( 1277, 'FFogDistanceEst', 0x6b37d, [] )
FFogDistanceColorTable = ShaderObjectInfo( 1278, 'FFogDistanceColorTable', 0x19e3d, [] )
FFogDistanceColorTableEst = ShaderObjectInfo( 1279, 'FFogDistanceColorTableEst', 0x31154, [] )
FFogDistanceTable = ShaderObjectInfo( 1280, 'FFogDistanceTable', 0x2e423, [] )
FFogDistanceTableEst = ShaderObjectInfo( 1281, 'FFogDistanceTableEst', 0x72e31, [] )
FFogVTF = ShaderObjectInfo( 1282, 'FFogVTF', 0x38862, [] )
FFogVTFNone = ShaderObjectInfo( 1283, 'FFogVTFNone', 0xa46e7, [] )
FFogVTFDistance = ShaderObjectInfo( 1284, 'FFogVTFDistance', 0x5095a, [] )
FFogVTFDistanceEst = ShaderObjectInfo( 1285, 'FFogVTFDistanceEst', 0xe9772, [] )
FFogVTFDistanceColorTable = ShaderObjectInfo( 1286, 'FFogVTFDistanceColorTable', 0x2c23d, [] )
FFogVTFDistanceColorTableEst = ShaderObjectInfo( 1287, 'FFogVTFDistanceColorTableEst', 0x2f1c5, [] )
FFogVTFDistanceTable = ShaderObjectInfo( 1288, 'FFogVTFDistanceTable', 0x96175, [] )
FFogVTFDistanceTableEst = ShaderObjectInfo( 1289, 'FFogVTFDistanceTableEst', 0xf5a4a, [] )
FFilterColorFogBlend = ShaderObjectInfo( 1290, 'FFilterColorFogBlend', 0xafd8e, [] )
FFilterColorFogComposite = ShaderObjectInfo( 1291, 'FFilterColorFogComposite', 0x40614, [] )
FFilterFogTable = ShaderObjectInfo( 1292, 'FFilterFogTable', 0xf8422, [] )
FJointMatrix = ShaderObjectInfo( 1293, 'FJointMatrix', 0x4a102, [] )
FJointMatrixPF = ShaderObjectInfo( 1294, 'FJointMatrixPF', 0x364a9, [] )
FJointMatrixFromCBuf = ShaderObjectInfo( 1295, 'FJointMatrixFromCBuf', 0x6ade2, [] )
FJointMatrixPFFromCBuf = ShaderObjectInfo( 1296, 'FJointMatrixPFFromCBuf', 0xfe371, [] )
FJointMatrixExFromCBuf = ShaderObjectInfo( 1297, 'FJointMatrixExFromCBuf', 0xbb29d, [] )
FSkinning = ShaderObjectInfo( 1298, 'FSkinning', 0x82815, [] )
FSkinningNone = ShaderObjectInfo( 1299, 'FSkinningNone', 0x51522, [] )
FSkinning1Weight = ShaderObjectInfo( 1300, 'FSkinning1Weight', 0x740b9, [] )
FSkinning2Weight = ShaderObjectInfo( 1301, 'FSkinning2Weight', 0xf5a24, [] )
FSkinning4Weight = ShaderObjectInfo( 1302, 'FSkinning4Weight', 0xf6f1e, [] )
FSkinning4WeightBranch = ShaderObjectInfo( 1303, 'FSkinning4WeightBranch', 0xa356e, [] )
FSkinning8Weight = ShaderObjectInfo( 1304, 'FSkinning8Weight', 0xf056a, [] )
FSkinning8WeightBranch = ShaderObjectInfo( 1305, 'FSkinning8WeightBranch', 0x8c95, [] )
FSkinningPF = ShaderObjectInfo( 1306, 'FSkinningPF', 0x4acd7, [] )
FSkinningPFNone = ShaderObjectInfo( 1307, 'FSkinningPFNone', 0x125a6, [] )
FSkinningPF1Weight = ShaderObjectInfo( 1308, 'FSkinningPF1Weight', 0x8822b, [] )
FSkinningPF2Weight = ShaderObjectInfo( 1309, 'FSkinningPF2Weight', 0x98b6, [] )
FSkinningPF4Weight = ShaderObjectInfo( 1310, 'FSkinningPF4Weight', 0xad8c, [] )
FSkinningPF4WeightBranch = ShaderObjectInfo( 1311, 'FSkinningPF4WeightBranch', 0x6bba7, [] )
FSkinningPF8Weight = ShaderObjectInfo( 1312, 'FSkinningPF8Weight', 0xc7f8, [] )
FSkinningPF8WeightBranch = ShaderObjectInfo( 1313, 'FSkinningPF8WeightBranch', 0xc025c, [] )
getSHdiffuse = ShaderObjectInfo( 1314, 'getSHdiffuse', 0xb0e6b, [] )
FSHDiffuse = ShaderObjectInfo( 1315, 'FSHDiffuse', 0x67416, [] )
FSHDiffuseDisable = ShaderObjectInfo( 1316, 'FSHDiffuseDisable', 0xd9ebd, [] )
FDistanceAttenuation = ShaderObjectInfo( 1317, 'FDistanceAttenuation', 0xb3d2a, [] )
FDistanceAttenuationSquareLaw = ShaderObjectInfo( 1318, 'FDistanceAttenuationSquareLaw', 0x82106, [] )
getAngularAttenuation = ShaderObjectInfo( 1319, 'getAngularAttenuation', 0xcf404, [] )
calcLightMask = ShaderObjectInfo( 1320, 'calcLightMask', 0x4d5c4, [] )
FIsOutOfRange = ShaderObjectInfo( 1321, 'FIsOutOfRange', 0xc60c2, [] )
FDeferredLightingGetClearColorLightBuffer = ShaderObjectInfo( 1322, 'FDeferredLightingGetClearColorLightBuffer', 0xed5e1, [] )
FDeferredLightingGetClearColorLightBufferLog = ShaderObjectInfo( 1323, 'FDeferredLightingGetClearColorLightBufferLog', 0xeb3c5, [] )
FDeferredLightingEncodeOutput = ShaderObjectInfo( 1324, 'FDeferredLightingEncodeOutput', 0x22898, [] )
FDeferredLightingDecodeInput = ShaderObjectInfo( 1325, 'FDeferredLightingDecodeInput', 0xe1969, [] )
FDeferredLightingDecodeInputExponent = ShaderObjectInfo( 1326, 'FDeferredLightingDecodeInputExponent', 0x80eb6, [] )
FDeferredLightingDecodeInputLog = ShaderObjectInfo( 1327, 'FDeferredLightingDecodeInputLog', 0xb20a4, [] )
FDeferredLightingEncodeNormal = ShaderObjectInfo( 1328, 'FDeferredLightingEncodeNormal', 0x954e2, [] )
FDeferredLightingDecodeNormal = ShaderObjectInfo( 1329, 'FDeferredLightingDecodeNormal', 0xd9fc9, [] )
FDeferredLightingDecodeNormalSpheremapLUT = ShaderObjectInfo( 1330, 'FDeferredLightingDecodeNormalSpheremapLUT', 0xde099, [] )
FDeferredLightingEncodeLinearDepth = ShaderObjectInfo( 1331, 'FDeferredLightingEncodeLinearDepth', 0x69828, [] )
FDeferredLightingDecodeLinearDepth = ShaderObjectInfo( 1332, 'FDeferredLightingDecodeLinearDepth', 0xb78d6, [] )
setupLight = ShaderObjectInfo( 1333, 'setupLight', 0xe8430, [] )
setupLightBalance = ShaderObjectInfo( 1334, 'setupLightBalance', 0x1dd48, [] )
setupLightSpecular = ShaderObjectInfo( 1335, 'setupLightSpecular', 0x55eaf, [] )
setupLightDiffuse = ShaderObjectInfo( 1336, 'setupLightDiffuse', 0x414c7, [] )
FDynamicLight0 = ShaderObjectInfo( 1337, 'FDynamicLight0', 0xe251b, [] )
FDynamicLight1 = ShaderObjectInfo( 1338, 'FDynamicLight1', 0x9158d, [] )
FDynamicLight2 = ShaderObjectInfo( 1339, 'FDynamicLight2', 0x4437, [] )
FDynamicLight3 = ShaderObjectInfo( 1340, 'FDynamicLight3', 0x774a1, [] )
FDynamicLight4 = ShaderObjectInfo( 1341, 'FDynamicLight4', 0x3e102, [] )
FDynamicLight5 = ShaderObjectInfo( 1342, 'FDynamicLight5', 0x4d194, [] )
FDynamicLight6 = ShaderObjectInfo( 1343, 'FDynamicLight6', 0xd802e, [] )
FDynamicLight7 = ShaderObjectInfo( 1344, 'FDynamicLight7', 0xab0b8, [] )
FDynamicLightDL0 = ShaderObjectInfo( 1345, 'FDynamicLightDL0', 0xf394a, [] )
FDynamicLightDL1 = ShaderObjectInfo( 1346, 'FDynamicLightDL1', 0x809dc, [] )
FDynamicLightDL2 = ShaderObjectInfo( 1347, 'FDynamicLightDL2', 0x15866, [] )
FDynamicLightDL3 = ShaderObjectInfo( 1348, 'FDynamicLightDL3', 0x668f0, [] )
FDynamicLightDL4 = ShaderObjectInfo( 1349, 'FDynamicLightDL4', 0x2fd53, [] )
FDynamicLightDL5 = ShaderObjectInfo( 1350, 'FDynamicLightDL5', 0x5cdc5, [] )
FDynamicLightDL6 = ShaderObjectInfo( 1351, 'FDynamicLightDL6', 0xc9c7f, [] )
FDynamicLightDL7 = ShaderObjectInfo( 1352, 'FDynamicLightDL7', 0xbace9, [] )
FInfiniteLight = ShaderObjectInfo( 1353, 'FInfiniteLight', 0x56272, [] )
FInfiniteLightB = ShaderObjectInfo( 1354, 'FInfiniteLightB', 0x705ce, [] )
FInfiniteLightS = ShaderObjectInfo( 1355, 'FInfiniteLightS', 0x7253c, [] )
FInfiniteLightD = ShaderObjectInfo( 1356, 'FInfiniteLightD', 0x4a0fb, [] )
FPointLight = ShaderObjectInfo( 1357, 'FPointLight', 0xc1293, [] )
FPointLightB = ShaderObjectInfo( 1358, 'FPointLightB', 0xcce50, [] )
FPointLightD = ShaderObjectInfo( 1359, 'FPointLightD', 0xf6b65, [] )
FPointLightS = ShaderObjectInfo( 1360, 'FPointLightS', 0xceea2, [] )
FPointLightR = ShaderObjectInfo( 1361, 'FPointLightR', 0xbde34, [] )
FPointLightBR = ShaderObjectInfo( 1362, 'FPointLightBR', 0xfcde2, [] )
FPointLightDR = ShaderObjectInfo( 1363, 'FPointLightDR', 0x56a64, [] )
FPointLightSR = ShaderObjectInfo( 1364, 'FPointLightSR', 0x6eef2, [] )
FSpotLight = ShaderObjectInfo( 1365, 'FSpotLight', 0xafb78, [] )
FSpotLightB = ShaderObjectInfo( 1366, 'FSpotLightB', 0x53349, [] )
FSpotLightD = ShaderObjectInfo( 1367, 'FSpotLightD', 0x6967c, [] )
FSpotLightS = ShaderObjectInfo( 1368, 'FSpotLightS', 0x513bb, [] )
FSpotLightR = ShaderObjectInfo( 1369, 'FSpotLightR', 0x2232d, [] )
FSpotLightBR = ShaderObjectInfo( 1370, 'FSpotLightBR', 0x32cdf, [] )
FSpotLightDR = ShaderObjectInfo( 1371, 'FSpotLightDR', 0x98b59, [] )
FSpotLightSR = ShaderObjectInfo( 1372, 'FSpotLightSR', 0xa0fcf, [] )
FCapsuleLight = ShaderObjectInfo( 1373, 'FCapsuleLight', 0x50219, [] )
FCuboidLight = ShaderObjectInfo( 1374, 'FCuboidLight', 0x2c113, [] )
FCuboidLightB = ShaderObjectInfo( 1375, 'FCuboidLightB', 0x233a3, [] )
FCuboidLightD = ShaderObjectInfo( 1376, 'FCuboidLightD', 0x19696, [] )
FCuboidLightS = ShaderObjectInfo( 1377, 'FCuboidLightS', 0x21351, [] )
FBRDF = ShaderObjectInfo( 1378, 'FBRDF', 0x1a1c7, [] )
FBRDFHalfLambert = ShaderObjectInfo( 1379, 'FBRDFHalfLambert', 0x7a331, [] )
FLighting = ShaderObjectInfo( 1380, 'FLighting', 0x23990, [] )
FLightingVS = ShaderObjectInfo( 1381, 'FLightingVS', 0x71bac, [] )
FDeferredLightingSamplingLight = ShaderObjectInfo( 1382, 'FDeferredLightingSamplingLight', 0x5cc90, [] )
FDeferredLightingSamplingLightDiscontinuityFiltering = ShaderObjectInfo( 1383, 'FDeferredLightingSamplingLightDiscontinuityFiltering', 0x42fb0, [] )
FDeferredLightingSamplingLightDiscontinuityFilteringLayer1 = ShaderObjectInfo( 1384, 'FDeferredLightingSamplingLightDiscontinuityFilteringLayer1', 0x7e5b0, [] )
FDeferredLightingSamplingLightComformanceFiltering = ShaderObjectInfo( 1385, 'FDeferredLightingSamplingLightComformanceFiltering', 0xc337d, [] )
FLightingDeferredLighting = ShaderObjectInfo( 1386, 'FLightingDeferredLighting', 0x1e568, [] )
FLightingDeferredLightingApproximateSpecular = ShaderObjectInfo( 1387, 'FLightingDeferredLightingApproximateSpecular', 0xd919b, [] )
FLightingDeferredLightingSeparateSpecular = ShaderObjectInfo( 1388, 'FLightingDeferredLightingSeparateSpecular', 0x4bb9d, [] )
FTransparency = ShaderObjectInfo( 1389, 'FTransparency', 0x171dd, [] )
FTransparencyAlpha = ShaderObjectInfo( 1390, 'FTransparencyAlpha', 0x8e54a, [] )
FUVTransparencyMap = ShaderObjectInfo( 1391, 'FUVTransparencyMap', 0x66f6c, [] )
FChannelTransparencyMap = ShaderObjectInfo( 1392, 'FChannelTransparencyMap', 0xc0572, [] )
FTransparencyMap = ShaderObjectInfo( 1393, 'FTransparencyMap', 0x9090a, [] )
FTransparencyDodgeMap = ShaderObjectInfo( 1394, 'FTransparencyDodgeMap', 0xad6b9, [] )
FTransparencyVolume = ShaderObjectInfo( 1395, 'FTransparencyVolume', 0x5da47, [] )
FTransparencyAlphaClip = ShaderObjectInfo( 1396, 'FTransparencyAlphaClip', 0xe03de, [] )
FTransparencyMapAlphaClip = ShaderObjectInfo( 1397, 'FTransparencyMapAlphaClip', 0x6159a, [] )
FUVAlbedoMap = ShaderObjectInfo( 1398, 'FUVAlbedoMap', 0xcceed, [] )
FUVAlbedoBlendMap = ShaderObjectInfo( 1399, 'FUVAlbedoBlendMap', 0x24f65, [] )
FAlbedo = ShaderObjectInfo( 1400, 'FAlbedo', 0x1c76e, [] )
FAlbedoMap = ShaderObjectInfo( 1401, 'FAlbedoMap', 0xa826a, [] )
FAlbedoMapBlend = ShaderObjectInfo( 1402, 'FAlbedoMapBlend', 0xb30ba, [] )
FAlbedoMapBlendAlpha = ShaderObjectInfo( 1403, 'FAlbedoMapBlendAlpha', 0xb1ba8, [] )
FAlbedoMapBlendTransparencyMap = ShaderObjectInfo( 1404, 'FAlbedoMapBlendTransparencyMap', 0xad982, [] )
FAlbedoMapModulate = ShaderObjectInfo( 1405, 'FAlbedoMapModulate', 0x9ab11, [] )
FAlbedoMapAdd = ShaderObjectInfo( 1406, 'FAlbedoMapAdd', 0xf8146, [] )
FAlbedoMapBlendColorOnly = ShaderObjectInfo( 1407, 'FAlbedoMapBlendColorOnly', 0x76cf5, [] )
FUVOcclusionMap = ShaderObjectInfo( 1408, 'FUVOcclusionMap', 0xd5585, [] )
FChannelOcclusionMap = ShaderObjectInfo( 1409, 'FChannelOcclusionMap', 0x82634, [] )
FOcclusion = ShaderObjectInfo( 1410, 'FOcclusion', 0x7b9ec, [] )
FOcclusionMap = ShaderObjectInfo( 1411, 'FOcclusionMap', 0x4bc45, [] )
FOcclusionAmbient = ShaderObjectInfo( 1412, 'FOcclusionAmbient', 0xbec9, [] )
FOcclusionAmbientMap = ShaderObjectInfo( 1413, 'FOcclusionAmbientMap', 0x3f932, [] )
FUVNormalMap = ShaderObjectInfo( 1414, 'FUVNormalMap', 0x238e2, [] )
FUVNormalBlendMap = ShaderObjectInfo( 1415, 'FUVNormalBlendMap', 0x36c65, [] )
FUVDetailNormalMap = ShaderObjectInfo( 1416, 'FUVDetailNormalMap', 0x5cb5, [] )
FUVDetailNormalMap2 = ShaderObjectInfo( 1417, 'FUVDetailNormalMap2', 0x576df, [] )
FBump = ShaderObjectInfo( 1418, 'FBump', 0xffbd0, [] )
FBumpNormalMap = ShaderObjectInfo( 1419, 'FBumpNormalMap', 0xb22d7, [] )
FBumpNormalMapBlendTransparencyMap = ShaderObjectInfo( 1420, 'FBumpNormalMapBlendTransparencyMap', 0xb2612, [] )
FBumpDetailNormalMap = ShaderObjectInfo( 1421, 'FBumpDetailNormalMap', 0x610a5, [] )
FChannelDetailMap = ShaderObjectInfo( 1422, 'FChannelDetailMap', 0x6722c, [] )
FBumpDetailMaskNormalMap = ShaderObjectInfo( 1423, 'FBumpDetailMaskNormalMap', 0x299b7, [] )
FBumpDetailNormalMap2 = ShaderObjectInfo( 1424, 'FBumpDetailNormalMap2', 0xe0f7, [] )
FBumpHair = ShaderObjectInfo( 1425, 'FBumpHair', 0xf46b0, [] )
FBumpParallax = ShaderObjectInfo( 1426, 'FBumpParallax', 0xef377, [] )
FBumpParallaxOcclusion = ShaderObjectInfo( 1427, 'FBumpParallaxOcclusion', 0xe1c7f, [] )
FLightMask = ShaderObjectInfo( 1428, 'FLightMask', 0xea1ac, [] )
FLightMaskSolid0 = ShaderObjectInfo( 1429, 'FLightMaskSolid0', 0xf4580, [] )
FLightMaskSolid1 = ShaderObjectInfo( 1430, 'FLightMaskSolid1', 0x87516, [] )
FLightMaskSolid01 = ShaderObjectInfo( 1431, 'FLightMaskSolid01', 0xd7c5f, [] )
FLightMaskTransparent0 = ShaderObjectInfo( 1432, 'FLightMaskTransparent0', 0xbd6a5, [] )
FLightMaskTransparent1 = ShaderObjectInfo( 1433, 'FLightMaskTransparent1', 0xce633, [] )
FLightMaskTransparent01 = ShaderObjectInfo( 1434, 'FLightMaskTransparent01', 0x2bc8b, [] )
FLightMaskEnable = ShaderObjectInfo( 1435, 'FLightMaskEnable', 0x795f9, [] )
FAmbient = ShaderObjectInfo( 1436, 'FAmbient', 0xfefd6, [] )
FAmbientSH = ShaderObjectInfo( 1437, 'FAmbientSH', 0x63eaa, [] )
FUVLightMap = ShaderObjectInfo( 1438, 'FUVLightMap', 0x33737, [] )
FUVThinMap = ShaderObjectInfo( 1439, 'FUVThinMap', 0xafec0, [] )
FChannelThinMap = ShaderObjectInfo( 1440, 'FChannelThinMap', 0x9b0dd, [] )
FDiffuse = ShaderObjectInfo( 1441, 'FDiffuse', 0xfdb6f, [] )
FDiffuseConstant = ShaderObjectInfo( 1442, 'FDiffuseConstant', 0xfe58e, [] )
FDiffuseConstantSRGB = ShaderObjectInfo( 1443, 'FDiffuseConstantSRGB', 0xd6888, [] )
FDiffuseConstantSRGBVertexColor = ShaderObjectInfo( 1444, 'FDiffuseConstantSRGBVertexColor', 0xa8610, [] )
FDiffuseSH = ShaderObjectInfo( 1445, 'FDiffuseSH', 0x5325e, [] )
FDiffuseThinSH = ShaderObjectInfo( 1446, 'FDiffuseThinSH', 0x623c7, [] )
FDiffuseThin = ShaderObjectInfo( 1447, 'FDiffuseThin', 0xd947, [] )
FDiffuseLightMap = ShaderObjectInfo( 1448, 'FDiffuseLightMap', 0x25211, [] )
FDiffuseLightMapOcclusion = ShaderObjectInfo( 1449, 'FDiffuseLightMapOcclusion', 0x73d0f, [] )
FDiffuseVertexColor = ShaderObjectInfo( 1450, 'FDiffuseVertexColor', 0x2d662, [] )
FDiffuseVertexColorOcclusion = ShaderObjectInfo( 1451, 'FDiffuseVertexColorOcclusion', 0xf90fb, [] )
FDiffuseVertexColorSH = ShaderObjectInfo( 1452, 'FDiffuseVertexColorSH', 0xa3273, [] )
FUVPrimary = ShaderObjectInfo( 1453, 'FUVPrimary', 0x91272, [] )
FUVSecondary = ShaderObjectInfo( 1454, 'FUVSecondary', 0xc4ef1, [] )
FUVUnique = ShaderObjectInfo( 1455, 'FUVUnique', 0x14211, [] )
FUVExtend = ShaderObjectInfo( 1456, 'FUVExtend', 0xa5d4a, [] )
FUVViewNormal = ShaderObjectInfo( 1457, 'FUVViewNormal', 0x5808b, [] )
FUVScreen = ShaderObjectInfo( 1458, 'FUVScreen', 0xf7556, [] )
FUVIndirectMap = ShaderObjectInfo( 1459, 'FUVIndirectMap', 0xc6994, [] )
FUVIndirectSource = ShaderObjectInfo( 1460, 'FUVIndirectSource', 0x9c151, [] )
FUVIndirect = ShaderObjectInfo( 1461, 'FUVIndirect', 0xeb2dc, [] )
FUVIndirectMask = ShaderObjectInfo( 1462, 'FUVIndirectMask', 0xec027, [] )
FChannelR = ShaderObjectInfo( 1463, 'FChannelR', 0x7de0b, [] )
FChannelG = ShaderObjectInfo( 1464, 'FChannelG', 0xa3ae0, [] )
FChannelB = ShaderObjectInfo( 1465, 'FChannelB', 0xce6f, [] )
FChannelA = ShaderObjectInfo( 1466, 'FChannelA', 0x99fd5, [] )
FChannelBlend = ShaderObjectInfo( 1467, 'FChannelBlend', 0xa67d5, [] )
FUVFresnelMap = ShaderObjectInfo( 1468, 'FUVFresnelMap', 0x7de48, [] )
FChannelFresnelMap = ShaderObjectInfo( 1469, 'FChannelFresnelMap', 0x54e7c, [] )
FFresnel = ShaderObjectInfo( 1470, 'FFresnel', 0x1a481, [] )
FFresnelSchlick = ShaderObjectInfo( 1471, 'FFresnelSchlick', 0x8c6db, [] )
FFresnelSchlickRGB = ShaderObjectInfo( 1472, 'FFresnelSchlickRGB', 0x52136, [] )
FFresnelSchlickMap = ShaderObjectInfo( 1473, 'FFresnelSchlickMap', 0x617df, [] )
FReflect = ShaderObjectInfo( 1474, 'FReflect', 0xac357, [] )
FReflectCubeMap = ShaderObjectInfo( 1475, 'FReflectCubeMap', 0x8f001, [] )
FReflectSphereMap = ShaderObjectInfo( 1476, 'FReflectSphereMap', 0x552b7, [] )
FReflectGlobalCubeMap = ShaderObjectInfo( 1477, 'FReflectGlobalCubeMap', 0xd5bc, [] )
FUVSpecularMap = ShaderObjectInfo( 1478, 'FUVSpecularMap', 0xa2ff1, [] )
FUVSpecularBlendMap = ShaderObjectInfo( 1479, 'FUVSpecularBlendMap', 0x9b184, [] )
FChannelSpecularMap = ShaderObjectInfo( 1480, 'FChannelSpecularMap', 0xdd9d4, [] )
FSpecular = ShaderObjectInfo( 1481, 'FSpecular', 0x50eba, [] )
FSpecularMap = ShaderObjectInfo( 1482, 'FSpecularMap', 0x24580, [] )
FSpecularMapBlendTransparencyMap = ShaderObjectInfo( 1483, 'FSpecularMapBlendTransparencyMap', 0x8fd41, [] )
FSpecularDisable = ShaderObjectInfo( 1484, 'FSpecularDisable', 0x773f9, [] )
FUVShininessMap = ShaderObjectInfo( 1485, 'FUVShininessMap', 0x62623, [] )
FChannelShininessMap = ShaderObjectInfo( 1486, 'FChannelShininessMap', 0x35592, [] )
FShininess = ShaderObjectInfo( 1487, 'FShininess', 0x9d7bb, [] )
FShininessMap = ShaderObjectInfo( 1488, 'FShininessMap', 0xfcfe3, [] )
FUVEmissionMap = ShaderObjectInfo( 1489, 'FUVEmissionMap', 0x41bd1, [] )
FChannelEmissionMap = ShaderObjectInfo( 1490, 'FChannelEmissionMap', 0x3edf4, [] )
FEmission = ShaderObjectInfo( 1491, 'FEmission', 0x87017, [] )
FEmissionConstant = ShaderObjectInfo( 1492, 'FEmissionConstant', 0xe360b, [] )
FEmissionMap = ShaderObjectInfo( 1493, 'FEmissionMap', 0xc71a0, [] )
FUVTransformOffset = ShaderObjectInfo( 1494, 'FUVTransformOffset', 0x5dc9b, [] )
FUVTransformOffset2 = ShaderObjectInfo( 1495, 'FUVTransformOffset2', 0xd0e90, [] )
FUVTransformOffset3 = ShaderObjectInfo( 1496, 'FUVTransformOffset3', 0xa3e06, [] )
FUVTransformPrimary = ShaderObjectInfo( 1497, 'FUVTransformPrimary', 0x78205, [] )
FUVTransformSecondary = ShaderObjectInfo( 1498, 'FUVTransformSecondary', 0xd779a, [] )
FUVTransformUnique = ShaderObjectInfo( 1499, 'FUVTransformUnique', 0xd403c, [] )
FUVTransformExtend = ShaderObjectInfo( 1500, 'FUVTransformExtend', 0x65f67, [] )
FDistortion = ShaderObjectInfo( 1501, 'FDistortion', 0x89da2, [] )
FDistortionRefract = ShaderObjectInfo( 1502, 'FDistortionRefract', 0x9f352, [] )
FDistortionRefractMask = ShaderObjectInfo( 1503, 'FDistortionRefractMask', 0x180fa, [] )
FUVDisolveMap = ShaderObjectInfo( 1504, 'FUVDisolveMap', 0xd1f1c, [] )
FDissolvePatternDither = ShaderObjectInfo( 1505, 'FDissolvePatternDither', 0xcd11c, [] )
FDissolvePatternTexture = ShaderObjectInfo( 1506, 'FDissolvePatternTexture', 0x18faa, [] )
FDissolve = ShaderObjectInfo( 1507, 'FDissolve', 0x62f3b, [] )
FDissolveDither = ShaderObjectInfo( 1508, 'FDissolveDither', 0x335c2, [] )
FDissolveTexture = ShaderObjectInfo( 1509, 'FDissolveTexture', 0xf7f9d, [] )
FDepthTest = ShaderObjectInfo( 1510, 'FDepthTest', 0x4b1e4, [] )
FDepthTestLT = ShaderObjectInfo( 1511, 'FDepthTestLT', 0xe3822, [] )
FDepthTestGT = ShaderObjectInfo( 1512, 'FDepthTestGT', 0xae1e9, [] )
FColorModifier = ShaderObjectInfo( 1513, 'FColorModifier', 0x2e0f0, [] )
FFinalCombiner = ShaderObjectInfo( 1514, 'FFinalCombiner', 0xe92aa, [] )
FFinalCombinerNoFog = ShaderObjectInfo( 1515, 'FFinalCombinerNoFog', 0xb0db2, [] )
FDefaultTransparency = ShaderObjectInfo( 1516, 'FDefaultTransparency', 0x4073b, [] )
FUseGlobalTransparency = ShaderObjectInfo( 1517, 'FUseGlobalTransparency', 0x63eac, [] )
createMaterialContext = ShaderObjectInfo( 1518, 'createMaterialContext', 0xcc033, [] )
createMaterialContextEx = ShaderObjectInfo( 1519, 'createMaterialContextEx', 0xf55c2, [] )
createMaterialContextExEst = ShaderObjectInfo( 1520, 'createMaterialContextExEst', 0xf4fd, [] )
FQuaternionAxis = ShaderObjectInfo( 1521, 'FQuaternionAxis', 0x3aa5e, [] )
FQuaternionMultiplay = ShaderObjectInfo( 1522, 'FQuaternionMultiplay', 0xcc405, [] )
FQuaternionRotationArc = ShaderObjectInfo( 1523, 'FQuaternionRotationArc', 0x6862f, [] )
FQuaternionInverse = ShaderObjectInfo( 1524, 'FQuaternionInverse', 0x3509b, [] )
FPositionRotateQuaternion = ShaderObjectInfo( 1525, 'FPositionRotateQuaternion', 0xd0071, [] )
FRotationNormalFromQuaternion = ShaderObjectInfo( 1526, 'FRotationNormalFromQuaternion', 0xf062f, [] )
FQuaternionToMatrix = ShaderObjectInfo( 1527, 'FQuaternionToMatrix', 0x2d495, [] )
FMatrixToQuaternion = ShaderObjectInfo( 1528, 'FMatrixToQuaternion', 0x9e3dc, [] )
FSwingAdjustPosition = ShaderObjectInfo( 1529, 'FSwingAdjustPosition', 0x15d0f, [] )
FSwingAdjustPositionDisable = ShaderObjectInfo( 1530, 'FSwingAdjustPositionDisable', 0x17927, [] )
FSwingAdjustNormalTangentDisable = ShaderObjectInfo( 1531, 'FSwingAdjustNormalTangentDisable', 0x48ad8, [] )
FSwingAdjustNormalTangent = ShaderObjectInfo( 1532, 'FSwingAdjustNormalTangent', 0x73e6a, [] )
FSwingDisable = ShaderObjectInfo( 1533, 'FSwingDisable', 0x64f1a, [] )
FSwingUpdate = ShaderObjectInfo( 1534, 'FSwingUpdate', 0x668b4, [] )
FSwingUpdateYAxis = ShaderObjectInfo( 1535, 'FSwingUpdateYAxis', 0xe35e, [] )
FSwingUpdateAll = ShaderObjectInfo( 1536, 'FSwingUpdateAll', 0x8bd12, [] )
FSwingUpdateBillboard = ShaderObjectInfo( 1537, 'FSwingUpdateBillboard', 0xc26fd, [] )
FSwingOriginDefault = ShaderObjectInfo( 1538, 'FSwingOriginDefault', 0xae6a5, [] )
FSwingOriginFromWorld = ShaderObjectInfo( 1539, 'FSwingOriginFromWorld', 0x517e5, [] )
FSwingDefaultViewI = ShaderObjectInfo( 1540, 'FSwingDefaultViewI', 0x78ae, [] )
FSwingViewI = ShaderObjectInfo( 1541, 'FSwingViewI', 0x7200e, [] )
FSwingJointSupportDisable = ShaderObjectInfo( 1542, 'FSwingJointSupportDisable', 0x1ee3, [] )
FSwingJointSupport = ShaderObjectInfo( 1543, 'FSwingJointSupport', 0x99edb, [] )
FSwingBillboardDisable = ShaderObjectInfo( 1544, 'FSwingBillboardDisable', 0x90c42, [] )
FSwingBillboardTransform = ShaderObjectInfo( 1545, 'FSwingBillboardTransform', 0xff0da, [] )
FSwingBillboardTransformFixedY = ShaderObjectInfo( 1546, 'FSwingBillboardTransformFixedY', 0xc18e4, [] )
FSwingBillboard = ShaderObjectInfo( 1547, 'FSwingBillboard', 0x69658, [] )
FSwingBillboardRotation = ShaderObjectInfo( 1548, 'FSwingBillboardRotation', 0x32ae3, [] )
FSwing1Weight = ShaderObjectInfo( 1549, 'FSwing1Weight', 0x5bb9b, [] )
FSwing2Weight = ShaderObjectInfo( 1550, 'FSwing2Weight', 0xda106, [] )
FInstancingStreamSourceMatrix = ShaderObjectInfo( 1551, 'FInstancingStreamSourceMatrix', 0x4f7e0, [] )
FInstancingConstantMatrix = ShaderObjectInfo( 1552, 'FInstancingConstantMatrix', 0xd5c02, [] )
FInstancingMultiply = ShaderObjectInfo( 1553, 'FInstancingMultiply', 0xe44b4, [] )
FInstancingMultiplyEnable = ShaderObjectInfo( 1554, 'FInstancingMultiplyEnable', 0x4f148, [] )
FInstancing = ShaderObjectInfo( 1555, 'FInstancing', 0x486eb, [] )
FInstancingEnable = ShaderObjectInfo( 1556, 'FInstancingEnable', 0x24010, [] )
LdNormalPackF32 = ShaderObjectInfo( 1557, 'LdNormalPackF32', 0x68925, [] )
LdNormalUnpackF32 = ShaderObjectInfo( 1558, 'LdNormalUnpackF32', 0x19126, [] )
LdIdxToTexCoord = ShaderObjectInfo( 1559, 'LdIdxToTexCoord', 0x3df40, [] )
FLdTextureSampler3wPrev = ShaderObjectInfo( 1560, 'FLdTextureSampler3wPrev', 0x5037f, [] )
FLdTextureSampler3wPrevXBOX = ShaderObjectInfo( 1561, 'FLdTextureSampler3wPrevXBOX', 0x20de1, [] )
FLdDeformerWithPrev = ShaderObjectInfo( 1562, 'FLdDeformerWithPrev', 0x2ba17, [] )
FLdTextureSampler3 = ShaderObjectInfo( 1563, 'FLdTextureSampler3', 0x35e57, [] )
FLdTextureSampler3XBOX = ShaderObjectInfo( 1564, 'FLdTextureSampler3XBOX', 0xeda72, [] )
FLdDeformer = ShaderObjectInfo( 1565, 'FLdDeformer', 0x2b621, [] )
FLdLatticeDeformer = ShaderObjectInfo( 1566, 'FLdLatticeDeformer', 0x5ef90, [] )
FLdTetraDeformer = ShaderObjectInfo( 1567, 'FLdTetraDeformer', 0x742cb, [] )
FLdTestDeformer = ShaderObjectInfo( 1568, 'FLdTestDeformer', 0xa6ed0, [] )
FWorldMatrix = ShaderObjectInfo( 1569, 'FWorldMatrix', 0x86fd1, [] )
FMorph = ShaderObjectInfo( 1570, 'FMorph', 0x9e022, [] )
FMorphPosition = ShaderObjectInfo( 1571, 'FMorphPosition', 0xc2c0f, [] )
FWorldCoordinate = ShaderObjectInfo( 1572, 'FWorldCoordinate', 0xc270e, [] )
FWorldCoordinateSwing = ShaderObjectInfo( 1573, 'FWorldCoordinateSwing', 0x6dddf, [] )
FWorldCoordinateTransformed = ShaderObjectInfo( 1574, 'FWorldCoordinateTransformed', 0x2a5b6, [] )
FWorldCoordinateLatticeDeform = ShaderObjectInfo( 1575, 'FWorldCoordinateLatticeDeform', 0xb0952, [] )
FWorldCoordinateLatticeDeformEdge = ShaderObjectInfo( 1576, 'FWorldCoordinateLatticeDeformEdge', 0x610d0, [] )
FWorldCoordinateSymmetry = ShaderObjectInfo( 1577, 'FWorldCoordinateSymmetry', 0xe46f2, [] )
FWorldCoordinateFromTexture = ShaderObjectInfo( 1578, 'FWorldCoordinateFromTexture', 0x123f7, [] )
FWorldCoordinateFromTextureCalcTangnet = ShaderObjectInfo( 1579, 'FWorldCoordinateFromTextureCalcTangnet', 0xac7c9, [] )
FShaderAttributes = ShaderObjectInfo( 1580, 'FShaderAttributes', 0xff227, [] )
FShaderAttributesVTF = ShaderObjectInfo( 1581, 'FShaderAttributesVTF', 0xc000, [] )
VS_MaterialNull = ShaderObjectInfo( 1582, 'VS_MaterialNull', 0x38b30, [] )
PS_MaterialNull = ShaderObjectInfo( 1583, 'PS_MaterialNull', 0x95fc2, [] )
VS_MaterialDummy = ShaderObjectInfo( 1584, 'VS_MaterialDummy', 0x52968, [] )
PS_MaterialDummy = ShaderObjectInfo( 1585, 'PS_MaterialDummy', 0x4408c, [] )
VS_Dummy = ShaderObjectInfo( 1586, 'VS_Dummy', 0x6b9f9, [] )
PS_Dummy = ShaderObjectInfo( 1587, 'PS_Dummy', 0x9b07e, [] )
VS_MaterialDummyEdge = ShaderObjectInfo( 1588, 'VS_MaterialDummyEdge', 0x4080, [] )
PS_DummyPicker0 = ShaderObjectInfo( 1589, 'PS_DummyPicker0', 0x8ed37, [] )
PS_DummyPicker1 = ShaderObjectInfo( 1590, 'PS_DummyPicker1', 0xfdda1, [] )
PS_DummyPicker2 = ShaderObjectInfo( 1591, 'PS_DummyPicker2', 0x68c1b, [] )
PS_DummyPicker3 = ShaderObjectInfo( 1592, 'PS_DummyPicker3', 0x1bc8d, [] )
PS_DummyDynamicPicker = ShaderObjectInfo( 1593, 'PS_DummyDynamicPicker', 0xba4f7, [] )
hsv2rgb = ShaderObjectInfo( 1594, 'hsv2rgb', 0x93903, [] )
vdUnpackU8U8N = ShaderObjectInfo( 1595, 'vdUnpackU8U8N', 0x66e25, [] )
FVDMaskUVTransformOffset = ShaderObjectInfo( 1596, 'FVDMaskUVTransformOffset', 0x5746f, [] )
FVDMaskUVTransform = ShaderObjectInfo( 1597, 'FVDMaskUVTransform', 0x92200, [] )
FVDUVTransformOffset = ShaderObjectInfo( 1598, 'FVDUVTransformOffset', 0x2022a, [] )
FVDUVTransform = ShaderObjectInfo( 1599, 'FVDUVTransform', 0xcce95, [] )
FVDUVPrimary = ShaderObjectInfo( 1600, 'FVDUVPrimary', 0x66921, [] )
FVDUVSecondary = ShaderObjectInfo( 1601, 'FVDUVSecondary', 0xd3b2d, [] )
FVDUVUnique = ShaderObjectInfo( 1602, 'FVDUVUnique', 0xeea76, [] )
FVDUVExtend = ShaderObjectInfo( 1603, 'FVDUVExtend', 0x5f52d, [] )
FUVVertexDisplacement = ShaderObjectInfo( 1604, 'FUVVertexDisplacement', 0x34230, [] )
FVDGetMask = ShaderObjectInfo( 1605, 'FVDGetMask', 0x3486, [] )
FVDGetMaskFromTexture = ShaderObjectInfo( 1606, 'FVDGetMaskFromTexture', 0xe1293, [] )
FVDGetMaskFromAO = ShaderObjectInfo( 1607, 'FVDGetMaskFromAO', 0x39e22, [] )
FVDGetMaskDisable = ShaderObjectInfo( 1608, 'FVDGetMaskDisable', 0xb3e3f, [] )
FVertexDisplacement = ShaderObjectInfo( 1609, 'FVertexDisplacement', 0x5e6c5, [] )
FVertexDisplacementCurveU = ShaderObjectInfo( 1610, 'FVertexDisplacementCurveU', 0xd3336, [] )
FVertexDisplacementCurveV = ShaderObjectInfo( 1611, 'FVertexDisplacementCurveV', 0x4628c, [] )
FVertexDisplacementCurveUV = ShaderObjectInfo( 1612, 'FVertexDisplacementCurveUV', 0x69c6b, [] )
FVertexDisplacementDirU = ShaderObjectInfo( 1613, 'FVertexDisplacementDirU', 0x9ab04, [] )
FVertexDisplacementDirV = ShaderObjectInfo( 1614, 'FVertexDisplacementDirV', 0xfabe, [] )
FVertexDisplacementDirUV = ShaderObjectInfo( 1615, 'FVertexDisplacementDirUV', 0x17973, [] )
FVertexDisplacementMap = ShaderObjectInfo( 1616, 'FVertexDisplacementMap', 0xbc178, [] )
FVertexDisplacementMapDir = ShaderObjectInfo( 1617, 'FVertexDisplacementMapDir', 0xe6016, [] )
fVtxDispGenWave = ShaderObjectInfo( 1618, 'fVtxDispGenWave', 0x2e6f4, [] )
FVertexDisplacementWave = ShaderObjectInfo( 1619, 'FVertexDisplacementWave', 0x3f765, [] )
FVertexDisplacementWaveRandom = ShaderObjectInfo( 1620, 'FVertexDisplacementWaveRandom', 0xe1ee1, [] )
FVertexDisplacementWavePlus = ShaderObjectInfo( 1621, 'FVertexDisplacementWavePlus', 0x6076f, [] )
FVertexDisplacementDirExplosion = ShaderObjectInfo( 1622, 'FVertexDisplacementDirExplosion', 0xb8722, [] )
FVertexDisplacementDirExplosionPlus = ShaderObjectInfo( 1623, 'FVertexDisplacementDirExplosionPlus', 0xea988, [] )
FDebugViewVertex = ShaderObjectInfo( 1624, 'FDebugViewVertex', 0xa928e, [] )
FDebugViewVertexBonemap = ShaderObjectInfo( 1625, 'FDebugViewVertexBonemap', 0xbae7, [] )
FDebugViewVertexBoneweight = ShaderObjectInfo( 1626, 'FDebugViewVertexBoneweight', 0xb54aa, [] )
FDebugViewVertexBonenum = ShaderObjectInfo( 1627, 'FDebugViewVertexBonenum', 0xebf32, [] )
FDebugViewVertexPrelight = ShaderObjectInfo( 1628, 'FDebugViewVertexPrelight', 0x82812, [] )
VS_MaterialDebug = ShaderObjectInfo( 1629, 'VS_MaterialDebug', 0x49cf0, [] )
FDebugViewPixel = ShaderObjectInfo( 1630, 'FDebugViewPixel', 0x77073, [] )
FDebugViewPixelDefault = ShaderObjectInfo( 1631, 'FDebugViewPixelDefault', 0xcd45c, [] )
FDebugViewPixelBasemap = ShaderObjectInfo( 1632, 'FDebugViewPixelBasemap', 0x96449, [] )
FDebugViewPixelBasemapAlpha = ShaderObjectInfo( 1633, 'FDebugViewPixelBasemapAlpha', 0x69b78, [] )
FDebugViewPixelTangentNormalmap = ShaderObjectInfo( 1634, 'FDebugViewPixelTangentNormalmap', 0x5da1, [] )
FDebugViewPixelWorldNormalmap = ShaderObjectInfo( 1635, 'FDebugViewPixelWorldNormalmap', 0xe5821, [] )
FDebugViewPixelNormal = ShaderObjectInfo( 1636, 'FDebugViewPixelNormal', 0xe4ca7, [] )
FDebugViewPixelTangent = ShaderObjectInfo( 1637, 'FDebugViewPixelTangent', 0x8df6b, [] )
FDebugViewPixelBinormal = ShaderObjectInfo( 1638, 'FDebugViewPixelBinormal', 0xbc71d, [] )
FDebugViewPixelMaskmap = ShaderObjectInfo( 1639, 'FDebugViewPixelMaskmap', 0xe6393, [] )
FDebugViewPixelPrelight = ShaderObjectInfo( 1640, 'FDebugViewPixelPrelight', 0xac53b, [] )
FDebugViewPixelOcclusion = ShaderObjectInfo( 1641, 'FDebugViewPixelOcclusion', 0x73d77, [] )
PS_MaterialDebug = ShaderObjectInfo( 1642, 'PS_MaterialDebug', 0x5f514, [] )
FFilterVelocity = ShaderObjectInfo( 1643, 'FFilterVelocity', 0x4706f, [] )
FFilterMotionBlurSource = ShaderObjectInfo( 1644, 'FFilterMotionBlurSource', 0x40d19, [] )
FFilterMotionBlur8 = ShaderObjectInfo( 1645, 'FFilterMotionBlur8', 0x13134, [] )
FFilterMotionBlur8Median = ShaderObjectInfo( 1646, 'FFilterMotionBlur8Median', 0x2b3a3, [] )
FFilterMotionBlur4 = ShaderObjectInfo( 1647, 'FFilterMotionBlur4', 0x77d1f, [] )
FFilterMotionBlur4Median = ShaderObjectInfo( 1648, 'FFilterMotionBlur4Median', 0x2d9d7, [] )
FFilterMotionBlurVelocityBlend = ShaderObjectInfo( 1649, 'FFilterMotionBlurVelocityBlend', 0x29a5c, [] )
FFilterMotionBlurReductionBlend = ShaderObjectInfo( 1650, 'FFilterMotionBlurReductionBlend', 0x99b4f, [] )
deconstructVelocity = ShaderObjectInfo( 1651, 'deconstructVelocity', 0xf9432, [] )
CS_TileMax = ShaderObjectInfo( 1652, 'CS_TileMax', 0x4c3, [] )
FFilterMotionBlurTileMax = ShaderObjectInfo( 1653, 'FFilterMotionBlurTileMax', 0x58c6b, [] )
FFilterMotionBlurNeighborMax = ShaderObjectInfo( 1654, 'FFilterMotionBlurNeighborMax', 0x2302a, [] )
depthCompare = ShaderObjectInfo( 1655, 'depthCompare', 0xd166d, [] )
spreadCompare = ShaderObjectInfo( 1656, 'spreadCompare', 0xed9dc, [] )
sampleWeight = ShaderObjectInfo( 1657, 'sampleWeight', 0x7481b, [] )
FFilterMotionBlurReconstruct = ShaderObjectInfo( 1658, 'FFilterMotionBlurReconstruct', 0x72f1b, [] )
FMaterialVelocityWPosNml = ShaderObjectInfo( 1659, 'FMaterialVelocityWPosNml', 0x39c61, [] )
FMaterialVelocityWPosNmlSoftBody = ShaderObjectInfo( 1660, 'FMaterialVelocityWPosNmlSoftBody', 0xaddbd, [] )
FMaterialVlocityInflate = ShaderObjectInfo( 1661, 'FMaterialVlocityInflate', 0xf195d, [] )
FMaterialVlocityInflateEnable = ShaderObjectInfo( 1662, 'FMaterialVlocityInflateEnable', 0x4afef, [] )
VS_MaterialVelocity = ShaderObjectInfo( 1663, 'VS_MaterialVelocity', 0x46ae2, [] )
VS_MaterialVelocity2 = ShaderObjectInfo( 1664, 'VS_MaterialVelocity2', 0xe76be, [] )
VS_MaterialVelocityEdge = ShaderObjectInfo( 1665, 'VS_MaterialVelocityEdge', 0xe0009, [] )
PS_MaterialVelocity = ShaderObjectInfo( 1666, 'PS_MaterialVelocity', 0x861f1, [] )
TMaterialVelocityEdge_NoStretch_VS_MaterialVelocityEdge = ShaderObjectInfo( 1667, 'TMaterialVelocityEdge_NoStretch_VS_MaterialVelocityEdge', 0xb5d17, [] )
TMaterialVelocityEdge_Stretch_VS_MaterialVelocityEdge = ShaderObjectInfo( 1668, 'TMaterialVelocityEdge_Stretch_VS_MaterialVelocityEdge', 0xdd438, [] )
FOutlineBlend = ShaderObjectInfo( 1669, 'FOutlineBlend', 0xecd99, [] )
FOutlineBlendHDREncode = ShaderObjectInfo( 1670, 'FOutlineBlendHDREncode', 0x84a8d, [] )
FOutlineBlendAdd = ShaderObjectInfo( 1671, 'FOutlineBlendAdd', 0x519f7, [] )
FOutlineBlendAlpha = ShaderObjectInfo( 1672, 'FOutlineBlendAlpha', 0xca01d, [] )
FOutlineBlendModulate = ShaderObjectInfo( 1673, 'FOutlineBlendModulate', 0x41f50, [] )
FOutlineFade = ShaderObjectInfo( 1674, 'FOutlineFade', 0xeadfb, [] )
maskOutlineChannel = ShaderObjectInfo( 1675, 'maskOutlineChannel', 0x7cea0, [] )
maskOutlineGeometry = ShaderObjectInfo( 1676, 'maskOutlineGeometry', 0x2c8bd, [] )
FOutlineFadeDepth = ShaderObjectInfo( 1677, 'FOutlineFadeDepth', 0x9baf6, [] )
FOutlineDetector = ShaderObjectInfo( 1678, 'FOutlineDetector', 0xfc6d4, [] )
FOutlineDetector0 = ShaderObjectInfo( 1679, 'FOutlineDetector0', 0xf59a7, [] )
FOutlineDetector1 = ShaderObjectInfo( 1680, 'FOutlineDetector1', 0x86931, [] )
FOutlineDetector2 = ShaderObjectInfo( 1681, 'FOutlineDetector2', 0x1388b, [] )
FOutlineDetector3 = ShaderObjectInfo( 1682, 'FOutlineDetector3', 0x6081d, [] )
FOutlineDetectorID = ShaderObjectInfo( 1683, 'FOutlineDetectorID', 0x9be24, [] )
FOutlineDetectorDepth = ShaderObjectInfo( 1684, 'FOutlineDetectorDepth', 0xb5bf, [] )
FOutlineDetectorDepthWrap = ShaderObjectInfo( 1685, 'FOutlineDetectorDepthWrap', 0xd929f, [] )
FOutlineComposite = ShaderObjectInfo( 1686, 'FOutlineComposite', 0x2c964, [] )
FOutlineCompositeModulate = ShaderObjectInfo( 1687, 'FOutlineCompositeModulate', 0xf5653, [] )
FOutlineCompositeBlend = ShaderObjectInfo( 1688, 'FOutlineCompositeBlend', 0xa0a70, [] )
FOutlineCompositeAdd = ShaderObjectInfo( 1689, 'FOutlineCompositeAdd', 0xa4090, [] )
FOutlineCompositeMultiModulate = ShaderObjectInfo( 1690, 'FOutlineCompositeMultiModulate', 0xe022d, [] )
FOutlineCompositeMultiBlend = ShaderObjectInfo( 1691, 'FOutlineCompositeMultiBlend', 0x25a88, [] )
FOutlineCompositeMultiAdd = ShaderObjectInfo( 1692, 'FOutlineCompositeMultiAdd', 0x4aa1b, [] )
FOutlineSample = ShaderObjectInfo( 1693, 'FOutlineSample', 0x179e8, [] )
FOutlineSample4 = ShaderObjectInfo( 1694, 'FOutlineSample4', 0xadf86, [] )
FOutlineSample12 = ShaderObjectInfo( 1695, 'FOutlineSample12', 0x4790f, [] )
FFilterOutlineThick = ShaderObjectInfo( 1696, 'FFilterOutlineThick', 0x52c9, [] )
FFilterOutlineThick1V = ShaderObjectInfo( 1697, 'FFilterOutlineThick1V', 0x8186c, [] )
FFilterOutlineThick1H = ShaderObjectInfo( 1698, 'FFilterOutlineThick1H', 0x7250f, [] )
FFilterOutlineThick2V = ShaderObjectInfo( 1699, 'FFilterOutlineThick2V', 0x54baf, [] )
FFilterOutlineThick2H = ShaderObjectInfo( 1700, 'FFilterOutlineThick2H', 0xa76cc, [] )
FFilterOutlineBlur = ShaderObjectInfo( 1701, 'FFilterOutlineBlur', 0x22f25, [] )
FFilterOutlineBlur1H = ShaderObjectInfo( 1702, 'FFilterOutlineBlur1H', 0x8a01c, [] )
FFilterOutlineBlur1V = ShaderObjectInfo( 1703, 'FFilterOutlineBlur1V', 0x79d7f, [] )
FFilterOutlineBlur2H = ShaderObjectInfo( 1704, 'FFilterOutlineBlur2H', 0x5f3df, [] )
FFilterOutlineBlur2V = ShaderObjectInfo( 1705, 'FFilterOutlineBlur2V', 0xacebc, [] )
FFilterOutlineSample = ShaderObjectInfo( 1706, 'FFilterOutlineSample', 0x161e1, [] )
FFilterOutlineComposite = ShaderObjectInfo( 1707, 'FFilterOutlineComposite', 0xca88c, [] )
FFilterOutlineCompositeBloomF = ShaderObjectInfo( 1708, 'FFilterOutlineCompositeBloomF', 0x8386f, [] )
FFilterOutlineCompositeEmit = ShaderObjectInfo( 1709, 'FFilterOutlineCompositeEmit', 0xe8242, [] )
FFilterOutlineSampleComposite = ShaderObjectInfo( 1710, 'FFilterOutlineSampleComposite', 0x59ea0, [] )
FFilterOutlineDetector = ShaderObjectInfo( 1711, 'FFilterOutlineDetector', 0x16b0b, [] )
FFilterOutlineDirect = ShaderObjectInfo( 1712, 'FFilterOutlineDirect', 0xd026c, [] )
VS_MaterialOutline = ShaderObjectInfo( 1713, 'VS_MaterialOutline', 0xd92a4, [] )
PS_MaterialOutline = ShaderObjectInfo( 1714, 'PS_MaterialOutline', 0x12e21, [] )
PS_MaterialOutline2 = ShaderObjectInfo( 1715, 'PS_MaterialOutline2', 0x260f0, [] )
FShadowReceiveFaceAttn = ShaderObjectInfo( 1716, 'FShadowReceiveFaceAttn', 0x360e1, [] )
FShadowReceiveFaceAttnIncrease = ShaderObjectInfo( 1717, 'FShadowReceiveFaceAttnIncrease', 0xff2ce, [] )
FShadowReceiveFaceAttnDecrease = ShaderObjectInfo( 1718, 'FShadowReceiveFaceAttnDecrease', 0xdb3e5, [] )
FShadowReceiveFaceAttnCut = ShaderObjectInfo( 1719, 'FShadowReceiveFaceAttnCut', 0x4ca2c, [] )
FShadowReceiveAttn = ShaderObjectInfo( 1720, 'FShadowReceiveAttn', 0x8187a, [] )
FShadowReceiveAttnFade = ShaderObjectInfo( 1721, 'FShadowReceiveAttnFade', 0x94b58, [] )
FShadowReceiveAttnViewDistance = ShaderObjectInfo( 1722, 'FShadowReceiveAttnViewDistance', 0x8f6c, [] )
FShadowReceiveAttnDistance = ShaderObjectInfo( 1723, 'FShadowReceiveAttnDistance', 0xc6bf7, [] )
FShadowReceiveAttnDistanceFade = ShaderObjectInfo( 1724, 'FShadowReceiveAttnDistanceFade', 0x1990d, [] )
FShadowReceiveAttnSpot = ShaderObjectInfo( 1725, 'FShadowReceiveAttnSpot', 0xedc8b, [] )
FShadowReceiveAttnSpotFade = ShaderObjectInfo( 1726, 'FShadowReceiveAttnSpotFade', 0x80e45, [] )
FShadowIsOutOfRange = ShaderObjectInfo( 1727, 'FShadowIsOutOfRange', 0x4d27d, [] )
FShadowIsOutOfRangeEnable = ShaderObjectInfo( 1728, 'FShadowIsOutOfRangeEnable', 0xd2179, [] )
sampleDepth = ShaderObjectInfo( 1729, 'sampleDepth', 0xe9ec4, [] )
sampleDepthComp = ShaderObjectInfo( 1730, 'sampleDepthComp', 0xa9231, [] )
sampleVariance = ShaderObjectInfo( 1731, 'sampleVariance', 0x4d364, [] )
sampleLevelVariance = ShaderObjectInfo( 1732, 'sampleLevelVariance', 0xdec9d, [] )
FShadowFilter = ShaderObjectInfo( 1733, 'FShadowFilter', 0x51056, [] )
calcPCF2x2 = ShaderObjectInfo( 1734, 'calcPCF2x2', 0xbe09e, [] )
FShadowFilterPCF2x2 = ShaderObjectInfo( 1735, 'FShadowFilterPCF2x2', 0x858ec, [] )
FShadowFilterPCF2x2Comp = ShaderObjectInfo( 1736, 'FShadowFilterPCF2x2Comp', 0x1f8a, [] )
calcPCF3x3 = ShaderObjectInfo( 1737, 'calcPCF3x3', 0xeba3f, [] )
FShadowFilterPCF3x3 = ShaderObjectInfo( 1738, 'FShadowFilterPCF3x3', 0xd024d, [] )
FShadowFilterPCF3x3Comp = ShaderObjectInfo( 1739, 'FShadowFilterPCF3x3Comp', 0x73d8e, [] )
calcPCF4x4 = ShaderObjectInfo( 1740, 'calcPCF4x4', 0x53919, [] )
FShadowFilterPCF4x4 = ShaderObjectInfo( 1741, 'FShadowFilterPCF4x4', 0x6816b, [] )
FShadowFilterPCF4x4Comp = ShaderObjectInfo( 1742, 'FShadowFilterPCF4x4Comp', 0xdf10, [] )
calcPmax = ShaderObjectInfo( 1743, 'calcPmax', 0x6f61a, [] )
FShadowFilterVSM = ShaderObjectInfo( 1744, 'FShadowFilterVSM', 0x4c59a, [] )
FShadowFilterVLSM = ShaderObjectInfo( 1745, 'FShadowFilterVLSM', 0x27820, [] )
filterCascadeVSSM = ShaderObjectInfo( 1746, 'filterCascadeVSSM', 0xa8287, [] )
filterCascadeVLSM = ShaderObjectInfo( 1747, 'filterCascadeVLSM', 0x66ca, [] )
getCubeTextureCordinate = ShaderObjectInfo( 1748, 'getCubeTextureCordinate', 0x4bdab, [] )
FShadowFilterPoint = ShaderObjectInfo( 1749, 'FShadowFilterPoint', 0xf45c2, [] )
FShadowFilterPointPCF2x2 = ShaderObjectInfo( 1750, 'FShadowFilterPointPCF2x2', 0xa7410, [] )
FShadowFilterPointPCF3x3 = ShaderObjectInfo( 1751, 'FShadowFilterPointPCF3x3', 0xf2eb1, [] )
FShadowFilterPointPCF4x4 = ShaderObjectInfo( 1752, 'FShadowFilterPointPCF4x4', 0x4ad97, [] )
FShadowFilterPointVSM = ShaderObjectInfo( 1753, 'FShadowFilterPointVSM', 0xcc411, [] )
FShadowLightFace = ShaderObjectInfo( 1754, 'FShadowLightFace', 0x765c6, [] )
FShadowLightFacePoint = ShaderObjectInfo( 1755, 'FShadowLightFacePoint', 0x2da0e, [] )
VS_ShadowReceive = ShaderObjectInfo( 1756, 'VS_ShadowReceive', 0x2499e, [] )
FShadowReceive = ShaderObjectInfo( 1757, 'FShadowReceive', 0xa97eb, [] )
FShadowReceiveRT = ShaderObjectInfo( 1758, 'FShadowReceiveRT', 0xada61, [] )
FShadowReceiveCascadeSSM = ShaderObjectInfo( 1759, 'FShadowReceiveCascadeSSM', 0x4b2d4, [] )
FShadowReceiveCascadeSSMRT = ShaderObjectInfo( 1760, 'FShadowReceiveCascadeSSMRT', 0xb1b4, [] )
FShadowReceiveCascadeSSMLite = ShaderObjectInfo( 1761, 'FShadowReceiveCascadeSSMLite', 0x1b35c, [] )
FShadowReceiveCascadeSSMRTLite = ShaderObjectInfo( 1762, 'FShadowReceiveCascadeSSMRTLite', 0x5398c, [] )
FShadowReceiveSmoothCascadeSSM = ShaderObjectInfo( 1763, 'FShadowReceiveSmoothCascadeSSM', 0x25edb, [] )
FShadowReceiveSmoothCascadeSSMRT = ShaderObjectInfo( 1764, 'FShadowReceiveSmoothCascadeSSMRT', 0x4539e, [] )
FShadowReceiveSmoothCascadeSSMLite = ShaderObjectInfo( 1765, 'FShadowReceiveSmoothCascadeSSMLite', 0xed204, [] )
FShadowReceiveSmoothCascadeSSMRTLite = ShaderObjectInfo( 1766, 'FShadowReceiveSmoothCascadeSSMRTLite', 0x29e71, [] )
FShadowReceiveLSM = ShaderObjectInfo( 1767, 'FShadowReceiveLSM', 0x61e84, [] )
FShadowReceiveLSMRT = ShaderObjectInfo( 1768, 'FShadowReceiveLSMRT', 0xba101, [] )
FShadowReceiveCascadeLSM = ShaderObjectInfo( 1769, 'FShadowReceiveCascadeLSM', 0xe5699, [] )
FShadowReceiveCascadeLSMRT = ShaderObjectInfo( 1770, 'FShadowReceiveCascadeLSMRT', 0xb1e7, [] )
FShadowReceiveSmoothCascadeLSM = ShaderObjectInfo( 1771, 'FShadowReceiveSmoothCascadeLSM', 0x8ba96, [] )
FShadowReceiveSmoothCascadeLSMRT = ShaderObjectInfo( 1772, 'FShadowReceiveSmoothCascadeLSMRT', 0x453cd, [] )
FShadowReceiveCascadeVSSM = ShaderObjectInfo( 1773, 'FShadowReceiveCascadeVSSM', 0x5d0bf, [] )
FShadowReceiveCascadeVSSMRT = ShaderObjectInfo( 1774, 'FShadowReceiveCascadeVSSMRT', 0x5a01d, [] )
FShadowReceiveCascadeVLSM = ShaderObjectInfo( 1775, 'FShadowReceiveCascadeVLSM', 0xf34f2, [] )
FShadowReceiveCascadeVLSMRT = ShaderObjectInfo( 1776, 'FShadowReceiveCascadeVLSMRT', 0x5a04e, [] )
FShadowReceiveSpotVSM = ShaderObjectInfo( 1777, 'FShadowReceiveSpotVSM', 0x313b9, [] )
FShadowReceiveSpotVSMRT = ShaderObjectInfo( 1778, 'FShadowReceiveSpotVSMRT', 0x2f257, [] )
FShadowReceivePoint = ShaderObjectInfo( 1779, 'FShadowReceivePoint', 0xf2b90, [] )
PS_ShadowReceive = ShaderObjectInfo( 1780, 'PS_ShadowReceive', 0x3207a, [] )
PS_ShadowReceiveTransparent = ShaderObjectInfo( 1781, 'PS_ShadowReceiveTransparent', 0x5e765, [] )
getMaterialShadowRT = ShaderObjectInfo( 1782, 'getMaterialShadowRT', 0x67a11, [] )
FLightMaskRTSolid0 = ShaderObjectInfo( 1783, 'FLightMaskRTSolid0', 0x6e49a, [] )
FLightMaskRTSolid1 = ShaderObjectInfo( 1784, 'FLightMaskRTSolid1', 0x1d40c, [] )
FLightMaskRTTransparent0 = ShaderObjectInfo( 1785, 'FLightMaskRTTransparent0', 0xb9fe2, [] )
FLightMaskRTTransparent1 = ShaderObjectInfo( 1786, 'FLightMaskRTTransparent1', 0xcaf74, [] )
VS_ShadowReceiveDeferredRectangle = ShaderObjectInfo( 1787, 'VS_ShadowReceiveDeferredRectangle', 0x5a65a, [] )
PS_ShadowReceiveDeferredRectangle = ShaderObjectInfo( 1788, 'PS_ShadowReceiveDeferredRectangle', 0xac470, [] )
FParaboloidProjection = ShaderObjectInfo( 1789, 'FParaboloidProjection', 0x12fc4, [] )
VS_DualParaboloid = ShaderObjectInfo( 1790, 'VS_DualParaboloid', 0x9b0c8, [] )
PS_DualParaboloid = ShaderObjectInfo( 1791, 'PS_DualParaboloid', 0xd07c0, [] )
FDeferredLightingEncodeParameter = ShaderObjectInfo( 1792, 'FDeferredLightingEncodeParameter', 0x240b2, [] )
FDeferredLightingEncodeParameterHalfLambert = ShaderObjectInfo( 1793, 'FDeferredLightingEncodeParameterHalfLambert', 0xa2c95, [] )
FDeferredLightingEncodeParameterOverlap = ShaderObjectInfo( 1794, 'FDeferredLightingEncodeParameterOverlap', 0xbece2, [] )
FDeferredLightingEncodeParameterMRT = ShaderObjectInfo( 1795, 'FDeferredLightingEncodeParameterMRT', 0x7292, [] )
FDeferredLightingEncodeParameterMRTHalfLambert = ShaderObjectInfo( 1796, 'FDeferredLightingEncodeParameterMRTHalfLambert', 0x4ddf4, [] )
FDeferredLightingDecodeParameter = ShaderObjectInfo( 1797, 'FDeferredLightingDecodeParameter', 0x1a0b7, [] )
FDeferredLightingDecodeParameterHalfLambert = ShaderObjectInfo( 1798, 'FDeferredLightingDecodeParameterHalfLambert', 0x1afe6, [] )
FDeferredLightingGetLightParam = ShaderObjectInfo( 1799, 'FDeferredLightingGetLightParam', 0x69157, [] )
FDeferredLightingGetLightParamFadeOut = ShaderObjectInfo( 1800, 'FDeferredLightingGetLightParamFadeOut', 0x407f9, [] )
FBRDFDeferredLighting = ShaderObjectInfo( 1801, 'FBRDFDeferredLighting', 0xfafde, [] )
FDynamicLightingDeferredLighting = ShaderObjectInfo( 1802, 'FDynamicLightingDeferredLighting', 0x57bea, [] )
FDeferredLightingLightVolumeLightMask = ShaderObjectInfo( 1803, 'FDeferredLightingLightVolumeLightMask', 0x5bcba, [] )
FDeferredLightingLightVolumeLightMaskSolid0 = ShaderObjectInfo( 1804, 'FDeferredLightingLightVolumeLightMaskSolid0', 0x23f6b, [] )
FDeferredLightingLightVolumeLightMaskSolid1 = ShaderObjectInfo( 1805, 'FDeferredLightingLightVolumeLightMaskSolid1', 0x50ffd, [] )
FDeferredLightingLightVolumeLightMaskSolid01 = ShaderObjectInfo( 1806, 'FDeferredLightingLightVolumeLightMaskSolid01', 0xbfad5, [] )
FDeferredLightingLightVolumeLightMaskTransparentFullSize = ShaderObjectInfo( 1807, 'FDeferredLightingLightVolumeLightMaskTransparentFullSize', 0xf3c5b, [] )
FDeferredLightingLightVolumeLightMaskTransparentQuarterSize = ShaderObjectInfo( 1808, 'FDeferredLightingLightVolumeLightMaskTransparentQuarterSize', 0x20e44, [] )
FDeferredLightingLightVolumeLightMaskTransparent0 = ShaderObjectInfo( 1809, 'FDeferredLightingLightVolumeLightMaskTransparent0', 0xd1697, [] )
FDeferredLightingLightVolumeLightMaskTransparent1 = ShaderObjectInfo( 1810, 'FDeferredLightingLightVolumeLightMaskTransparent1', 0xa2601, [] )
FDeferredLightingLightVolumeLightMaskTransparent01 = ShaderObjectInfo( 1811, 'FDeferredLightingLightVolumeLightMaskTransparent01', 0xb7bcb, [] )
FDeferredLightingLightVolumeLightMaskRTSolid0 = ShaderObjectInfo( 1812, 'FDeferredLightingLightVolumeLightMaskRTSolid0', 0xc2822, [] )
FDeferredLightingLightVolumeLightMaskRTSolid1 = ShaderObjectInfo( 1813, 'FDeferredLightingLightVolumeLightMaskRTSolid1', 0xb18b4, [] )
FDeferredLightingCompareEqualLightGroup = ShaderObjectInfo( 1814, 'FDeferredLightingCompareEqualLightGroup', 0xcb3f3, [] )
FDeferredLightingCompareEqualLightGroupDisable = ShaderObjectInfo( 1815, 'FDeferredLightingCompareEqualLightGroupDisable', 0xce9a3, [] )
FReconstructViewDepthFromDepth = ShaderObjectInfo( 1816, 'FReconstructViewDepthFromDepth', 0xcefdc, [] )
FReconstructViewDepthFromLinearDepth = ShaderObjectInfo( 1817, 'FReconstructViewDepthFromLinearDepth', 0xff182, [] )
FReconstructWorldPosition = ShaderObjectInfo( 1818, 'FReconstructWorldPosition', 0x1522e, [] )
FReconstructWorldPositionDualPalaboloid = ShaderObjectInfo( 1819, 'FReconstructWorldPositionDualPalaboloid', 0x42482, [] )
FDepthBoundsTest = ShaderObjectInfo( 1820, 'FDepthBoundsTest', 0xf8d45, [] )
FDepthBoundsTestEnable = ShaderObjectInfo( 1821, 'FDepthBoundsTestEnable', 0xc7569, [] )
FBumpMapFromGBuffer = ShaderObjectInfo( 1822, 'FBumpMapFromGBuffer', 0x69ac6, [] )
FDeferredLightingGetLightingParameter = ShaderObjectInfo( 1823, 'FDeferredLightingGetLightingParameter', 0xd2afd, [] )
FDeferredLightingGetLightingResult = ShaderObjectInfo( 1824, 'FDeferredLightingGetLightingResult', 0xaf71, [] )
VS_DeferredLighting_LightVolume = ShaderObjectInfo( 1825, 'VS_DeferredLighting_LightVolume', 0x1a2c5, [] )
VS_DeferredLighting_LightVolumeRectangle = ShaderObjectInfo( 1826, 'VS_DeferredLighting_LightVolumeRectangle', 0x274ae, [] )
PS_DeferredLighting_LightVolume_NoLighting = ShaderObjectInfo( 1827, 'PS_DeferredLighting_LightVolume_NoLighting', 0x1e162, [] )
PS_DeferredLighting_LightVolume_NoLighting_MRT = ShaderObjectInfo( 1828, 'PS_DeferredLighting_LightVolume_NoLighting_MRT', 0x255ba, [] )
PS_DeferredLighting_LightVolume_NoLighting_LightGroup = ShaderObjectInfo( 1829, 'PS_DeferredLighting_LightVolume_NoLighting_LightGroup', 0xd38c, [] )
PS_DeferredLighting_LightVolume_NoLighting_LightGroup_MRT = ShaderObjectInfo( 1830, 'PS_DeferredLighting_LightVolume_NoLighting_LightGroup_MRT', 0xd2ddc, [] )
PS_DeferredLighting_LightVolume = ShaderObjectInfo( 1831, 'PS_DeferredLighting_LightVolume', 0x1d023, [] )
PS_DeferredLighting_LightVolume_MRT = ShaderObjectInfo( 1832, 'PS_DeferredLighting_LightVolume_MRT', 0x25a69, [] )
FDeferredLightingEncodeOutputLog = ShaderObjectInfo( 1833, 'FDeferredLightingEncodeOutputLog', 0xf4237, [] )
FAmbientMask = ShaderObjectInfo( 1834, 'FAmbientMask', 0x188a8, [] )
FAmbientMaskEnable = ShaderObjectInfo( 1835, 'FAmbientMaskEnable', 0x51533, [] )
FEncodeRSMParameter = ShaderObjectInfo( 1836, 'FEncodeRSMParameter', 0x4d7b, [] )
FDecodeRSMParameter = ShaderObjectInfo( 1837, 'FDecodeRSMParameter', 0x8ef80, [] )
FRSMComputeIndirectLighting = ShaderObjectInfo( 1838, 'FRSMComputeIndirectLighting', 0x72e97, [] )
FRSMGatherIndirectLighting = ShaderObjectInfo( 1839, 'FRSMGatherIndirectLighting', 0xfbf4e, [] )
FRSMGatherIndirectLightingLargeSize = ShaderObjectInfo( 1840, 'FRSMGatherIndirectLightingLargeSize', 0x9783c, [] )
FRSMGatherIndirectLightingHighQuality = ShaderObjectInfo( 1841, 'FRSMGatherIndirectLightingHighQuality', 0xf378a, [] )
FRSMGatherIndirectLightingVariable = ShaderObjectInfo( 1842, 'FRSMGatherIndirectLightingVariable', 0x48c44, [] )
FRSMGetIndirectLighting = ShaderObjectInfo( 1843, 'FRSMGetIndirectLighting', 0x1991b, [] )
PS_DeferredLighting_IndirectLighting = ShaderObjectInfo( 1844, 'PS_DeferredLighting_IndirectLighting', 0x123ee, [] )
PS_DeferredLighting_GBufferReduction = ShaderObjectInfo( 1845, 'PS_DeferredLighting_GBufferReduction', 0x8eb5, [] )
PS_DeferredLighting_BilateralBlurH_Size8 = ShaderObjectInfo( 1846, 'PS_DeferredLighting_BilateralBlurH_Size8', 0x3f38a, [] )
PS_DeferredLighting_BilateralBlurH_Size12 = ShaderObjectInfo( 1847, 'PS_DeferredLighting_BilateralBlurH_Size12', 0xc7304, [] )
PS_DeferredLighting_BilateralBlurH_Size16 = ShaderObjectInfo( 1848, 'PS_DeferredLighting_BilateralBlurH_Size16', 0x1b71d, [] )
PS_DeferredLighting_BilateralBlurV_Size8 = ShaderObjectInfo( 1849, 'PS_DeferredLighting_BilateralBlurV_Size8', 0x21419, [] )
PS_DeferredLighting_BilateralBlurV_Size12 = ShaderObjectInfo( 1850, 'PS_DeferredLighting_BilateralBlurV_Size12', 0xd501d, [] )
PS_DeferredLighting_BilateralBlurV_Size16 = ShaderObjectInfo( 1851, 'PS_DeferredLighting_BilateralBlurV_Size16', 0x9404, [] )
PS_DeferredLighting_BilateralUpsampling = ShaderObjectInfo( 1852, 'PS_DeferredLighting_BilateralUpsampling', 0x7fa35, [] )
PS_DeferredLighting_BilinearUpsampling = ShaderObjectInfo( 1853, 'PS_DeferredLighting_BilinearUpsampling', 0x257df, [] )
VS_MaterialStd = ShaderObjectInfo( 1854, 'VS_MaterialStd', 0x79ffd, [] )
PS_MaterialStd = ShaderObjectInfo( 1855, 'PS_MaterialStd', 0x5d44b, [] )
PS_DeferredLighting_GBufferPass = ShaderObjectInfo( 1856, 'PS_DeferredLighting_GBufferPass', 0x9ba69, [] )
PS_DeferredLighting_GBufferPassMRT = ShaderObjectInfo( 1857, 'PS_DeferredLighting_GBufferPassMRT', 0x35898, [] )
PS_ReflectiveShadowMap = ShaderObjectInfo( 1858, 'PS_ReflectiveShadowMap', 0xc809d, [] )
VS_Adhesion = ShaderObjectInfo( 1859, 'VS_Adhesion', 0x3f1fd, [] )
doAdhesionEachLighting = ShaderObjectInfo( 1860, 'doAdhesionEachLighting', 0x35f81, [] )
doAdhesionDynamicLighting = ShaderObjectInfo( 1861, 'doAdhesionDynamicLighting', 0x55cfa, [] )
FAdhesionAlbedo = ShaderObjectInfo( 1862, 'FAdhesionAlbedo', 0x9fe33, [] )
FAdhesionAlbedoSubtract = ShaderObjectInfo( 1863, 'FAdhesionAlbedoSubtract', 0x47799, [] )
PS_Adhesion = ShaderObjectInfo( 1864, 'PS_Adhesion', 0x63bbe, [] )
VS_AdhesionPV = ShaderObjectInfo( 1865, 'VS_AdhesionPV', 0xb560c, [] )
PS_AdhesionPV = ShaderObjectInfo( 1866, 'PS_AdhesionPV', 0xe89d1, [] )
FSSSIrradiance = ShaderObjectInfo( 1867, 'FSSSIrradiance', 0x4c713, [] )
FSSSFillMarginH = ShaderObjectInfo( 1868, 'FSSSFillMarginH', 0x69eb7, [] )
FSSSFillMarginV = ShaderObjectInfo( 1869, 'FSSSFillMarginV', 0x9a3d4, [] )
FSSSGaussianFilterH = ShaderObjectInfo( 1870, 'FSSSGaussianFilterH', 0x629ec, [] )
FSSSGaussianFilterV = ShaderObjectInfo( 1871, 'FSSSGaussianFilterV', 0x9148f, [] )
PS_MaterialSSS = ShaderObjectInfo( 1872, 'PS_MaterialSSS', 0xdc321, [] )
PS_MaterialSSSIrradiance = ShaderObjectInfo( 1873, 'PS_MaterialSSSIrradiance', 0x7cac4, [] )
PS_MaterialSSSDistortion = ShaderObjectInfo( 1874, 'PS_MaterialSSSDistortion', 0x85fd3, [] )
VS_MaterialStdEst = ShaderObjectInfo( 1875, 'VS_MaterialStdEst', 0x672ad, [] )
PS_MaterialStdEst = ShaderObjectInfo( 1876, 'PS_MaterialStdEst', 0x2c5a5, [] )
PS_DeferredLighting_GBufferPassEst = ShaderObjectInfo( 1877, 'PS_DeferredLighting_GBufferPassEst', 0x13c0b, [] )
PS_DeferredLighting_GBufferPassMRTEst = ShaderObjectInfo( 1878, 'PS_DeferredLighting_GBufferPassMRTEst', 0x98f25, [] )
PS_ReflectiveShadowMapEst = ShaderObjectInfo( 1879, 'PS_ReflectiveShadowMapEst', 0x23f86, [] )
VS_ModelFog = ShaderObjectInfo( 1880, 'VS_ModelFog', 0xe8e83, [] )
PS_ModelFog = ShaderObjectInfo( 1881, 'PS_ModelFog', 0xb44c0, [] )
VS_MaterialConstant = ShaderObjectInfo( 1882, 'VS_MaterialConstant', 0x66993, [] )
PS_MaterialConstant = ShaderObjectInfo( 1883, 'PS_MaterialConstant', 0xa6280, [] )
getAdaptiveFactor = ShaderObjectInfo( 1884, 'getAdaptiveFactor', 0x3bf5f, [] )
HS_PNTrianglesConstant = ShaderObjectInfo( 1885, 'HS_PNTrianglesConstant', 0x32645, [] )
HS_MaterialPN = ShaderObjectInfo( 1886, 'HS_MaterialPN', 0xe956d, [] )
DS_MaterialPN = ShaderObjectInfo( 1887, 'DS_MaterialPN', 0x42c96, [] )
HS_PHTrianglesConstant = ShaderObjectInfo( 1888, 'HS_PHTrianglesConstant', 0xf9ac0, [] )
HS_MaterialPH = ShaderObjectInfo( 1889, 'HS_MaterialPH', 0xd3058, [] )
DS_MaterialPH = ShaderObjectInfo( 1890, 'DS_MaterialPH', 0x789a3, [] )
HS_DMTrianglesConstant = ShaderObjectInfo( 1891, 'HS_DMTrianglesConstant', 0xfcdcf, [] )
HS_MaterialDM = ShaderObjectInfo( 1892, 'HS_MaterialDM', 0x91382, [] )
DS_MaterialDM = ShaderObjectInfo( 1893, 'DS_MaterialDM', 0x3aa79, [] )
VS_MaterialStdCafeTes = ShaderObjectInfo( 1894, 'VS_MaterialStdCafeTes', 0xbcd50, [] )
FShadowBias = ShaderObjectInfo( 1895, 'FShadowBias', 0x4d0b2, [] )
FShadowDepthBias = ShaderObjectInfo( 1896, 'FShadowDepthBias', 0xed98e, [] )
FShadowBiasDisable = ShaderObjectInfo( 1897, 'FShadowBiasDisable', 0xa9708, [] )
VS_ShadowCast = ShaderObjectInfo( 1898, 'VS_ShadowCast', 0x96e6f, [] )
FShadowCast = ShaderObjectInfo( 1899, 'FShadowCast', 0xb031f, [] )
FShadowCastDepth = ShaderObjectInfo( 1900, 'FShadowCastDepth', 0xe42a5, [] )
FShadowCastDistance = ShaderObjectInfo( 1901, 'FShadowCastDistance', 0xbe2b0, [] )
PS_ShadowCast = ShaderObjectInfo( 1902, 'PS_ShadowCast', 0xcb1b2, [] )
PS_ShadowCastTransparent = ShaderObjectInfo( 1903, 'PS_ShadowCastTransparent', 0xeb4a9, [] )
PS_ShadowCastZOffset = ShaderObjectInfo( 1904, 'PS_ShadowCastZOffset', 0x95250, [] )
PS_ShadowCastTransparentZOffset = ShaderObjectInfo( 1905, 'PS_ShadowCastTransparentZOffset', 0xbeed1, [] )
FShadowIsOutOfRange0 = ShaderObjectInfo( 1906, 'FShadowIsOutOfRange0', 0xef9ff, [] )
FShadowIsOutOfRange1 = ShaderObjectInfo( 1907, 'FShadowIsOutOfRange1', 0x9c969, [] )
FShadowIsOutOfRange2 = ShaderObjectInfo( 1908, 'FShadowIsOutOfRange2', 0x98d3, [] )
FShadowIsOutOfRange3 = ShaderObjectInfo( 1909, 'FShadowIsOutOfRange3', 0x7a845, [] )
FShadowLightFace0 = ShaderObjectInfo( 1910, 'FShadowLightFace0', 0xa904c, [] )
FShadowLightFace1 = ShaderObjectInfo( 1911, 'FShadowLightFace1', 0xda0da, [] )
FShadowLightFace2 = ShaderObjectInfo( 1912, 'FShadowLightFace2', 0x4f160, [] )
FShadowLightFace3 = ShaderObjectInfo( 1913, 'FShadowLightFace3', 0x3c1f6, [] )
FShadowReceiveFaceAttn0 = ShaderObjectInfo( 1914, 'FShadowReceiveFaceAttn0', 0xda122, [] )
FShadowReceiveFaceAttn1 = ShaderObjectInfo( 1915, 'FShadowReceiveFaceAttn1', 0xa91b4, [] )
FShadowReceiveFaceAttn2 = ShaderObjectInfo( 1916, 'FShadowReceiveFaceAttn2', 0x3c00e, [] )
FShadowReceiveFaceAttn3 = ShaderObjectInfo( 1917, 'FShadowReceiveFaceAttn3', 0x4f098, [] )
FShadowReceiveAttn0 = ShaderObjectInfo( 1918, 'FShadowReceiveAttn0', 0x8f096, [] )
FShadowReceiveAttn1 = ShaderObjectInfo( 1919, 'FShadowReceiveAttn1', 0xfc000, [] )
FShadowReceiveAttn2 = ShaderObjectInfo( 1920, 'FShadowReceiveAttn2', 0x691ba, [] )
FShadowReceiveAttn3 = ShaderObjectInfo( 1921, 'FShadowReceiveAttn3', 0x1a12c, [] )
FShadowReceiveRT0 = ShaderObjectInfo( 1922, 'FShadowReceiveRT0', 0xb0bb8, [] )
FShadowReceiveRT1 = ShaderObjectInfo( 1923, 'FShadowReceiveRT1', 0xc3b2e, [] )
FShadowReceiveRT2 = ShaderObjectInfo( 1924, 'FShadowReceiveRT2', 0x56a94, [] )
FShadowReceiveRT3 = ShaderObjectInfo( 1925, 'FShadowReceiveRT3', 0x25a02, [] )
FShadowFilter0 = ShaderObjectInfo( 1926, 'FShadowFilter0', 0xbd17d, [] )
FShadowFilter1 = ShaderObjectInfo( 1927, 'FShadowFilter1', 0xce1eb, [] )
FShadowFilter2 = ShaderObjectInfo( 1928, 'FShadowFilter2', 0x5b051, [] )
FShadowFilter3 = ShaderObjectInfo( 1929, 'FShadowFilter3', 0x280c7, [] )
FShadowFilterPoint0 = ShaderObjectInfo( 1930, 'FShadowFilterPoint0', 0x5dc75, [] )
FShadowFilterPoint1 = ShaderObjectInfo( 1931, 'FShadowFilterPoint1', 0x2ece3, [] )
FShadowFilterPoint2 = ShaderObjectInfo( 1932, 'FShadowFilterPoint2', 0xbbd59, [] )
FShadowFilterPoint3 = ShaderObjectInfo( 1933, 'FShadowFilterPoint3', 0xc8dcf, [] )
FShadowFilterMulti = ShaderObjectInfo( 1934, 'FShadowFilterMulti', 0xbf5e3, [] )
FShadowFilterPointMulti = ShaderObjectInfo( 1935, 'FShadowFilterPointMulti', 0xb329d, [] )
FShadowMultipleReceiveRT = ShaderObjectInfo( 1936, 'FShadowMultipleReceiveRT', 0x56a59, [] )
FShadowMultiReceiveCascadeSSMRT = ShaderObjectInfo( 1937, 'FShadowMultiReceiveCascadeSSMRT', 0xe2c23, [] )
FShadowMultiReceiveSmoothCascadeSSMRT = ShaderObjectInfo( 1938, 'FShadowMultiReceiveSmoothCascadeSSMRT', 0xd2da3, [] )
FShadowMultiReceiveLSMRT = ShaderObjectInfo( 1939, 'FShadowMultiReceiveLSMRT', 0x682e1, [] )
FShadowMultiReceiveCascadeLSMRT = ShaderObjectInfo( 1940, 'FShadowMultiReceiveCascadeLSMRT', 0xe2c70, [] )
FShadowMultiReceiveSmoothCascadeLSMRT = ShaderObjectInfo( 1941, 'FShadowMultiReceiveSmoothCascadeLSMRT', 0xd2df0, [] )
FShadowMultiReceiveSpotVSMRT = ShaderObjectInfo( 1942, 'FShadowMultiReceiveSpotVSMRT', 0x1f5d2, [] )
FShadowMultiReceivePoint = ShaderObjectInfo( 1943, 'FShadowMultiReceivePoint', 0x20870, [] )
FLightMaskShadowMultiRT0 = ShaderObjectInfo( 1944, 'FLightMaskShadowMultiRT0', 0x6ae3d, [] )
FLightMaskShadowMultiRT1 = ShaderObjectInfo( 1945, 'FLightMaskShadowMultiRT1', 0x19eab, [] )
FLightMaskShadowMultiRT01 = ShaderObjectInfo( 1946, 'FLightMaskShadowMultiRT01', 0xd4a85, [] )
FGaussianFilterH = ShaderObjectInfo( 1947, 'FGaussianFilterH', 0xaf972, [] )
FGaussianFilterV = ShaderObjectInfo( 1948, 'FGaussianFilterV', 0x5c411, [] )
FIntensityWeight = ShaderObjectInfo( 1949, 'FIntensityWeight', 0xddf19, [] )
FIntensityWeightGrayScale = ShaderObjectInfo( 1950, 'FIntensityWeightGrayScale', 0xe0db9, [] )
FIntensityWeightRGB = ShaderObjectInfo( 1951, 'FIntensityWeightRGB', 0xcbd42, [] )
FIntensityWeightRGBA = ShaderObjectInfo( 1952, 'FIntensityWeightRGBA', 0x7dd07, [] )
FDispersionMap = ShaderObjectInfo( 1953, 'FDispersionMap', 0x9b576, [] )
FBilateralFilterH = ShaderObjectInfo( 1954, 'FBilateralFilterH', 0xfdd78, [] )
FBilateralFilterV = ShaderObjectInfo( 1955, 'FBilateralFilterV', 0xe01b, [] )
convZValue = ShaderObjectInfo( 1956, 'convZValue', 0x79aab, [] )
FClampSceneUV = ShaderObjectInfo( 1957, 'FClampSceneUV', 0x7ac11, [] )
FClampSceneUVClip = ShaderObjectInfo( 1958, 'FClampSceneUVClip', 0x9f126, [] )
FClampSceneUVSmooth = ShaderObjectInfo( 1959, 'FClampSceneUVSmooth', 0x92205, [] )
FPrimitiveSample = ShaderObjectInfo( 1960, 'FPrimitiveSample', 0x7969d, [] )
FPrimitiveSampleNoTexture = ShaderObjectInfo( 1961, 'FPrimitiveSampleNoTexture', 0x90f67, [] )
FPrimitiveSampleBaseMap = ShaderObjectInfo( 1962, 'FPrimitiveSampleBaseMap', 0x309bf, [] )
FPrimitiveSampleBaseMapParalax = ShaderObjectInfo( 1963, 'FPrimitiveSampleBaseMapParalax', 0xc5c9b, [] )
FPrimitiveSampleBaseMapLin = ShaderObjectInfo( 1964, 'FPrimitiveSampleBaseMapLin', 0x328b0, [] )
FPrimitiveSampleBaseMapParalaxLin = ShaderObjectInfo( 1965, 'FPrimitiveSampleBaseMapParalaxLin', 0x833ef, [] )
FPrimitiveSampleAlphaMap = ShaderObjectInfo( 1966, 'FPrimitiveSampleAlphaMap', 0x21006, [] )
FPrimitiveSampleAlphaMapPoint = ShaderObjectInfo( 1967, 'FPrimitiveSampleAlphaMapPoint', 0x6188f, [] )
FPrimitiveSampleAlphaMapParallaxPoint = ShaderObjectInfo( 1968, 'FPrimitiveSampleAlphaMapParallaxPoint', 0x68560, [] )
FPrimitiveSampleAlphaMapLin = ShaderObjectInfo( 1969, 'FPrimitiveSampleAlphaMapLin', 0x7351c, [] )
FPrimitiveSampleAlphaMapParallaxLin = ShaderObjectInfo( 1970, 'FPrimitiveSampleAlphaMapParallaxLin', 0x73a75, [] )
FPrimitiveOcclusionSphere = ShaderObjectInfo( 1971, 'FPrimitiveOcclusionSphere', 0x6ab1d, [] )
FPrimitiveOcclusionLensFlare = ShaderObjectInfo( 1972, 'FPrimitiveOcclusionLensFlare', 0xee836, [] )
FPrimitiveOcclusionFactor = ShaderObjectInfo( 1973, 'FPrimitiveOcclusionFactor', 0x7219a, [] )
FPrimitiveOcclusionFactorDefault = ShaderObjectInfo( 1974, 'FPrimitiveOcclusionFactorDefault', 0xeabd6, [] )
FPrimitiveOcclusionFactorOccMap = ShaderObjectInfo( 1975, 'FPrimitiveOcclusionFactorOccMap', 0x9ef69, [] )
FPrimitiveOcclusionFactorPS = ShaderObjectInfo( 1976, 'FPrimitiveOcclusionFactorPS', 0xebe13, [] )
FPrimitivePSOcclusion = ShaderObjectInfo( 1977, 'FPrimitivePSOcclusion', 0xab745, [] )
FPrimitivePSOcclusionDefault = ShaderObjectInfo( 1978, 'FPrimitivePSOcclusionDefault', 0x1ffe8, [] )
FPrimitiveColTexInfluence = ShaderObjectInfo( 1979, 'FPrimitiveColTexInfluence', 0xbdb59, [] )
FPrimitiveColTexInfluenceDefault = ShaderObjectInfo( 1980, 'FPrimitiveColTexInfluenceDefault', 0x72e14, [] )
FPrimitiveColTexInfluenceTexRGBColA = ShaderObjectInfo( 1981, 'FPrimitiveColTexInfluenceTexRGBColA', 0x5463c, [] )
FPrimitiveCalcColorInt = ShaderObjectInfo( 1982, 'FPrimitiveCalcColorInt', 0x72458, [] )
FPrimitiveCalcColorIntDefault = ShaderObjectInfo( 1983, 'FPrimitiveCalcColorIntDefault', 0x96d71, [] )
FPrimitiveCalcIntensity = ShaderObjectInfo( 1984, 'FPrimitiveCalcIntensity', 0x2a876, [] )
FPrimitiveCalcIntensityDefault = ShaderObjectInfo( 1985, 'FPrimitiveCalcIntensityDefault', 0x9da92, [] )
FPrimitiveCalcFresnel = ShaderObjectInfo( 1986, 'FPrimitiveCalcFresnel', 0x3849d, [] )
FPrimitiveCalcFresnelDefault = ShaderObjectInfo( 1987, 'FPrimitiveCalcFresnelDefault', 0x44de4, [] )
FPrimitiveSceneSampler = ShaderObjectInfo( 1988, 'FPrimitiveSceneSampler', 0x568cf, [] )
FPrimitiveSceneSamplerBlur = ShaderObjectInfo( 1989, 'FPrimitiveSceneSamplerBlur', 0x48295, [] )
FPrimitiveSceneSamplerBlurNoTex = ShaderObjectInfo( 1990, 'FPrimitiveSceneSamplerBlurNoTex', 0x56fd7, [] )
FPrimitiveSceneSamplerRefract = ShaderObjectInfo( 1991, 'FPrimitiveSceneSamplerRefract', 0xf9a81, [] )
FPrimitiveSceneSamplerRefractNoTex = ShaderObjectInfo( 1992, 'FPrimitiveSceneSamplerRefractNoTex', 0x76483, [] )
FPrimitiveSceneSamplerRefractZ = ShaderObjectInfo( 1993, 'FPrimitiveSceneSamplerRefractZ', 0x5e4c6, [] )
FPrimitiveSceneSamplerRefractZBlur = ShaderObjectInfo( 1994, 'FPrimitiveSceneSamplerRefractZBlur', 0x6d45, [] )
FPrimitiveSceneSamplerRefractZNoTex = ShaderObjectInfo( 1995, 'FPrimitiveSceneSamplerRefractZNoTex', 0x746d2, [] )
FPrimitiveSceneSamplerRefractZBlurNoTex = ShaderObjectInfo( 1996, 'FPrimitiveSceneSamplerRefractZBlurNoTex', 0x3f677, [] )
FPrimitiveSceneSamplerDistortion = ShaderObjectInfo( 1997, 'FPrimitiveSceneSamplerDistortion', 0xf09e, [] )
FPrimitiveSceneSamplerDistortionNoTex = ShaderObjectInfo( 1998, 'FPrimitiveSceneSamplerDistortionNoTex', 0x958ca, [] )
FPrimitiveToneMap = ShaderObjectInfo( 1999, 'FPrimitiveToneMap', 0x67203, [] )
FPrimitiveToneMapNone = ShaderObjectInfo( 2000, 'FPrimitiveToneMapNone', 0x537e, [] )
FPrimitiveMaskMap = ShaderObjectInfo( 2001, 'FPrimitiveMaskMap', 0x5ee6e, [] )
FPrimitiveMaskMapDefault = ShaderObjectInfo( 2002, 'FPrimitiveMaskMapDefault', 0x33a48, [] )
FPrimitiveMaskMapParallax = ShaderObjectInfo( 2003, 'FPrimitiveMaskMapParallax', 0xf46d8, [] )
FPrimitiveCalcNormalMap = ShaderObjectInfo( 2004, 'FPrimitiveCalcNormalMap', 0xd12e2, [] )
FPrimitiveCalcNormalMapDefault = ShaderObjectInfo( 2005, 'FPrimitiveCalcNormalMapDefault', 0xe7117, [] )
FPrimitiveCalcNormalMapParallax = ShaderObjectInfo( 2006, 'FPrimitiveCalcNormalMapParallax', 0x847f6, [] )
FPrimitiveCalcNormalMapMask = ShaderObjectInfo( 2007, 'FPrimitiveCalcNormalMapMask', 0xb506, [] )
FPrimitiveClip = ShaderObjectInfo( 2008, 'FPrimitiveClip', 0xfe61f, [] )
FPrimitiveClipDefault = ShaderObjectInfo( 2009, 'FPrimitiveClipDefault', 0xfd5ea, [] )
FPrimitiveVSAlphaClip = ShaderObjectInfo( 2010, 'FPrimitiveVSAlphaClip', 0xfe190, [] )
FPrimitiveVSAlphaClipDefault = ShaderObjectInfo( 2011, 'FPrimitiveVSAlphaClipDefault', 0xb0932, [] )
FPrimitiveAlphaToColor = ShaderObjectInfo( 2012, 'FPrimitiveAlphaToColor', 0xb36e, [] )
FPrimitiveAlphaToColorDefault = ShaderObjectInfo( 2013, 'FPrimitiveAlphaToColorDefault', 0xa2887, [] )
FPrimitiveUVOffset = ShaderObjectInfo( 2014, 'FPrimitiveUVOffset', 0x88784, [] )
FPrimitiveUVOffsetDefault = ShaderObjectInfo( 2015, 'FPrimitiveUVOffsetDefault', 0xd16c6, [] )
FPrimitiveModelSceneSampler = ShaderObjectInfo( 2016, 'FPrimitiveModelSceneSampler', 0xe2cac, [] )
FPrimitiveModelSceneSamplerBlur = ShaderObjectInfo( 2017, 'FPrimitiveModelSceneSamplerBlur', 0x55048, [] )
FPrimitiveModelSceneSamplerRefract = ShaderObjectInfo( 2018, 'FPrimitiveModelSceneSamplerRefract', 0xbbd9, [] )
FPrimitiveModelSceneSamplerRefractAlpha = ShaderObjectInfo( 2019, 'FPrimitiveModelSceneSamplerRefractAlpha', 0xead99, [] )
FPrimitiveModelSceneSamplerRefractDisplaceUV = ShaderObjectInfo( 2020, 'FPrimitiveModelSceneSamplerRefractDisplaceUV', 0xd633d, [] )
FPrimitiveModelSmoothAlpha = ShaderObjectInfo( 2021, 'FPrimitiveModelSmoothAlpha', 0x7c075, [] )
FPrimitiveModelSmoothAlphaDefault = ShaderObjectInfo( 2022, 'FPrimitiveModelSmoothAlphaDefault', 0xdebb2, [] )
FPrimitiveModelSmoothAlphaInverse = ShaderObjectInfo( 2023, 'FPrimitiveModelSmoothAlphaInverse', 0xa428d, [] )
FPrimitiveModelSmoothAlphaVertexNormal = ShaderObjectInfo( 2024, 'FPrimitiveModelSmoothAlphaVertexNormal', 0x70250, [] )
FPrimitiveModelSmoothAlphaVertexNormalInverse = ShaderObjectInfo( 2025, 'FPrimitiveModelSmoothAlphaVertexNormalInverse', 0x18ba1, [] )
FPrimitiveTransparency = ShaderObjectInfo( 2026, 'FPrimitiveTransparency', 0x42c02, [] )
FPrimitiveTransparencyVolume = ShaderObjectInfo( 2027, 'FPrimitiveTransparencyVolume', 0x9ff11, [] )
FPrimitiveLevelCorrection = ShaderObjectInfo( 2028, 'FPrimitiveLevelCorrection', 0x2db03, [] )
FPrimitiveLevelCorrectionLinear = ShaderObjectInfo( 2029, 'FPrimitiveLevelCorrectionLinear', 0x13cc7, [] )
FPrimitiveLevelCorrectionNeg = ShaderObjectInfo( 2030, 'FPrimitiveLevelCorrectionNeg', 0xaab69, [] )
FPrimitiveLevelCorrectionPos = ShaderObjectInfo( 2031, 'FPrimitiveLevelCorrectionPos', 0x719e4, [] )
FPrimitiveLevelCorrectionAlphaLinear = ShaderObjectInfo( 2032, 'FPrimitiveLevelCorrectionAlphaLinear', 0x4aa01, [] )
FPrimitiveLevelCorrectionAlphaNeg = ShaderObjectInfo( 2033, 'FPrimitiveLevelCorrectionAlphaNeg', 0x8442e, [] )
FPrimitiveLevelCorrectionAlphaPos = ShaderObjectInfo( 2034, 'FPrimitiveLevelCorrectionAlphaPos', 0x5f6a3, [] )
FBlendFogPrimAlpha = ShaderObjectInfo( 2035, 'FBlendFogPrimAlpha', 0x8a9f, [] )
FBlendFogPrimBlend = ShaderObjectInfo( 2036, 'FBlendFogPrimBlend', 0xdc2dd, [] )
FPrimiteveColorModifier = ShaderObjectInfo( 2037, 'FPrimiteveColorModifier', 0x9e920, [] )
FOcclusionFactorFilter = ShaderObjectInfo( 2038, 'FOcclusionFactorFilter', 0x181e9, [] )
FFOcclusionFactor = ShaderObjectInfo( 2039, 'FFOcclusionFactor', 0xcfc44, [] )
FFOcclusionFactorFromTexture = ShaderObjectInfo( 2040, 'FFOcclusionFactorFromTexture', 0xc5b36, [] )
FRadialFilterSampleColorScale = ShaderObjectInfo( 2041, 'FRadialFilterSampleColorScale', 0x602a0, [] )
FRadialFilterSampleColorScaleFade = ShaderObjectInfo( 2042, 'FRadialFilterSampleColorScaleFade', 0xbdd2c, [] )
FRadialFilterMask = ShaderObjectInfo( 2043, 'FRadialFilterMask', 0x5c42e, [] )
FRadialFilterMaskDisable = ShaderObjectInfo( 2044, 'FRadialFilterMaskDisable', 0x3fa1c, [] )
FRadialFilterAlpha = ShaderObjectInfo( 2045, 'FRadialFilterAlpha', 0x6c183, [] )
FRadialFilterAlphaColor = ShaderObjectInfo( 2046, 'FRadialFilterAlphaColor', 0x55296, [] )
FRadialBlurWidth = ShaderObjectInfo( 2047, 'FRadialBlurWidth', 0x50b1a, [] )
FRadialBlurWidthOcclusion = ShaderObjectInfo( 2048, 'FRadialBlurWidthOcclusion', 0x9ca74, [] )
FRadialBlurAlpha = ShaderObjectInfo( 2049, 'FRadialBlurAlpha', 0xf775f, [] )
FRadialBlurAlphaOcclusion = ShaderObjectInfo( 2050, 'FRadialBlurAlphaOcclusion', 0x1a5f8, [] )
VS_RadialBlurFilter = ShaderObjectInfo( 2051, 'VS_RadialBlurFilter', 0xb53a4, [] )
PS_RadialBlurFilter = ShaderObjectInfo( 2052, 'PS_RadialBlurFilter', 0x758b7, [] )
FFeedbackBlurFilter = ShaderObjectInfo( 2053, 'FFeedbackBlurFilter', 0x93155, [] )
VS_TVNoiseFilter = ShaderObjectInfo( 2054, 'VS_TVNoiseFilter', 0xb1253, [] )
PS_TVNoiseFilter = ShaderObjectInfo( 2055, 'PS_TVNoiseFilter', 0xa7bb7, [] )
FTVNoiseFilterScanLine = ShaderObjectInfo( 2056, 'FTVNoiseFilterScanLine', 0x778fa, [] )
FFishEye = ShaderObjectInfo( 2057, 'FFishEye', 0xba89d, [] )
FFilterColorCorrect = ShaderObjectInfo( 2058, 'FFilterColorCorrect', 0xb157, [] )
FFilterColorCorrectTable = ShaderObjectInfo( 2059, 'FFilterColorCorrectTable', 0xbab81, [] )
FFilterColorCorrectVolumeInterpolateHQ = ShaderObjectInfo( 2060, 'FFilterColorCorrectVolumeInterpolateHQ', 0x272fe, [] )
FFilterColorCorrectVolumeInterpolate = ShaderObjectInfo( 2061, 'FFilterColorCorrectVolumeInterpolate', 0xef754, [] )
FFilterColorCorrectVolume = ShaderObjectInfo( 2062, 'FFilterColorCorrectVolume', 0x9c764, [] )
FFilterColorCorrectVolumeSRGB = ShaderObjectInfo( 2063, 'FFilterColorCorrectVolumeSRGB', 0x31ad3, [] )
FFilterHermiteToneCurve = ShaderObjectInfo( 2064, 'FFilterHermiteToneCurve', 0x7d40d, [] )
FVarianceFilter = ShaderObjectInfo( 2065, 'FVarianceFilter', 0xd6d5b, [] )
FCubeMapVarianceFilter = ShaderObjectInfo( 2066, 'FCubeMapVarianceFilter', 0xa7887, [] )
FCubeMapVarianceFilterDir = ShaderObjectInfo( 2067, 'FCubeMapVarianceFilterDir', 0xd209e, [] )
FVarianceFilterH = ShaderObjectInfo( 2068, 'FVarianceFilterH', 0x5ecb3, [] )
FVarianceFilterV = ShaderObjectInfo( 2069, 'FVarianceFilterV', 0xad1d0, [] )
FVarianceFilterCubeDirH = ShaderObjectInfo( 2070, 'FVarianceFilterCubeDirH', 0x898b2, [] )
FVarianceFilterCubeH = ShaderObjectInfo( 2071, 'FVarianceFilterCubeH', 0xd2a8b, [] )
FVarianceFilterCubeDirV = ShaderObjectInfo( 2072, 'FVarianceFilterCubeDirV', 0x7a5d1, [] )
FVarianceFilterCubeV = ShaderObjectInfo( 2073, 'FVarianceFilterCubeV', 0x217e8, [] )
FVarianceMakeMipLevel = ShaderObjectInfo( 2074, 'FVarianceMakeMipLevel', 0x753ad, [] )
FVarianceMakeMipLevelCube = ShaderObjectInfo( 2075, 'FVarianceMakeMipLevelCube', 0x10536, [] )
VS_VarianceFilter = ShaderObjectInfo( 2076, 'VS_VarianceFilter', 0x32036, [] )
PS_VarianceFilter = ShaderObjectInfo( 2077, 'PS_VarianceFilter', 0x7973e, [] )
VS_CubeMapVarianceFilter = ShaderObjectInfo( 2078, 'VS_CubeMapVarianceFilter', 0x97a5f, [] )
PS_CubeMapVarianceFilter = ShaderObjectInfo( 2079, 'PS_CubeMapVarianceFilter', 0x4280f, [] )
FDepthToVariance = ShaderObjectInfo( 2080, 'FDepthToVariance', 0x3d2c2, [] )
PS_BloomFinalOut = ShaderObjectInfo( 2081, 'PS_BloomFinalOut', 0x59b2c, [] )
PS_BloomExtraction = ShaderObjectInfo( 2082, 'PS_BloomExtraction', 0xf392c, [] )
PS_BloomExtractionCTR = ShaderObjectInfo( 2083, 'PS_BloomExtractionCTR', 0x417bf, [] )
PS_BloomDownSample4 = ShaderObjectInfo( 2084, 'PS_BloomDownSample4', 0x7f59b, [] )
VS_BloomConeBlur = ShaderObjectInfo( 2085, 'VS_BloomConeBlur', 0x1ead7, [] )
VS_BloomGaussBlur = ShaderObjectInfo( 2086, 'VS_BloomGaussBlur', 0xbbb02, [] )
PS_BloomGaussBlur = ShaderObjectInfo( 2087, 'PS_BloomGaussBlur', 0xf0c0a, [] )
PS_BloomConeBlur = ShaderObjectInfo( 2088, 'PS_BloomConeBlur', 0x8333, [] )
PS_BloomGather = ShaderObjectInfo( 2089, 'PS_BloomGather', 0x80078, [] )
FBaseLightScattering = ShaderObjectInfo( 2090, 'FBaseLightScattering', 0x479, [] )
FFogLightScattering = ShaderObjectInfo( 2091, 'FFogLightScattering', 0xf00a1, [] )
FFogVTFLightScattering = ShaderObjectInfo( 2092, 'FFogVTFLightScattering', 0xc3647, [] )
FFilterLightScatteringMul = ShaderObjectInfo( 2093, 'FFilterLightScatteringMul', 0xb6750, [] )
FFilterLightScatteringMulRC = ShaderObjectInfo( 2094, 'FFilterLightScatteringMulRC', 0x5db48, [] )
FFilterLightScatteringAdd = ShaderObjectInfo( 2095, 'FFilterLightScatteringAdd', 0x33516, [] )
FFilterLightScattering = ShaderObjectInfo( 2096, 'FFilterLightScattering', 0x78aad, [] )
FImageBlend = ShaderObjectInfo( 2097, 'FImageBlend', 0x132b0, [] )
FImageBlendScreen = ShaderObjectInfo( 2098, 'FImageBlendScreen', 0x525d5, [] )
FImageBlendOverlay = ShaderObjectInfo( 2099, 'FImageBlendOverlay', 0x1cc80, [] )
FImageBlendSoftLight = ShaderObjectInfo( 2100, 'FImageBlendSoftLight', 0x112bf, [] )
FImageBlendHardLight = ShaderObjectInfo( 2101, 'FImageBlendHardLight', 0x96667, [] )
FImageBlendDodge = ShaderObjectInfo( 2102, 'FImageBlendDodge', 0xa6763, [] )
FImageBlendBurn = ShaderObjectInfo( 2103, 'FImageBlendBurn', 0xda258, [] )
FImageBlendDarken = ShaderObjectInfo( 2104, 'FImageBlendDarken', 0x8699c, [] )
FImageBlendLighten = ShaderObjectInfo( 2105, 'FImageBlendLighten', 0x730c3, [] )
FImageBlendDifference = ShaderObjectInfo( 2106, 'FImageBlendDifference', 0x4f6e6, [] )
FImageBlendExclusion = ShaderObjectInfo( 2107, 'FImageBlendExclusion', 0x919c, [] )
VS_ImagePlaneFilter = ShaderObjectInfo( 2108, 'VS_ImagePlaneFilter', 0x23413, [] )
PS_ImagePlaneFilterBase = ShaderObjectInfo( 2109, 'PS_ImagePlaneFilterBase', 0x9cce6, [] )
PS_ImagePlaneFilterCube = ShaderObjectInfo( 2110, 'PS_ImagePlaneFilterCube', 0x3833f, [] )
PS_ImagePlaneFilterBaseEx = ShaderObjectInfo( 2111, 'PS_ImagePlaneFilterBaseEx', 0x64c46, [] )
PS_ImagePlaneFilterCubeEx = ShaderObjectInfo( 2112, 'PS_ImagePlaneFilterCubeEx', 0xf9e5b, [] )
FFilterHaze = ShaderObjectInfo( 2113, 'FFilterHaze', 0x46443, [] )
FFilterHazeInverse = ShaderObjectInfo( 2114, 'FFilterHazeInverse', 0x834ff, [] )
FFilterHazeDepth = ShaderObjectInfo( 2115, 'FFilterHazeDepth', 0x19665, [] )
FToneMapLinear = ShaderObjectInfo( 2116, 'FToneMapLinear', 0x26e93, [] )
FToneMapExposure = ShaderObjectInfo( 2117, 'FToneMapExposure', 0x2304d, [] )
FToneMapExposureEx = ShaderObjectInfo( 2118, 'FToneMapExposureEx', 0xec1c8, [] )
FToneMapReinHard = ShaderObjectInfo( 2119, 'FToneMapReinHard', 0xecb08, [] )
VS_AvgLogInit = ShaderObjectInfo( 2120, 'VS_AvgLogInit', 0x11225, [] )
VS_AvgLog16 = ShaderObjectInfo( 2121, 'VS_AvgLog16', 0xcef8b, [] )
PS_AvgLog16 = ShaderObjectInfo( 2122, 'PS_AvgLog16', 0x925c8, [] )
PS_AvgLogFinal = ShaderObjectInfo( 2123, 'PS_AvgLogFinal', 0x85c69, [] )
PS_AvgLogInit = ShaderObjectInfo( 2124, 'PS_AvgLogInit', 0x4cdf8, [] )
PS_AverageCount = ShaderObjectInfo( 2125, 'PS_AverageCount', 0xc83bc, [] )
FFilterColorFog = ShaderObjectInfo( 2126, 'FFilterColorFog', 0x2d7b0, [] )
FFilterColorFogHeight = ShaderObjectInfo( 2127, 'FFilterColorFogHeight', 0xd1bd3, [] )
VS_CubicBlur = ShaderObjectInfo( 2128, 'VS_CubicBlur', 0x33138, [] )
PS_CubicBlur = ShaderObjectInfo( 2129, 'PS_CubicBlur', 0xe94d8, [] )
VS_CubicBlend = ShaderObjectInfo( 2130, 'VS_CubicBlend', 0xb0c3, [] )
PS_CubicBlend = ShaderObjectInfo( 2131, 'PS_CubicBlend', 0x56f1e, [] )
FDOFFilterDownScale = ShaderObjectInfo( 2132, 'FDOFFilterDownScale', 0xc4beb, [] )
correctDepthSub = ShaderObjectInfo( 2133, 'correctDepthSub', 0x60f70, [] )
FDOFFilterPoisson = ShaderObjectInfo( 2134, 'FDOFFilterPoisson', 0xcaad8, [] )
FDOFFilterLight = ShaderObjectInfo( 2135, 'FDOFFilterLight', 0x42759, [] )
FDOFFilterLight2 = ShaderObjectInfo( 2136, 'FDOFFilterLight2', 0xffcf7, [] )
FGSDOFCopy = ShaderObjectInfo( 2137, 'FGSDOFCopy', 0xef51f, [] )
VS_GSDOFFilter = ShaderObjectInfo( 2138, 'VS_GSDOFFilter', 0x9077, [] )
GS_GSDOFFilter = ShaderObjectInfo( 2139, 'GS_GSDOFFilter', 0xd4d6d, [] )
PS_GSDOFFilter = ShaderObjectInfo( 2140, 'PS_GSDOFFilter', 0x2dbc1, [] )
FSSAOFilterDepthDownScale = ShaderObjectInfo( 2141, 'FSSAOFilterDepthDownScale', 0x138d6, [] )
FSSAOFilterLinearDepthDownScale = ShaderObjectInfo( 2142, 'FSSAOFilterLinearDepthDownScale', 0xd8e2d, [] )
FSSAOFilterMakeLinearDepth = ShaderObjectInfo( 2143, 'FSSAOFilterMakeLinearDepth', 0x5c230, [] )
VS_SSAOMakeNormal = ShaderObjectInfo( 2144, 'VS_SSAOMakeNormal', 0x7b79c, [] )
PS_SSAOMakeNormal = ShaderObjectInfo( 2145, 'PS_SSAOMakeNormal', 0x30094, [] )
VS_SSAOMakeOcclusionMap = ShaderObjectInfo( 2146, 'VS_SSAOMakeOcclusionMap', 0x319f5, [] )
FSSAOBounce = ShaderObjectInfo( 2147, 'FSSAOBounce', 0xf4a68, [] )
FSSAOBounceDisable = ShaderObjectInfo( 2148, 'FSSAOBounceDisable', 0x961b8, [] )
getIntensityBothFaces = ShaderObjectInfo( 2149, 'getIntensityBothFaces', 0x99f62, [] )
getIntensitySingleFace = ShaderObjectInfo( 2150, 'getIntensitySingleFace', 0x1b77b, [] )
FSSAOIntensityDisable = ShaderObjectInfo( 2151, 'FSSAOIntensityDisable', 0x512bf, [] )
getBiasedViewPosition = ShaderObjectInfo( 2152, 'getBiasedViewPosition', 0x21f, [] )
getOccluderMatrix = ShaderObjectInfo( 2153, 'getOccluderMatrix', 0x7913a, [] )
getScaleOffset = ShaderObjectInfo( 2154, 'getScaleOffset', 0xe5955, [] )
PS_SSAOMakeOcclusionMap = ShaderObjectInfo( 2155, 'PS_SSAOMakeOcclusionMap', 0x96b8f, [] )
PS_SSAOMakeSingleFaceOcclusionMap = ShaderObjectInfo( 2156, 'PS_SSAOMakeSingleFaceOcclusionMap', 0x939c1, [] )
FSSAOApplyAmbientOcclusion = ShaderObjectInfo( 2157, 'FSSAOApplyAmbientOcclusion', 0x7cb3d, [] )
FSSAOApplyIndirectBounce = ShaderObjectInfo( 2158, 'FSSAOApplyIndirectBounce', 0xaf755, [] )
FBokehAlpha = ShaderObjectInfo( 2159, 'FBokehAlpha', 0xbb7bc, [] )
FBokehCompressFactor = ShaderObjectInfo( 2160, 'FBokehCompressFactor', 0xc22fb, [] )
FBokehCompressRangeFactor = ShaderObjectInfo( 2161, 'FBokehCompressRangeFactor', 0x85631, [] )
FBokehBleeding = ShaderObjectInfo( 2162, 'FBokehBleeding', 0x7b7ee, [] )
FBokehAntiBleeding = ShaderObjectInfo( 2163, 'FBokehAntiBleeding', 0x91bf3, [] )
FBokehMask = ShaderObjectInfo( 2164, 'FBokehMask', 0xd7090, [] )
FBokehMaskDither = ShaderObjectInfo( 2165, 'FBokehMaskDither', 0x23b63, [] )
FBokehReductionBlend = ShaderObjectInfo( 2166, 'FBokehReductionBlend', 0x4e727, [] )
FBokehNearCopy = ShaderObjectInfo( 2167, 'FBokehNearCopy', 0x7077f, [] )
FBokehInflateMask = ShaderObjectInfo( 2168, 'FBokehInflateMask', 0x253fc, [] )
FBokehMaskValue = ShaderObjectInfo( 2169, 'FBokehMaskValue', 0x1282f, [] )
FBokehInverseMaskValue = ShaderObjectInfo( 2170, 'FBokehInverseMaskValue', 0x56a09, [] )
FBokehAntiBleedingMaskValue = ShaderObjectInfo( 2171, 'FBokehAntiBleedingMaskValue', 0x89867, [] )
FBokehAntiBleedingInverseMaskValue = ShaderObjectInfo( 2172, 'FBokehAntiBleedingInverseMaskValue', 0x68972, [] )
FBokehCalculation = ShaderObjectInfo( 2173, 'FBokehCalculation', 0x1196d, [] )
FBokehDefaultFarZ = ShaderObjectInfo( 2174, 'FBokehDefaultFarZ', 0x3c0be, [] )
FBokehReductionFarZ = ShaderObjectInfo( 2175, 'FBokehReductionFarZ', 0x70a6c, [] )
FBokehFarFilter = ShaderObjectInfo( 2176, 'FBokehFarFilter', 0xe397a, [] )
FBokehNearFilter = ShaderObjectInfo( 2177, 'FBokehNearFilter', 0x8ba48, [] )
FFilterEdgeAntiAliasingGetDepth = ShaderObjectInfo( 2178, 'FFilterEdgeAntiAliasingGetDepth', 0xc717, [] )
FFilterEdgeAntiAliasingGetEdgeWeight = ShaderObjectInfo( 2179, 'FFilterEdgeAntiAliasingGetEdgeWeight', 0x2e65a, [] )
FFilterEdgeAntiAliasingGetEdgeWeightFast = ShaderObjectInfo( 2180, 'FFilterEdgeAntiAliasingGetEdgeWeightFast', 0x466d3, [] )
FFilterEdgeAntiAliasing = ShaderObjectInfo( 2181, 'FFilterEdgeAntiAliasing', 0xf07a0, [] )
FFilterEdgeAntiAliasingDynamicBranch = ShaderObjectInfo( 2182, 'FFilterEdgeAntiAliasingDynamicBranch', 0x7ca01, [] )
FFilterEdgeAntiAliasingOutputWeight = ShaderObjectInfo( 2183, 'FFilterEdgeAntiAliasingOutputWeight', 0xd0799, [] )
FFilterGodRaysAlpha = ShaderObjectInfo( 2184, 'FFilterGodRaysAlpha', 0xf5d2c, [] )
FFilterGodRaysAlphaOcclusion = ShaderObjectInfo( 2185, 'FFilterGodRaysAlphaOcclusion', 0x45115, [] )
FFilterGodRaysScale = ShaderObjectInfo( 2186, 'FFilterGodRaysScale', 0x941c2, [] )
FFilterGodRaysScaleOcclusion = ShaderObjectInfo( 2187, 'FFilterGodRaysScaleOcclusion', 0x70e8a, [] )
FFilterGodRaysSourceColor = ShaderObjectInfo( 2188, 'FFilterGodRaysSourceColor', 0xe82aa, [] )
FFilterGodRaysSourceGrayColor = ShaderObjectInfo( 2189, 'FFilterGodRaysSourceGrayColor', 0xcec1a, [] )
FFilterGodRaysThreshold = ShaderObjectInfo( 2190, 'FFilterGodRaysThreshold', 0xe79be, [] )
FFilterGodRaysThresholdWithZ = ShaderObjectInfo( 2191, 'FFilterGodRaysThresholdWithZ', 0x27aa0, [] )
FFilterGodRaysThreshold3DBoundMaskWeightZero = ShaderObjectInfo( 2192, 'FFilterGodRaysThreshold3DBoundMaskWeightZero', 0x12ced, [] )
FFilterGodRaysThreshold3DBound = ShaderObjectInfo( 2193, 'FFilterGodRaysThreshold3DBound', 0xa5c8d, [] )
FGodRaysDirection = ShaderObjectInfo( 2194, 'FGodRaysDirection', 0xe373, [] )
FFilterGodRaysIteratorSC = ShaderObjectInfo( 2195, 'FFilterGodRaysIteratorSC', 0x966ca, [] )
FFilterGodRaysBlend = ShaderObjectInfo( 2196, 'FFilterGodRaysBlend', 0x2156e, [] )
FFilterGodRaysP2O = ShaderObjectInfo( 2197, 'FFilterGodRaysP2O', 0x39a90, [] )
FFilterGodRaysO2P = ShaderObjectInfo( 2198, 'FFilterGodRaysO2P', 0x17328, [] )
FFilterGodRaysBegin = ShaderObjectInfo( 2199, 'FFilterGodRaysBegin', 0xaf153, [] )
FFilterGodRays16SamplesIterator = ShaderObjectInfo( 2200, 'FFilterGodRays16SamplesIterator', 0xc38f8, [] )
FFilterGodRays8SamplesIterator = ShaderObjectInfo( 2201, 'FFilterGodRays8SamplesIterator', 0xab85d, [] )
FFilterGodRaysCopy = ShaderObjectInfo( 2202, 'FFilterGodRaysCopy', 0x936e8, [] )
FFilterGodRaysGammaCopy = ShaderObjectInfo( 2203, 'FFilterGodRaysGammaCopy', 0xbaf32, [] )
FBlurDistanceMask = ShaderObjectInfo( 2204, 'FBlurDistanceMask', 0xddef1, [] )
FBlurDistanceMaskEnable = ShaderObjectInfo( 2205, 'FBlurDistanceMaskEnable', 0xd182c, [] )
FBlurAlphaMask = ShaderObjectInfo( 2206, 'FBlurAlphaMask', 0x68641, [] )
FBlurAlphaMaskEnable = ShaderObjectInfo( 2207, 'FBlurAlphaMaskEnable', 0x7dc90, [] )
FBlurMaskFilter = ShaderObjectInfo( 2208, 'FBlurMaskFilter', 0xc72ab, [] )
FBlurMaskCopyColor = ShaderObjectInfo( 2209, 'FBlurMaskCopyColor', 0x3cf24, [] )
FCAFishEye = ShaderObjectInfo( 2210, 'FCAFishEye', 0xd5ebe, [] )
FCANormalMap = ShaderObjectInfo( 2211, 'FCANormalMap', 0x3acfb, [] )
FChromaticAberrationFilter = ShaderObjectInfo( 2212, 'FChromaticAberrationFilter', 0x3db34, [] )
FChromaticAberrationFilterHQ = ShaderObjectInfo( 2213, 'FChromaticAberrationFilterHQ', 0x7dcc7, [] )
FChromaticAberrationFilterDownSample = ShaderObjectInfo( 2214, 'FChromaticAberrationFilterDownSample', 0x1847f, [] )
VS_TangentFilter = ShaderObjectInfo( 2215, 'VS_TangentFilter', 0x2426f, [] )
PS_TangentFilter_Blur4 = ShaderObjectInfo( 2216, 'PS_TangentFilter_Blur4', 0x6d720, [] )
PS_TangentFilter_Blur8 = ShaderObjectInfo( 2217, 'PS_TangentFilter_Blur8', 0x9b0b, [] )
FTangentModifier = ShaderObjectInfo( 2218, 'FTangentModifier', 0xa6f71, [] )
NullLightTexture = ShaderObjectInfo( 2219, 'NullLightTexture', 0xfb7fe, [] )
SpotLightTexture = ShaderObjectInfo( 2220, 'SpotLightTexture', 0x25de, [] )
PointLightTexture = ShaderObjectInfo( 2221, 'PointLightTexture', 0x69cc2, [] )
SpotPointLightTexture = ShaderObjectInfo( 2222, 'SpotPointLightTexture', 0x7618e, [] )
FBruteForceLighting = ShaderObjectInfo( 2223, 'FBruteForceLighting', 0xb2191, [] )
FBruteForceLightingNullLightTexture = ShaderObjectInfo( 2224, 'FBruteForceLightingNullLightTexture', 0x4d71a, [] )
FBruteForceApproximateLighting = ShaderObjectInfo( 2225, 'FBruteForceApproximateLighting', 0x7a5b5, [] )
calcScreenZtoViewDepth = ShaderObjectInfo( 2226, 'calcScreenZtoViewDepth', 0x91a61, [] )
calcScreenUVtoViewDepth = ShaderObjectInfo( 2227, 'calcScreenUVtoViewDepth', 0xc8da1, [] )
calcFog = ShaderObjectInfo( 2228, 'calcFog', 0x1a46, [] )
FPrimitiveCalcTexCoord = ShaderObjectInfo( 2229, 'FPrimitiveCalcTexCoord', 0xc3985, [] )
FPrimitiveCalcTexCoordNormalize = ShaderObjectInfo( 2230, 'FPrimitiveCalcTexCoordNormalize', 0x6484a, [] )
FPrimitiveCalcTexCoordTexel = ShaderObjectInfo( 2231, 'FPrimitiveCalcTexCoordTexel', 0x3d89b, [] )
calcZOffset = ShaderObjectInfo( 2232, 'calcZOffset', 0x9dc30, [] )
FPrimitiveCalcPos = ShaderObjectInfo( 2233, 'FPrimitiveCalcPos', 0xaf198, [] )
FPrimitiveCalcPosParticle = ShaderObjectInfo( 2234, 'FPrimitiveCalcPosParticle', 0xb636f, [] )
FPrimitiveCalcPosParticleNT = ShaderObjectInfo( 2235, 'FPrimitiveCalcPosParticleNT', 0x26087, [] )
FPrimitiveCalcPosPolyline = ShaderObjectInfo( 2236, 'FPrimitiveCalcPosPolyline', 0x7a80e, [] )
FPrimitiveCalcPosCloudBillboard = ShaderObjectInfo( 2237, 'FPrimitiveCalcPosCloudBillboard', 0x6faa7, [] )
FPrimitiveCalcPosCloud = ShaderObjectInfo( 2238, 'FPrimitiveCalcPosCloud', 0x5a1db, [] )
FPrimitiveCalcDepthBlend = ShaderObjectInfo( 2239, 'FPrimitiveCalcDepthBlend', 0xfb0c5, [] )
FPrimitiveCalcDepthBlendDefault = ShaderObjectInfo( 2240, 'FPrimitiveCalcDepthBlendDefault', 0xfec75, [] )
FPrimitiveCalcVolumeBlend = ShaderObjectInfo( 2241, 'FPrimitiveCalcVolumeBlend', 0x1835b, [] )
FPrimitiveCalcVolumeBlendDefault = ShaderObjectInfo( 2242, 'FPrimitiveCalcVolumeBlendDefault', 0x46b62, [] )
FPrimitiveCalcVolumeBlendPS = ShaderObjectInfo( 2243, 'FPrimitiveCalcVolumeBlendPS', 0x7705e, [] )
FPrimitiveCalcVolumeBlendPSVolume = ShaderObjectInfo( 2244, 'FPrimitiveCalcVolumeBlendPSVolume', 0xb7e4f, [] )
FPrimitiveCalcVolumeBlendPSInvVolume = ShaderObjectInfo( 2245, 'FPrimitiveCalcVolumeBlendPSInvVolume', 0xf1900, [] )
FPrimitiveCalcVolumeBlendPSDepthVolume = ShaderObjectInfo( 2246, 'FPrimitiveCalcVolumeBlendPSDepthVolume', 0x1a020, [] )
FPrimitiveCalcPosVolumeBlendDepthVolume = ShaderObjectInfo( 2247, 'FPrimitiveCalcPosVolumeBlendDepthVolume', 0xa939d, [] )
FPrimitiveCalcPosVolumeBlendDepthVolumeDefault = ShaderObjectInfo( 2248, 'FPrimitiveCalcPosVolumeBlendDepthVolumeDefault', 0x37b44, [] )
FPrimitiveCalcFog = ShaderObjectInfo( 2249, 'FPrimitiveCalcFog', 0xbfa27, [] )
FPrimitiveCalcFogColor = ShaderObjectInfo( 2250, 'FPrimitiveCalcFogColor', 0xc87c7, [] )
FPrimitiveCalcFogAlpha = ShaderObjectInfo( 2251, 'FPrimitiveCalcFogAlpha', 0xaf644, [] )
FPrimitiveCalcFogBlend = ShaderObjectInfo( 2252, 'FPrimitiveCalcFogBlend', 0x7be06, [] )
FPrimitiveCalcFogPS = ShaderObjectInfo( 2253, 'FPrimitiveCalcFogPS', 0x47e36, [] )
FPrimitiveCalcFogPSDefault = ShaderObjectInfo( 2254, 'FPrimitiveCalcFogPSDefault', 0x8a2bb, [] )
FPrimitiveCalcShade = ShaderObjectInfo( 2255, 'FPrimitiveCalcShade', 0xe44a1, [] )
FPrimitiveCalcShadeColor = ShaderObjectInfo( 2256, 'FPrimitiveCalcShadeColor', 0x84a67, [] )
FPrimitiveCalcShadeColorRatio = ShaderObjectInfo( 2257, 'FPrimitiveCalcShadeColorRatio', 0xaf54f, [] )
FPrimitiveCalcEye = ShaderObjectInfo( 2258, 'FPrimitiveCalcEye', 0xb9085, [] )
FPrimitiveCalcEyeDefault = ShaderObjectInfo( 2259, 'FPrimitiveCalcEyeDefault', 0x363d2, [] )
FPrimitiveCalcNTB = ShaderObjectInfo( 2260, 'FPrimitiveCalcNTB', 0xe90e0, [] )
FPrimitiveCalcNTBPolygon = ShaderObjectInfo( 2261, 'FPrimitiveCalcNTBPolygon', 0x4b753, [] )
FPrimitiveCalcNTBParticle = ShaderObjectInfo( 2262, 'FPrimitiveCalcNTBParticle', 0x221fc, [] )
FPrimitiveCalcNTBPolyline = ShaderObjectInfo( 2263, 'FPrimitiveCalcNTBPolyline', 0xeea9d, [] )
FPrimitiveCalcNTBTessParticle = ShaderObjectInfo( 2264, 'FPrimitiveCalcNTBTessParticle', 0xc887d, [] )
FPrimitiveCalcDiffuse = ShaderObjectInfo( 2265, 'FPrimitiveCalcDiffuse', 0xdfb73, [] )
FPrimitiveCalcDiffuseNormalMap = ShaderObjectInfo( 2266, 'FPrimitiveCalcDiffuseNormalMap', 0x8c0f6, [] )
FPrimitiveUVClamp = ShaderObjectInfo( 2267, 'FPrimitiveUVClamp', 0xf7b65, [] )
FPrimitiveUVClampDefault = ShaderObjectInfo( 2268, 'FPrimitiveUVClampDefault', 0x5c0a8, [] )
FPrimitiveParallax = ShaderObjectInfo( 2269, 'FPrimitiveParallax', 0x55759, [] )
FPrimitiveParallaxDefault = ShaderObjectInfo( 2270, 'FPrimitiveParallaxDefault', 0x5e445, [] )
FPrimitiveParallaxScale = ShaderObjectInfo( 2271, 'FPrimitiveParallaxScale', 0x68129, [] )
FPrimitiveParallaxScaleDefault = ShaderObjectInfo( 2272, 'FPrimitiveParallaxScaleDefault', 0x516ac, [] )
FPrimitiveCalcSpecular = ShaderObjectInfo( 2273, 'FPrimitiveCalcSpecular', 0xf40d5, [] )
FPrimitiveCalcSpecularDefault = ShaderObjectInfo( 2274, 'FPrimitiveCalcSpecularDefault', 0xb268c, [] )
FPrimitiveDepthComparison = ShaderObjectInfo( 2275, 'FPrimitiveDepthComparison', 0xd7d26, [] )
FPrimitiveDepthComparisonEnable = ShaderObjectInfo( 2276, 'FPrimitiveDepthComparisonEnable', 0x25c07, [] )
FPrimitiveCloudEnv = ShaderObjectInfo( 2277, 'FPrimitiveCloudEnv', 0x6441e, [] )
FPrimitiveCloudEnvDefault = ShaderObjectInfo( 2278, 'FPrimitiveCloudEnvDefault', 0xd65b3, [] )
FPrimitiveCloudColor = ShaderObjectInfo( 2279, 'FPrimitiveCloudColor', 0x3936b, [] )
FPrimitiveCloudColorDefault = ShaderObjectInfo( 2280, 'FPrimitiveCloudColorDefault', 0xe3689, [] )
FPrimitiveTessellate = ShaderObjectInfo( 2281, 'FPrimitiveTessellate', 0x3b76f, [] )
FPrimitiveTessellateParticle = ShaderObjectInfo( 2282, 'FPrimitiveTessellateParticle', 0xe2a78, [] )
VS_Primitive = ShaderObjectInfo( 2283, 'VS_Primitive', 0x8fb4a, [] )
PS_Primitive = ShaderObjectInfo( 2284, 'PS_Primitive', 0x55eaa, [] )
VS_CloudPrimitive = ShaderObjectInfo( 2285, 'VS_CloudPrimitive', 0xa5d61, [] )
PS_CloudPrimitive = ShaderObjectInfo( 2286, 'PS_CloudPrimitive', 0xeea69, [] )
VS_PrimitiveTessellate = ShaderObjectInfo( 2287, 'VS_PrimitiveTessellate', 0x6352b, [] )
PrimitiveConstHS = ShaderObjectInfo( 2288, 'PrimitiveConstHS', 0x8092, [] )
HS_PrimitiveTessellate = ShaderObjectInfo( 2289, 'HS_PrimitiveTessellate', 0x303ea, [] )
DS_PrimitiveTessellate = ShaderObjectInfo( 2290, 'DS_PrimitiveTessellate', 0x1b6ea, [] )
PS_PrimitiveTessellate = ShaderObjectInfo( 2291, 'PS_PrimitiveTessellate', 0x76fab, [] )
calcZOffset2D = ShaderObjectInfo( 2292, 'calcZOffset2D', 0x2966d, [] )
FPrimitive2DVirtualScreen = ShaderObjectInfo( 2293, 'FPrimitive2DVirtualScreen', 0xb43ba, [] )
FPrimitive2DVirtualScreenFullScreen = ShaderObjectInfo( 2294, 'FPrimitive2DVirtualScreenFullScreen', 0xf9955, [] )
FPrimitive2DVirtualScreenPanScan = ShaderObjectInfo( 2295, 'FPrimitive2DVirtualScreenPanScan', 0xbce5d, [] )
FPrimitive2DVirtualScreenLetterBox = ShaderObjectInfo( 2296, 'FPrimitive2DVirtualScreenLetterBox', 0x3b57, [] )
FPrimitive2DCalcPos = ShaderObjectInfo( 2297, 'FPrimitive2DCalcPos', 0x45c10, [] )
FPrimitive2DCalcPosPolyline = ShaderObjectInfo( 2298, 'FPrimitive2DCalcPosPolyline', 0xbd7c0, [] )
FPrimitive2DCalcPosSprite = ShaderObjectInfo( 2299, 'FPrimitive2DCalcPosSprite', 0x68286, [] )
FPrimitive2DCalcPosLensFlare = ShaderObjectInfo( 2300, 'FPrimitive2DCalcPosLensFlare', 0xe976e, [] )
FPrimitive2DCalcTexCoord = ShaderObjectInfo( 2301, 'FPrimitive2DCalcTexCoord', 0x17a6e, [] )
FPrimitive2DCalcTexCoordNormalize = ShaderObjectInfo( 2302, 'FPrimitive2DCalcTexCoordNormalize', 0x50df8, [] )
FPrimitive2DCalcTexCoordTexel = ShaderObjectInfo( 2303, 'FPrimitive2DCalcTexCoordTexel', 0x75ca, [] )
FPrimitive2DLensFlareIntensity = ShaderObjectInfo( 2304, 'FPrimitive2DLensFlareIntensity', 0x4da3f, [] )
FPrimitive2DLensFlareIntensityDefault = ShaderObjectInfo( 2305, 'FPrimitive2DLensFlareIntensityDefault', 0xc7d28, [] )
VS_Primitive2D = ShaderObjectInfo( 2306, 'VS_Primitive2D', 0x8e66b, [] )
PS_Primitive2D = ShaderObjectInfo( 2307, 'PS_Primitive2D', 0xaaddd, [] )
FWaterWPosProt = ShaderObjectInfo( 2308, 'FWaterWPosProt', 0x26b0e, [] )
FWaterWPosProtFromModel = ShaderObjectInfo( 2309, 'FWaterWPosProtFromModel', 0x705c4, [] )
FWaterUnitProt = ShaderObjectInfo( 2310, 'FWaterUnitProt', 0x28d71, [] )
FWaterUnitProtFromModel = ShaderObjectInfo( 2311, 'FWaterUnitProtFromModel', 0x65879, [] )
calcWavePhase = ShaderObjectInfo( 2312, 'calcWavePhase', 0x66db6, [] )
calcWaveHeight = ShaderObjectInfo( 2313, 'calcWaveHeight', 0x14cb8, [] )
calcWavePlane = ShaderObjectInfo( 2314, 'calcWavePlane', 0x896fd, [] )
FWaterDetailCoodinate = ShaderObjectInfo( 2315, 'FWaterDetailCoodinate', 0x5cff6, [] )
FWaterDetailWorldCoodinate = ShaderObjectInfo( 2316, 'FWaterDetailWorldCoodinate', 0xf0914, [] )
FWaterDetailTextureCoodinate = ShaderObjectInfo( 2317, 'FWaterDetailTextureCoodinate', 0xf1c5e, [] )
FWaterRipple = ShaderObjectInfo( 2318, 'FWaterRipple', 0xdb41d, [] )
FWaterRippleFrustum = ShaderObjectInfo( 2319, 'FWaterRippleFrustum', 0xf1bdd, [] )
FWaterRippleDisable = ShaderObjectInfo( 2320, 'FWaterRippleDisable', 0x16cf0, [] )
FWaterNormal = ShaderObjectInfo( 2321, 'FWaterNormal', 0xcbd1c, [] )
FWaterDetailNormal = ShaderObjectInfo( 2322, 'FWaterDetailNormal', 0xaa047, [] )
FWaterDetailNormalMulti = ShaderObjectInfo( 2323, 'FWaterDetailNormalMulti', 0xf46e8, [] )
calcFluctuation = ShaderObjectInfo( 2324, 'calcFluctuation', 0xbcf4, [] )
FWaterCaustics = ShaderObjectInfo( 2325, 'FWaterCaustics', 0x87593, [] )
FWaterCausticsDisable = ShaderObjectInfo( 2326, 'FWaterCausticsDisable', 0x9c693, [] )
FWaterCausticsFilter = ShaderObjectInfo( 2327, 'FWaterCausticsFilter', 0xa3ee5, [] )
FWaterReflection = ShaderObjectInfo( 2328, 'FWaterReflection', 0xb3aef, [] )
FWaterReflectionEnvironmentMap = ShaderObjectInfo( 2329, 'FWaterReflectionEnvironmentMap', 0x6400a, [] )
FWaterRefraction = ShaderObjectInfo( 2330, 'FWaterRefraction', 0xb9f6a, [] )
FWaterRefractionScene = ShaderObjectInfo( 2331, 'FWaterRefractionScene', 0x3bf19, [] )
FWaterRefractionOcean = ShaderObjectInfo( 2332, 'FWaterRefractionOcean', 0x900dd, [] )
FWaterBubbleCoordinate = ShaderObjectInfo( 2333, 'FWaterBubbleCoordinate', 0xe27fc, [] )
FWaterBubbleWorldCoordinate = ShaderObjectInfo( 2334, 'FWaterBubbleWorldCoordinate', 0x54b8e, [] )
FWaterBubbleTextureCoordinate = ShaderObjectInfo( 2335, 'FWaterBubbleTextureCoordinate', 0x16553, [] )
getBubbleColor = ShaderObjectInfo( 2336, 'getBubbleColor', 0x1b889, [] )
FWaterBubbleMask = ShaderObjectInfo( 2337, 'FWaterBubbleMask', 0x267f8, [] )
FWaterBubbleMapMask = ShaderObjectInfo( 2338, 'FWaterBubbleMapMask', 0xe76a0, [] )
FWaterBubble = ShaderObjectInfo( 2339, 'FWaterBubble', 0x9240f, [] )
FWaterBubbleNormal = ShaderObjectInfo( 2340, 'FWaterBubbleNormal', 0x447b1, [] )
FWaterBubbleDepth = ShaderObjectInfo( 2341, 'FWaterBubbleDepth', 0x9a4c2, [] )
FWaterBubbleHeight = ShaderObjectInfo( 2342, 'FWaterBubbleHeight', 0xcca5a, [] )
FWaterShadow = ShaderObjectInfo( 2343, 'FWaterShadow', 0xf57d5, [] )
FWaterShadowDisable = ShaderObjectInfo( 2344, 'FWaterShadowDisable', 0xcc910, [] )
FWaterVolumeBlend = ShaderObjectInfo( 2345, 'FWaterVolumeBlend', 0xf87ff, [] )
FWaterVolumeBlendDisable = ShaderObjectInfo( 2346, 'FWaterVolumeBlendDisable', 0xd5386, [] )
FWaterTransform = ShaderObjectInfo( 2347, 'FWaterTransform', 0x7f3e5, [] )
WaterWindEffect = ShaderObjectInfo( 2348, 'WaterWindEffect', 0xada81, [] )
FWaterWindTransform = ShaderObjectInfo( 2349, 'FWaterWindTransform', 0x971c0, [] )
FWaterTransformVTF = ShaderObjectInfo( 2350, 'FWaterTransformVTF', 0x4a85b, [] )
VS_Water = ShaderObjectInfo( 2351, 'VS_Water', 0x15f1c, [] )
PS_Water = ShaderObjectInfo( 2352, 'PS_Water', 0xe569b, [] )
VS_WaterMask = ShaderObjectInfo( 2353, 'VS_WaterMask', 0x8466a, [] )
PS_WaterMask = ShaderObjectInfo( 2354, 'PS_WaterMask', 0x5e38a, [] )
FWaterCombiner = ShaderObjectInfo( 2355, 'FWaterCombiner', 0x33edd, [] )
VS_WaterShadowMap = ShaderObjectInfo( 2356, 'VS_WaterShadowMap', 0xd2878, [] )
PS_WaterShadowMap = ShaderObjectInfo( 2357, 'PS_WaterShadowMap', 0x99f70, [] )
FWaterShadowFace = ShaderObjectInfo( 2358, 'FWaterShadowFace', 0x114ca, [] )
FWaterShadowReceiveCascadeLSM = ShaderObjectInfo( 2359, 'FWaterShadowReceiveCascadeLSM', 0x33e10, [] )
FWaterShadowReceiveSingleLSM = ShaderObjectInfo( 2360, 'FWaterShadowReceiveSingleLSM', 0x8161a, [] )
FWaterShadowReceive = ShaderObjectInfo( 2361, 'FWaterShadowReceive', 0xab570, [] )
encodeRippleHeight = ShaderObjectInfo( 2362, 'encodeRippleHeight', 0xc5da6, [] )
decodeRippleHeight = ShaderObjectInfo( 2363, 'decodeRippleHeight', 0x4ff5d, [] )
VS_WaterRipple = ShaderObjectInfo( 2364, 'VS_WaterRipple', 0xb074c, [] )
PS_WaterRipple = ShaderObjectInfo( 2365, 'PS_WaterRipple', 0x94cfa, [] )
FWaterHeight2Normal = ShaderObjectInfo( 2366, 'FWaterHeight2Normal', 0x43252, [] )
VS_WaterWPosB = ShaderObjectInfo( 2367, 'VS_WaterWPosB', 0xc3216, [] )
PS_WaterWPosB = ShaderObjectInfo( 2368, 'PS_WaterWPosB', 0x9edcb, [] )
FGUICalcPosition = ShaderObjectInfo( 2369, 'FGUICalcPosition', 0xb4dcd, [] )
FGUICalcPosition2D = ShaderObjectInfo( 2370, 'FGUICalcPosition2D', 0x841dd, [] )
FGUICalcPosition3D = ShaderObjectInfo( 2371, 'FGUICalcPosition3D', 0x3709c, [] )
FGUICalcPositionDev = ShaderObjectInfo( 2372, 'FGUICalcPositionDev', 0xd8320, [] )
FGUICalcPositionDev2D = ShaderObjectInfo( 2373, 'FGUICalcPositionDev2D', 0x4bacd, [] )
FGUICalcPositionDev3D = ShaderObjectInfo( 2374, 'FGUICalcPositionDev3D', 0xf8b8c, [] )
FGUICalcUV = ShaderObjectInfo( 2375, 'FGUICalcUV', 0xc0585, [] )
FGUICalcUVWrap = ShaderObjectInfo( 2376, 'FGUICalcUVWrap', 0xf6ee2, [] )
FGUICalcUVClamp = ShaderObjectInfo( 2377, 'FGUICalcUVClamp', 0x40f4, [] )
FGUICalcUVAlphaMask = ShaderObjectInfo( 2378, 'FGUICalcUVAlphaMask', 0x774a2, [] )
FGUICalcUVAlphaMaskOn = ShaderObjectInfo( 2379, 'FGUICalcUVAlphaMaskOn', 0x237fc, [] )
FGUIGetVertexColor = ShaderObjectInfo( 2380, 'FGUIGetVertexColor', 0xcc20b, [] )
FGUIGetVertexColorStatic = ShaderObjectInfo( 2381, 'FGUIGetVertexColorStatic', 0x46884, [] )
FGUICalcColorScaling = ShaderObjectInfo( 2382, 'FGUICalcColorScaling', 0x5078e, [] )
FGUICalcColorScalingOn = ShaderObjectInfo( 2383, 'FGUICalcColorScalingOn', 0xfd886, [] )
FGUICalcColorAttribute = ShaderObjectInfo( 2384, 'FGUICalcColorAttribute', 0x9a4d7, [] )
FGUICalcColorAttributeOn = ShaderObjectInfo( 2385, 'FGUICalcColorAttributeOn', 0x9cb55, [] )
FGUICalcColorAlphaMask = ShaderObjectInfo( 2386, 'FGUICalcColorAlphaMask', 0x2cf62, [] )
FGUICalcColorAlphaMaskWrite = ShaderObjectInfo( 2387, 'FGUICalcColorAlphaMaskWrite', 0x128b0, [] )
FGUICalcColorAlphaMaskApply = ShaderObjectInfo( 2388, 'FGUICalcColorAlphaMaskApply', 0x5def0, [] )
FGUICalcColor = ShaderObjectInfo( 2389, 'FGUICalcColor', 0x3a00a, [] )
FGUITextureSampling = ShaderObjectInfo( 2390, 'FGUITextureSampling', 0xf1cff, [] )
VS_GUI_Polygon = ShaderObjectInfo( 2391, 'VS_GUI_Polygon', 0xe4a77, [] )
VS_GUI_Texture = ShaderObjectInfo( 2392, 'VS_GUI_Texture', 0xc6617, [] )
VS_GUI_Blend = ShaderObjectInfo( 2393, 'VS_GUI_Blend', 0xf1049, [] )
VS_GUI_Dev = ShaderObjectInfo( 2394, 'VS_GUI_Dev', 0xb64d7, [] )
PS_GUI_Polygon = ShaderObjectInfo( 2395, 'PS_GUI_Polygon', 0xc01c1, [] )
PS_GUI_Texture = ShaderObjectInfo( 2396, 'PS_GUI_Texture', 0xe2da1, [] )
PS_GUI_Blend = ShaderObjectInfo( 2397, 'PS_GUI_Blend', 0x2b5a9, [] )
PS_GUI_Dev = ShaderObjectInfo( 2398, 'PS_GUI_Dev', 0x51490, [] )
FDegamma = ShaderObjectInfo( 2399, 'FDegamma', 0x30313, [] )
FDegammaDesable = ShaderObjectInfo( 2400, 'FDegammaDesable', 0x6ac91, [] )
FYUVDecoder = ShaderObjectInfo( 2401, 'FYUVDecoder', 0xd0700, [] )
FProjectionTextureColor = ShaderObjectInfo( 2402, 'FProjectionTextureColor', 0x1af6, [] )
FProjectionTextureColorR = ShaderObjectInfo( 2403, 'FProjectionTextureColorR', 0x667eb, [] )
FProjectionTextureColorG = ShaderObjectInfo( 2404, 'FProjectionTextureColorG', 0xb8300, [] )
FProjectionTextureColorB = ShaderObjectInfo( 2405, 'FProjectionTextureColorB', 0x1778f, [] )
FProjectionTextureColorA = ShaderObjectInfo( 2406, 'FProjectionTextureColorA', 0x82635, [] )
getProjectionTexture = ShaderObjectInfo( 2407, 'getProjectionTexture', 0x41119, [] )
FProjectionTexture = ShaderObjectInfo( 2408, 'FProjectionTexture', 0xd8b7a, [] )
VS_TextureBlend = ShaderObjectInfo( 2409, 'VS_TextureBlend', 0xa548, [] )
PS_TextureBlend = ShaderObjectInfo( 2410, 'PS_TextureBlend', 0xa71ba, [] )
PS_TextureBlendCube = ShaderObjectInfo( 2411, 'PS_TextureBlendCube', 0x94af6, [] )
convRot = ShaderObjectInfo( 2412, 'convRot', 0xcc589, [] )
FGPUParticleCalcPos = ShaderObjectInfo( 2413, 'FGPUParticleCalcPos', 0x27838, [] )
FGPUParticleCalcPosParticle = ShaderObjectInfo( 2414, 'FGPUParticleCalcPosParticle', 0x58491, [] )
FGPUParticleCalcPosLineParticle = ShaderObjectInfo( 2415, 'FGPUParticleCalcPosLineParticle', 0x192b0, [] )
FGPUParticleCalcPosPolylineParticle = ShaderObjectInfo( 2416, 'FGPUParticleCalcPosPolylineParticle', 0x35c88, [] )
FGPUParticleIntensity = ShaderObjectInfo( 2417, 'FGPUParticleIntensity', 0x2d29d, [] )
FGPUParticleIntensityDefault = ShaderObjectInfo( 2418, 'FGPUParticleIntensityDefault', 0x5e1f9, [] )
FGPUParticleCalcTexCoord = ShaderObjectInfo( 2419, 'FGPUParticleCalcTexCoord', 0x4e2e1, [] )
FGPUParticleCalcTexCoordNone = ShaderObjectInfo( 2420, 'FGPUParticleCalcTexCoordNone', 0xa1dd8, [] )
FGPUParticleCalcTexCoordDefault = ShaderObjectInfo( 2421, 'FGPUParticleCalcTexCoordDefault', 0xfe9fd, [] )
FGPUParticleCalcTexCoordPolyline = ShaderObjectInfo( 2422, 'FGPUParticleCalcTexCoordPolyline', 0x36b00, [] )
FGPUParticleSample = ShaderObjectInfo( 2423, 'FGPUParticleSample', 0x11752, [] )
FGPUParticleSampleNoTexture = ShaderObjectInfo( 2424, 'FGPUParticleSampleNoTexture', 0x7e899, [] )
FGPUParticleSampleBaseMap = ShaderObjectInfo( 2425, 'FGPUParticleSampleBaseMap', 0xcb425, [] )
FGPUParticleSampleBaseMapLin = ShaderObjectInfo( 2426, 'FGPUParticleSampleBaseMapLin', 0x8894c, [] )
FGPUParticleToneMap = ShaderObjectInfo( 2427, 'FGPUParticleToneMap', 0xefba3, [] )
FGPUParticleToneMapDefault = ShaderObjectInfo( 2428, 'FGPUParticleToneMapDefault', 0x1727, [] )
FGPUParticleToneMapNone = ShaderObjectInfo( 2429, 'FGPUParticleToneMapNone', 0xcfceb, [] )
FGPUParticleCalcDepthBlend = ShaderObjectInfo( 2430, 'FGPUParticleCalcDepthBlend', 0xf9522, [] )
FGPUParticleCalcDepthBlendNone = ShaderObjectInfo( 2431, 'FGPUParticleCalcDepthBlendNone', 0x31448, [] )
FGPUParticleCalcDepthBlendDefault = ShaderObjectInfo( 2432, 'FGPUParticleCalcDepthBlendDefault', 0x690e6, [] )
FGPUParticleFogVS = ShaderObjectInfo( 2433, 'FGPUParticleFogVS', 0x30f6f, [] )
FGPUParticleFogVSColor = ShaderObjectInfo( 2434, 'FGPUParticleFogVSColor', 0x94fc4, [] )
FGPUParticleFogVSAlpha = ShaderObjectInfo( 2435, 'FGPUParticleFogVSAlpha', 0xf3e47, [] )
FGPUParticleFogVSBlend = ShaderObjectInfo( 2436, 'FGPUParticleFogVSBlend', 0x27605, [] )
FGPUParticleFogPS = ShaderObjectInfo( 2437, 'FGPUParticleFogPS', 0x9a8e9, [] )
FGPUParticleFogPSDefault = ShaderObjectInfo( 2438, 'FGPUParticleFogPSDefault', 0x34d39, [] )
FGPUParticleVSAlphaClip = ShaderObjectInfo( 2439, 'FGPUParticleVSAlphaClip', 0x34e05, [] )
FGPUParticleVSAlphaClipDefault = ShaderObjectInfo( 2440, 'FGPUParticleVSAlphaClipDefault', 0x36ec6, [] )
FGpuParticleLevelCorrection = ShaderObjectInfo( 2441, 'FGpuParticleLevelCorrection', 0x48c5b, [] )
FGpuParticleLevelCorrectionLinear = ShaderObjectInfo( 2442, 'FGpuParticleLevelCorrectionLinear', 0xc2431, [] )
FGpuParticleLevelCorrectionNeg = ShaderObjectInfo( 2443, 'FGpuParticleLevelCorrectionNeg', 0x43997, [] )
FGpuParticleLevelCorrectionPos = ShaderObjectInfo( 2444, 'FGpuParticleLevelCorrectionPos', 0x98b1a, [] )
VS_GpuParticle = ShaderObjectInfo( 2445, 'VS_GpuParticle', 0xcb561, [] )
VS_GpuParticle2 = ShaderObjectInfo( 2446, 'VS_GpuParticle2', 0x5cfb, [] )
calcPos = ShaderObjectInfo( 2447, 'calcPos', 0x111f9, [] )
GS_GpuParticle = ShaderObjectInfo( 2448, 'GS_GpuParticle', 0x1687b, [] )
PS_GpuParticle = ShaderObjectInfo( 2449, 'PS_GpuParticle', 0xefed7, [] )
VS_LightShaft = ShaderObjectInfo( 2450, 'VS_LightShaft', 0xe760d, [] )
calcLightShaftSearchLength = ShaderObjectInfo( 2451, 'calcLightShaftSearchLength', 0x8026d, [] )
PS_LightShaft = ShaderObjectInfo( 2452, 'PS_LightShaft', 0xba9d0, [] )
FMarkPoint = ShaderObjectInfo( 2453, 'FMarkPoint', 0xfb1bd, [] )
FMarkLine = ShaderObjectInfo( 2454, 'FMarkLine', 0xd2ff3, [] )
FMarkLoopPoint = ShaderObjectInfo( 2455, 'FMarkLoopPoint', 0x7a78c, [] )
FMarkLoopLine = ShaderObjectInfo( 2456, 'FMarkLoopLine', 0x1300b, [] )
FMarkDisable = ShaderObjectInfo( 2457, 'FMarkDisable', 0xdec2b, [] )
FMark = ShaderObjectInfo( 2458, 'FMark', 0xc2758, [] )
FGrassMaterialNormal = ShaderObjectInfo( 2459, 'FGrassMaterialNormal', 0xec675, [] )
FGrassInput = ShaderObjectInfo( 2460, 'FGrassInput', 0xa9507, [] )
FGrassCompressedInput = ShaderObjectInfo( 2461, 'FGrassCompressedInput', 0x3a706, [] )
FGrassPosition = ShaderObjectInfo( 2462, 'FGrassPosition', 0x2635e, [] )
FGrassBillboardPosition = ShaderObjectInfo( 2463, 'FGrassBillboardPosition', 0xffe1a, [] )
FGrassChainPosition = ShaderObjectInfo( 2464, 'FGrassChainPosition', 0x64d6b, [] )
FGrassUV = ShaderObjectInfo( 2465, 'FGrassUV', 0x2d697, [] )
FGrassBillboardUV = ShaderObjectInfo( 2466, 'FGrassBillboardUV', 0x73448, [] )
FGrassChainUV = ShaderObjectInfo( 2467, 'FGrassChainUV', 0x7fb36, [] )
FGrassNormal = ShaderObjectInfo( 2468, 'FGrassNormal', 0x7771a, [] )
FGrassBillboardNormal = ShaderObjectInfo( 2469, 'FGrassBillboardNormal', 0x4108c, [] )
FGrassChainNormal = ShaderObjectInfo( 2470, 'FGrassChainNormal', 0x37ac9, [] )
FGrassTangent = ShaderObjectInfo( 2471, 'FGrassTangent', 0x9a961, [] )
FGrassBillboardTangent = ShaderObjectInfo( 2472, 'FGrassBillboardTangent', 0x1bc77, [] )
FGrassChainTangent = ShaderObjectInfo( 2473, 'FGrassChainTangent', 0x77e02, [] )
FGrassCosSin = ShaderObjectInfo( 2474, 'FGrassCosSin', 0x7201f, [] )
FGrassCosSinFromAngle = ShaderObjectInfo( 2475, 'FGrassCosSinFromAngle', 0x4047, [] )
FGrassShapeInvisible = ShaderObjectInfo( 2476, 'FGrassShapeInvisible', 0xa804d, [] )
FGrassXZRotate = ShaderObjectInfo( 2477, 'FGrassXZRotate', 0xb9287, [] )
FGrassXZRotateEnable = ShaderObjectInfo( 2478, 'FGrassXZRotateEnable', 0xce871, [] )
FGrassUVSwitchDisable = ShaderObjectInfo( 2479, 'FGrassUVSwitchDisable', 0x2f679, [] )
FGrassUVSwitch = ShaderObjectInfo( 2480, 'FGrassUVSwitch', 0xef436, [] )
FGrassUVMixer = ShaderObjectInfo( 2481, 'FGrassUVMixer', 0x6fbfa, [] )
FGrassUVMixerEnable = ShaderObjectInfo( 2482, 'FGrassUVMixerEnable', 0xaad2d, [] )
FPerVertexShadowFilter4x4 = ShaderObjectInfo( 2483, 'FPerVertexShadowFilter4x4', 0x2398, [] )
getDepthColumn6 = ShaderObjectInfo( 2484, 'getDepthColumn6', 0x7c847, [] )
FPerVertexShadowFilter6x6 = ShaderObjectInfo( 2485, 'FPerVertexShadowFilter6x6', 0xa96da, [] )
getDepthColumn8 = ShaderObjectInfo( 2486, 'getDepthColumn8', 0xfe540, [] )
FPerVertexShadowFilter8x8 = ShaderObjectInfo( 2487, 'FPerVertexShadowFilter8x8', 0xc96d7, [] )
FFixedCoordinate = ShaderObjectInfo( 2488, 'FFixedCoordinate', 0x174a8, [] )
FGrassDiffuse = ShaderObjectInfo( 2489, 'FGrassDiffuse', 0x274f8, [] )
FGrassFade = ShaderObjectInfo( 2490, 'FGrassFade', 0x127ee, [] )
FBRDFGrassDiffuse = ShaderObjectInfo( 2491, 'FBRDFGrassDiffuse', 0xfefeb, [] )
FBRDFGrassDefault = ShaderObjectInfo( 2492, 'FBRDFGrassDefault', 0x3945, [] )
FGrassAdjustNormal = ShaderObjectInfo( 2493, 'FGrassAdjustNormal', 0xbc971, [] )
FGrassAdjustNormalDisable = ShaderObjectInfo( 2494, 'FGrassAdjustNormalDisable', 0x72835, [] )
FGrassIllumination = ShaderObjectInfo( 2495, 'FGrassIllumination', 0x1f06f, [] )
FGrassLightMask = ShaderObjectInfo( 2496, 'FGrassLightMask', 0x7aca5, [] )
FGrassPerVertexLightMask = ShaderObjectInfo( 2497, 'FGrassPerVertexLightMask', 0x2e92f, [] )
FGrassPerVertexShading = ShaderObjectInfo( 2498, 'FGrassPerVertexShading', 0xd227b, [] )
FGrassPerPixelLightMask = ShaderObjectInfo( 2499, 'FGrassPerPixelLightMask', 0xdc762, [] )
FGrassUsePosition = ShaderObjectInfo( 2500, 'FGrassUsePosition', 0xc46c1, [] )
FGrassUsePointPosition = ShaderObjectInfo( 2501, 'FGrassUsePointPosition', 0xec07a, [] )
FGrassPerPixelShading = ShaderObjectInfo( 2502, 'FGrassPerPixelShading', 0x9b71e, [] )
FGrassShadingDisable = ShaderObjectInfo( 2503, 'FGrassShadingDisable', 0xebf5f, [] )
FDirectionalWind = ShaderObjectInfo( 2504, 'FDirectionalWind', 0xf92f0, [] )
FGrassGlobalWind = ShaderObjectInfo( 2505, 'FGrassGlobalWind', 0x5afcb, [] )
FGrassGlobalWind_Disable = ShaderObjectInfo( 2506, 'FGrassGlobalWind_Disable', 0x51759, [] )
FDynamicEditMapCoordinate = ShaderObjectInfo( 2507, 'FDynamicEditMapCoordinate', 0x4eed9, [] )
FDynamicEditMapReject = ShaderObjectInfo( 2508, 'FDynamicEditMapReject', 0x3da31, [] )
FDynamicEditMapFade = ShaderObjectInfo( 2509, 'FDynamicEditMapFade', 0x34441, [] )
FDynamicEditMapScaling = ShaderObjectInfo( 2510, 'FDynamicEditMapScaling', 0x86e24, [] )
FDynamicEditMapLying = ShaderObjectInfo( 2511, 'FDynamicEditMapLying', 0x16bf0, [] )
FDynamicEditMapCoordinateEnable = ShaderObjectInfo( 2512, 'FDynamicEditMapCoordinateEnable', 0x693b8, [] )
FDynamicEditMapRejectEnable = ShaderObjectInfo( 2513, 'FDynamicEditMapRejectEnable', 0xd2941, [] )
FDynamicEditMapFadeEnable = ShaderObjectInfo( 2514, 'FDynamicEditMapFadeEnable', 0x27ccc, [] )
FDynamicEditMapScalingEnable = ShaderObjectInfo( 2515, 'FDynamicEditMapScalingEnable', 0xdd52, [] )
FDynamicEditMapLyingEnable = ShaderObjectInfo( 2516, 'FDynamicEditMapLyingEnable', 0xdf895, [] )
FGrassConstraint = ShaderObjectInfo( 2517, 'FGrassConstraint', 0xca942, [] )
FGrassConstraintBillboard = ShaderObjectInfo( 2518, 'FGrassConstraintBillboard', 0x6be78, [] )
FGrassInfo = ShaderObjectInfo( 2519, 'FGrassInfo', 0xdfb19, [] )
FGrassInfoWithNormal = ShaderObjectInfo( 2520, 'FGrassInfoWithNormal', 0xe6474, [] )
VS_GrassLowest = ShaderObjectInfo( 2521, 'VS_GrassLowest', 0xc2c4f, [] )
VS_Grass = ShaderObjectInfo( 2522, 'VS_Grass', 0xfd435, [] )
PS_Grass = ShaderObjectInfo( 2523, 'PS_Grass', 0xddb2, [] )
PS_GrassFinalCombiner = ShaderObjectInfo( 2524, 'PS_GrassFinalCombiner', 0xd444, [] )
VS_GrassShadowReceive = ShaderObjectInfo( 2525, 'VS_GrassShadowReceive', 0x9d4c3, [] )
PS_GrassShadowReceiveTransparent = ShaderObjectInfo( 2526, 'PS_GrassShadowReceiveTransparent', 0x1fd1a, [] )
PS_GrassShadowReceiveZPass = ShaderObjectInfo( 2527, 'PS_GrassShadowReceiveZPass', 0x432f8, [] )
VS_GrassPointMap = ShaderObjectInfo( 2528, 'VS_GrassPointMap', 0xfbe17, [] )
PS_GrassPointMap = ShaderObjectInfo( 2529, 'PS_GrassPointMap', 0xed7f3, [] )
VS_TransitionDynamicEdit = ShaderObjectInfo( 2530, 'VS_TransitionDynamicEdit', 0xb0464, [] )
PS_TransitionDynamicEdit = ShaderObjectInfo( 2531, 'PS_TransitionDynamicEdit', 0x65634, [] )
VS_DynamicEdit = ShaderObjectInfo( 2532, 'VS_DynamicEdit', 0x476ef, [] )
PS_DynamicEdit = ShaderObjectInfo( 2533, 'PS_DynamicEdit', 0x63d59, [] )
VS_Grass_Deferred = ShaderObjectInfo( 2534, 'VS_Grass_Deferred', 0xd7b08, [] )
PS_Grass_Deferred = ShaderObjectInfo( 2535, 'PS_Grass_Deferred', 0x9cc00, [] )
FFilterDeferredRendering = ShaderObjectInfo( 2536, 'FFilterDeferredRendering', 0x17ddb, [] )
VS_GrassOutsourceing = ShaderObjectInfo( 2537, 'VS_GrassOutsourceing', 0x61957, [] )
VS_GrassDummy = ShaderObjectInfo( 2538, 'VS_GrassDummy', 0x4389f, [] )
PS_GrassDummy = ShaderObjectInfo( 2539, 'PS_GrassDummy', 0x1e742, [] )
VS_GrassShadowDummy = ShaderObjectInfo( 2540, 'VS_GrassShadowDummy', 0x27310, [] )
PS_GrassShadowDummy = ShaderObjectInfo( 2541, 'PS_GrassShadowDummy', 0xe7803, [] )
FMirageModColor = ShaderObjectInfo( 2542, 'FMirageModColor', 0xabf76, [] )
FMirageModColorDebug = ShaderObjectInfo( 2543, 'FMirageModColorDebug', 0x1b348, [] )
FMirageSampleScene = ShaderObjectInfo( 2544, 'FMirageSampleScene', 0xed727, [] )
FMirageSampleSceneRefractionMap = ShaderObjectInfo( 2545, 'FMirageSampleSceneRefractionMap', 0x75f3, [] )
FMirageRefract = ShaderObjectInfo( 2546, 'FMirageRefract', 0xdfb26, [] )
FMirageRefractDefault = ShaderObjectInfo( 2547, 'FMirageRefractDefault', 0x9d1da, [] )
FMirageCalcOutput = ShaderObjectInfo( 2548, 'FMirageCalcOutput', 0x88b9c, [] )
FMirageCalcOutputNoise = ShaderObjectInfo( 2549, 'FMirageCalcOutputNoise', 0xab760, [] )
FMirageDepthBlend = ShaderObjectInfo( 2550, 'FMirageDepthBlend', 0xcd3c0, [] )
FMirageDepthBlendDefault = ShaderObjectInfo( 2551, 'FMirageDepthBlendDefault', 0xe7a09, [] )
FMirageSectCombiner = ShaderObjectInfo( 2552, 'FMirageSectCombiner', 0x276f0, [] )
FMirageClamp = ShaderObjectInfo( 2553, 'FMirageClamp', 0x658c5, [] )
FMirageClampNearFar = ShaderObjectInfo( 2554, 'FMirageClampNearFar', 0x1d57, [] )
VS_Mirage = ShaderObjectInfo( 2555, 'VS_Mirage', 0x913ef, [] )
PS_Mirage = ShaderObjectInfo( 2556, 'PS_Mirage', 0x36a65, [] )
VS_MirageSect = ShaderObjectInfo( 2557, 'VS_MirageSect', 0x87985, [] )
PS_MirageSect = ShaderObjectInfo( 2558, 'PS_MirageSect', 0xda658, [] )
VS_HeatDepth = ShaderObjectInfo( 2559, 'VS_HeatDepth', 0xc63aa, [] )
PS_HeatDepth = ShaderObjectInfo( 2560, 'PS_HeatDepth', 0x1c64a, [] )
FSimWaterSimpleTexVS = ShaderObjectInfo( 2561, 'FSimWaterSimpleTexVS', 0x2be33, [] )
FSimWaterSimpleTexPS = ShaderObjectInfo( 2562, 'FSimWaterSimpleTexPS', 0x819b5, [] )
SbPositionToTexCoordX = ShaderObjectInfo( 2563, 'SbPositionToTexCoordX', 0xdd696, [] )
SbPositionToTexCoordY = ShaderObjectInfo( 2564, 'SbPositionToTexCoordY', 0xae600, [] )
SbPositionToTexCoord = ShaderObjectInfo( 2565, 'SbPositionToTexCoord', 0x28f5c, [] )
SbTexCoordToPositionX = ShaderObjectInfo( 2566, 'SbTexCoordToPositionX', 0x889fa, [] )
SbTexCoordToPositionY = ShaderObjectInfo( 2567, 'SbTexCoordToPositionY', 0xfb96c, [] )
SbTexCoordToPosition = ShaderObjectInfo( 2568, 'SbTexCoordToPosition', 0x3c00, [] )
SbIdxToTexUV = ShaderObjectInfo( 2569, 'SbIdxToTexUV', 0x7925b, [] )
SbIdxToTexCoord = ShaderObjectInfo( 2570, 'SbIdxToTexCoord', 0xbc824, [] )
SbIdxToPosition = ShaderObjectInfo( 2571, 'SbIdxToPosition', 0xb77d8, [] )
SbNormalPackF16 = ShaderObjectInfo( 2572, 'SbNormalPackF16', 0x538da, [] )
SbNormalUnpackF16 = ShaderObjectInfo( 2573, 'SbNormalUnpackF16', 0x8f4f1, [] )
SbNormalPackF32 = ShaderObjectInfo( 2574, 'SbNormalPackF32', 0xe9e41, [] )
SbNormalUnpackF32 = ShaderObjectInfo( 2575, 'SbNormalUnpackF32', 0x3526a, [] )
fSbRand = ShaderObjectInfo( 2576, 'fSbRand', 0xd827c, [] )
fSbRand2 = ShaderObjectInfo( 2577, 'fSbRand2', 0xec115, [] )
unpackU8U8 = ShaderObjectInfo( 2578, 'unpackU8U8', 0x2343d, [] )
SbPassThroughVS = ShaderObjectInfo( 2579, 'SbPassThroughVS', 0x93350, [] )
SbApplyWorldOffsetPS = ShaderObjectInfo( 2580, 'SbApplyWorldOffsetPS', 0x2fdfa, [] )
SbApplyWorldOffsetPS_XBOX = ShaderObjectInfo( 2581, 'SbApplyWorldOffsetPS_XBOX', 0x90389, [] )
SbToLocalSpacePS = ShaderObjectInfo( 2582, 'SbToLocalSpacePS', 0xbdc66, [] )
SbToLocalSpacePS_XBOX = ShaderObjectInfo( 2583, 'SbToLocalSpacePS_XBOX', 0xc8b7f, [] )
SbInitPS = ShaderObjectInfo( 2584, 'SbInitPS', 0x73ee8, [] )
SbInitPS_XBOX = ShaderObjectInfo( 2585, 'SbInitPS_XBOX', 0x99472, [] )
SbLodTransPS = ShaderObjectInfo( 2586, 'SbLodTransPS', 0xfad3f, [] )
SbLodTransPS_XBOX = ShaderObjectInfo( 2587, 'SbLodTransPS_XBOX', 0x34e74, [] )
SbPsSkinningPS = ShaderObjectInfo( 2588, 'SbPsSkinningPS', 0x6bc16, [] )
SbPsSkinningPS_XBOX = ShaderObjectInfo( 2589, 'SbPsSkinningPS_XBOX', 0xc348e, [] )
SbPsSkinningAddPosPS = ShaderObjectInfo( 2590, 'SbPsSkinningAddPosPS', 0x5b584, [] )
SbPsSkinningAddPosPS_XBOX = ShaderObjectInfo( 2591, 'SbPsSkinningAddPosPS_XBOX', 0xb5ea6, [] )
SbIntegratePS = ShaderObjectInfo( 2592, 'SbIntegratePS', 0xcdcbc, [] )
SbIntegratePS_XBOX = ShaderObjectInfo( 2593, 'SbIntegratePS_XBOX', 0xdf426, [] )
SbPlaneConstraint = ShaderObjectInfo( 2594, 'SbPlaneConstraint', 0x5987e, [] )
SbSphereConstraint = ShaderObjectInfo( 2595, 'SbSphereConstraint', 0xf984c, [] )
SbCapsuleConstraint = ShaderObjectInfo( 2596, 'SbCapsuleConstraint', 0xe9bac, [] )
SbBoxConstraint = ShaderObjectInfo( 2597, 'SbBoxConstraint', 0xb8ac, [] )
SbTriangleConstraint = ShaderObjectInfo( 2598, 'SbTriangleConstraint', 0x4fed6, [] )
SbIscCalcFt = ShaderObjectInfo( 2599, 'SbIscCalcFt', 0x21277, [] )
SbIscCalcBk = ShaderObjectInfo( 2600, 'SbIscCalcBk', 0x6da86, [] )
SbPrimCollision = ShaderObjectInfo( 2601, 'SbPrimCollision', 0x58303, [] )
SbSolveConstPS = ShaderObjectInfo( 2602, 'SbSolveConstPS', 0x994b4, [] )
SbSolveConstPS_XBOX = ShaderObjectInfo( 2603, 'SbSolveConstPS_XBOX', 0x9989d, [] )
SbSolveEdgeConst2PS = ShaderObjectInfo( 2604, 'SbSolveEdgeConst2PS', 0x15c61, [] )
SbSolveEdgeConst2PS_XBOX = ShaderObjectInfo( 2605, 'SbSolveEdgeConst2PS_XBOX', 0xba525, [] )
SbIscConstraint = ShaderObjectInfo( 2606, 'SbIscConstraint', 0xce4fd, [] )
SbSolveConstIscPS = ShaderObjectInfo( 2607, 'SbSolveConstIscPS', 0x811e3, [] )
SbSolveConstIscPS_XBOX = ShaderObjectInfo( 2608, 'SbSolveConstIscPS_XBOX', 0xef44f, [] )
SbCreateDepthNormVS = ShaderObjectInfo( 2609, 'SbCreateDepthNormVS', 0xc4ee3, [] )
SbCreateDepthNormFrontPS = ShaderObjectInfo( 2610, 'SbCreateDepthNormFrontPS', 0x23481, [] )
SbCreateDepthNormBackPS = ShaderObjectInfo( 2611, 'SbCreateDepthNormBackPS', 0xa6fe8, [] )
SbFilterDepthNormPS = ShaderObjectInfo( 2612, 'SbFilterDepthNormPS', 0x62e88, [] )
FTattooUV = ShaderObjectInfo( 2613, 'FTattooUV', 0x814f1, [] )
FTattooUVNormalMap = ShaderObjectInfo( 2614, 'FTattooUVNormalMap', 0x357e6, [] )
VS_Tattoo = ShaderObjectInfo( 2615, 'VS_Tattoo', 0xa562c, [] )
FTattooOutput = ShaderObjectInfo( 2616, 'FTattooOutput', 0xc56ab, [] )
FTattooOutputHeight = ShaderObjectInfo( 2617, 'FTattooOutputHeight', 0xcd82c, [] )
PS_Tattoo = ShaderObjectInfo( 2618, 'PS_Tattoo', 0x2fa6, [] )
getTattooHeight = ShaderObjectInfo( 2619, 'getTattooHeight', 0xc1186, [] )
FTattooHeightToNormal = ShaderObjectInfo( 2620, 'FTattooHeightToNormal', 0x5c0c8, [] )
VS_TattooNormalBlend2D = ShaderObjectInfo( 2621, 'VS_TattooNormalBlend2D', 0xb9ffc, [] )
PS_TattooNormalBlend2D = ShaderObjectInfo( 2622, 'PS_TattooNormalBlend2D', 0xac57c, [] )
FBuilderSample = ShaderObjectInfo( 2623, 'FBuilderSample', 0x3c91b, [] )
FBuilderSampleBaseMap = ShaderObjectInfo( 2624, 'FBuilderSampleBaseMap', 0xdc3ef, [] )
VS_Builder = ShaderObjectInfo( 2625, 'VS_Builder', 0xb4f4, [] )
PS_Builder = ShaderObjectInfo( 2626, 'PS_Builder', 0xec4b3, [] )
getOpticalDepth = ShaderObjectInfo( 2627, 'getOpticalDepth', 0x4c280, [] )
getCrossPoint = ShaderObjectInfo( 2628, 'getCrossPoint', 0x22411, [] )
FRayleighDepthMap = ShaderObjectInfo( 2629, 'FRayleighDepthMap', 0xc013c, [] )
FMieDepthMap = ShaderObjectInfo( 2630, 'FMieDepthMap', 0x49a07, [] )
getAtmosphereDepth = ShaderObjectInfo( 2631, 'getAtmosphereDepth', 0xc49a, [] )
getAerosolDepth = ShaderObjectInfo( 2632, 'getAerosolDepth', 0x43aac, [] )
getRayleighScatter = ShaderObjectInfo( 2633, 'getRayleighScatter', 0xf30b6, [] )
getMieScatter = ShaderObjectInfo( 2634, 'getMieScatter', 0x5e2b4, [] )
getCloudScatter = ShaderObjectInfo( 2635, 'getCloudScatter', 0x1fff8, [] )
getOpticalDepthMap = ShaderObjectInfo( 2636, 'getOpticalDepthMap', 0x91e4d, [] )
updateDepth = ShaderObjectInfo( 2637, 'updateDepth', 0x4eb16, [] )
updateDensity = ShaderObjectInfo( 2638, 'updateDensity', 0xfcdf4, [] )
getCloudDepth2 = ShaderObjectInfo( 2639, 'getCloudDepth2', 0x93208, [] )
getCloudDepth = ShaderObjectInfo( 2640, 'getCloudDepth', 0x555a6, [] )
updateCloudDepth = ShaderObjectInfo( 2641, 'updateCloudDepth', 0x889a5, [] )
calcScatter = ShaderObjectInfo( 2642, 'calcScatter', 0x3ac1a, [] )
calcScattering = ShaderObjectInfo( 2643, 'calcScattering', 0x1b716, [] )
FSkyMapBeginEnd = ShaderObjectInfo( 2644, 'FSkyMapBeginEnd', 0x83b45, [] )
FSkyMapBeginEndRayleigh = ShaderObjectInfo( 2645, 'FSkyMapBeginEndRayleigh', 0x148d7, [] )
FSkyMapBeginEndMie = ShaderObjectInfo( 2646, 'FSkyMapBeginEndMie', 0x35374, [] )
FSkyMapBeginEndCloud = ShaderObjectInfo( 2647, 'FSkyMapBeginEndCloud', 0xfd138, [] )
FSkyMapOutputSelect = ShaderObjectInfo( 2648, 'FSkyMapOutputSelect', 0x2d056, [] )
FSkyMapOutputSelectRayleigh = ShaderObjectInfo( 2649, 'FSkyMapOutputSelectRayleigh', 0x861e8, [] )
FSkyMapOutputSelectMie = ShaderObjectInfo( 2650, 'FSkyMapOutputSelectMie', 0x40e62, [] )
FSkyMapOutputSelectCloud = ShaderObjectInfo( 2651, 'FSkyMapOutputSelectCloud', 0xde721, [] )
FSkyCorrectHorizon = ShaderObjectInfo( 2652, 'FSkyCorrectHorizon', 0x1af82, [] )
FSkyCorrectHorizonDisable = ShaderObjectInfo( 2653, 'FSkyCorrectHorizonDisable', 0xec5c7, [] )
FSkyCorrectHorizonEnable = ShaderObjectInfo( 2654, 'FSkyCorrectHorizonEnable', 0x62762, [] )
VS_SkyMap = ShaderObjectInfo( 2655, 'VS_SkyMap', 0x4588c, [] )
PS_SkyMap = ShaderObjectInfo( 2656, 'PS_SkyMap', 0xe2106, [] )
FSkyFog = ShaderObjectInfo( 2657, 'FSkyFog', 0x3c130, [] )
FSkyFinalCombiner = ShaderObjectInfo( 2658, 'FSkyFinalCombiner', 0x1a7e5, [] )
VS_Sky = ShaderObjectInfo( 2659, 'VS_Sky', 0xdf444, [] )
PS_Sky = ShaderObjectInfo( 2660, 'PS_Sky', 0x41759, [] )
getAstralScattering = ShaderObjectInfo( 2661, 'getAstralScattering', 0xf28ec, [] )
VS_SkyAstralBody = ShaderObjectInfo( 2662, 'VS_SkyAstralBody', 0x7eb00, [] )
PS_SkySunBody = ShaderObjectInfo( 2663, 'PS_SkySunBody', 0x65a7f, [] )
PS_SkyMoonBody = ShaderObjectInfo( 2664, 'PS_SkyMoonBody', 0x30648, [] )
VS_SkyStar = ShaderObjectInfo( 2665, 'VS_SkyStar', 0x75964, [] )
PS_SkyStar = ShaderObjectInfo( 2666, 'PS_SkyStar', 0x92923, [] )
VS_SkyStarrySkyColor = ShaderObjectInfo( 2667, 'VS_SkyStarrySkyColor', 0x1d412, [] )
PS_SkyStarrySkyColor = ShaderObjectInfo( 2668, 'PS_SkyStarrySkyColor', 0x249c7, [] )
FDiffuseReflectanceModel = ShaderObjectInfo( 2669, 'FDiffuseReflectanceModel', 0xa32f7, [] )
FTexSinTan = ShaderObjectInfo( 2670, 'FTexSinTan', 0xbbf07, [] )
FTexOrenNayar = ShaderObjectInfo( 2671, 'FTexOrenNayar', 0x9515a, [] )
FOrenNayarModel = ShaderObjectInfo( 2672, 'FOrenNayarModel', 0x2166d, [] )
FOrenNayarRGBModel = ShaderObjectInfo( 2673, 'FOrenNayarRGBModel', 0x2f631, [] )
FSpecularReflectanceModel = ShaderObjectInfo( 2674, 'FSpecularReflectanceModel', 0xa0eb5, [] )
FTexBeckmannModel = ShaderObjectInfo( 2675, 'FTexBeckmannModel', 0x80b84, [] )
FBeckmannModel = ShaderObjectInfo( 2676, 'FBeckmannModel', 0x23fbd, [] )
FCookTorranceModel = ShaderObjectInfo( 2677, 'FCookTorranceModel', 0xe4f16, [] )
FKelemenSzirmayModel = ShaderObjectInfo( 2678, 'FKelemenSzirmayModel', 0xaaa19, [] )
StrandSpecular = ShaderObjectInfo( 2679, 'StrandSpecular', 0x253f2, [] )
FScheuermannModel = ShaderObjectInfo( 2680, 'FScheuermannModel', 0x2db5f, [] )
FTexAnisotropicPhongSpecularModel = ShaderObjectInfo( 2681, 'FTexAnisotropicPhongSpecularModel', 0x95be4, [] )
FTex2AnisotropicPhongSpecularModel = ShaderObjectInfo( 2682, 'FTex2AnisotropicPhongSpecularModel', 0x1b7eb, [] )
FAnisotropicPhongSpecularModel = ShaderObjectInfo( 2683, 'FAnisotropicPhongSpecularModel', 0xa8fda, [] )
FTexAnisotropicPhongDiffusegModel = ShaderObjectInfo( 2684, 'FTexAnisotropicPhongDiffusegModel', 0x815f2, [] )
FAnisotropicPhongDiffusegModel = ShaderObjectInfo( 2685, 'FAnisotropicPhongDiffusegModel', 0xbc1cc, [] )
FBRDFCray = ShaderObjectInfo( 2686, 'FBRDFCray', 0xd91d2, [] )
FBRDFBeckmann = ShaderObjectInfo( 2687, 'FBRDFBeckmann', 0x97e13, [] )
FBRDFMetal = ShaderObjectInfo( 2688, 'FBRDFMetal', 0x2ab9f, [] )
FBRDFSkin = ShaderObjectInfo( 2689, 'FBRDFSkin', 0x9517d, [] )
FBRDFHair = ShaderObjectInfo( 2690, 'FBRDFHair', 0x7587a, [] )
FBRDFHairHalfLambert = ShaderObjectInfo( 2691, 'FBRDFHairHalfLambert', 0xf9bba, [] )
FBRDFAnisotropicPhong = ShaderObjectInfo( 2692, 'FBRDFAnisotropicPhong', 0x1582c, [] )
VS_AmbientShadow = ShaderObjectInfo( 2693, 'VS_AmbientShadow', 0x16563, [] )
FAmbientShadowDecay = ShaderObjectInfo( 2694, 'FAmbientShadowDecay', 0x44eb2, [] )
FAmbientShadowDecayUniform = ShaderObjectInfo( 2695, 'FAmbientShadowDecayUniform', 0x2e316, [] )
FAmbientShadowDecayPerspective = ShaderObjectInfo( 2696, 'FAmbientShadowDecayPerspective', 0x88b4a, [] )
FAmbientShadowImage = ShaderObjectInfo( 2697, 'FAmbientShadowImage', 0xf8d4b, [] )
FAmbientShadowTexture = ShaderObjectInfo( 2698, 'FAmbientShadowTexture', 0x5339e, [] )
FAmbientShadowCircular = ShaderObjectInfo( 2699, 'FAmbientShadowCircular', 0x4aaac, [] )
FAmbientShadowCircularSpread = ShaderObjectInfo( 2700, 'FAmbientShadowCircularSpread', 0x7bc43, [] )
PS_AmbientShadow = ShaderObjectInfo( 2701, 'PS_AmbientShadow', 0xc87, [] )
PS_AmbientShadowAlpha = ShaderObjectInfo( 2702, 'PS_AmbientShadowAlpha', 0xd03a9, [] )
VS_OcclusinQuery_Basic = ShaderObjectInfo( 2703, 'VS_OcclusinQuery_Basic', 0x1e753, [] )
PS_OcclusinQuery_Basic = ShaderObjectInfo( 2704, 'PS_OcclusinQuery_Basic', 0xbdd3, [] )
FOutputTexcoord = ShaderObjectInfo( 2705, 'FOutputTexcoord', 0x32248, [] )
FMRTNormalCombinear = ShaderObjectInfo( 2706, 'FMRTNormalCombinear', 0xfe5, [] )
FTriangleVertexSelector = ShaderObjectInfo( 2707, 'FTriangleVertexSelector', 0xf441e, [] )
FTriangleVertex1 = ShaderObjectInfo( 2708, 'FTriangleVertex1', 0xc6f8b, [] )
FTriangleVertex2 = ShaderObjectInfo( 2709, 'FTriangleVertex2', 0x53e31, [] )
VS_VertexOutput = ShaderObjectInfo( 2710, 'VS_VertexOutput', 0x542a8, [] )
PS_VertexOutput = ShaderObjectInfo( 2711, 'PS_VertexOutput', 0xf965a, [] )
PS_VertexOutput3T = ShaderObjectInfo( 2712, 'PS_VertexOutput3T', 0x5305d, [] )
VS_ModelNormalize = ShaderObjectInfo( 2713, 'VS_ModelNormalize', 0x54a8e, [] )
PS_ModelNormalize = ShaderObjectInfo( 2714, 'PS_ModelNormalize', 0x1fd86, [] )
PS_NormalizedSeparation = ShaderObjectInfo( 2715, 'PS_NormalizedSeparation', 0x6f91b, [] )
FMirrorFilter = ShaderObjectInfo( 2716, 'FMirrorFilter', 0x9dfc3, [] )
VS_Mirror = ShaderObjectInfo( 2717, 'VS_Mirror', 0x30109, [] )
PS_Mirror = ShaderObjectInfo( 2718, 'PS_Mirror', 0x97883, [] )
calcPRNG = ShaderObjectInfo( 2719, 'calcPRNG', 0xb41e7, [] )
calcCurvePosition = ShaderObjectInfo( 2720, 'calcCurvePosition', 0xad066, [] )
calcParticleRatio = ShaderObjectInfo( 2721, 'calcParticleRatio', 0x8c954, [] )
calcParticleIntensity = ShaderObjectInfo( 2722, 'calcParticleIntensity', 0xb86a, [] )
FInfParticleRandomizePos = ShaderObjectInfo( 2723, 'FInfParticleRandomizePos', 0x7f98, [] )
FInfParticleRandomizePosDefault = ShaderObjectInfo( 2724, 'FInfParticleRandomizePosDefault', 0x8e9f8, [] )
FInfParticlePos = ShaderObjectInfo( 2725, 'FInfParticlePos', 0xd1292, [] )
FInfParticlePosSpline = ShaderObjectInfo( 2726, 'FInfParticlePosSpline', 0x91d0c, [] )
FInfParticlePosBezier = ShaderObjectInfo( 2727, 'FInfParticlePosBezier', 0x6808f, [] )
FInfParticleColor = ShaderObjectInfo( 2728, 'FInfParticleColor', 0xadc7a, [] )
FInfParticleColorConstant = ShaderObjectInfo( 2729, 'FInfParticleColorConstant', 0x52bf3, [] )
FInfParticleColorConstantBlend = ShaderObjectInfo( 2730, 'FInfParticleColorConstantBlend', 0xfcac3, [] )
FInfParticleColorLerp = ShaderObjectInfo( 2731, 'FInfParticleColorLerp', 0x8f4c5, [] )
FInfParticleColorLerpBlend = ShaderObjectInfo( 2732, 'FInfParticleColorLerpBlend', 0xde400, [] )
calcParticleRotation = ShaderObjectInfo( 2733, 'calcParticleRotation', 0xeeaff, [] )
FInfParticleSample = ShaderObjectInfo( 2734, 'FInfParticleSample', 0x59724, [] )
FInfParticleSampleAlbedo = ShaderObjectInfo( 2735, 'FInfParticleSampleAlbedo', 0x3ad32, [] )
FInfParticleCalcTexCoord = ShaderObjectInfo( 2736, 'FInfParticleCalcTexCoord', 0xfc268, [] )
FInfParticleCalcTexCoordPattern = ShaderObjectInfo( 2737, 'FInfParticleCalcTexCoordPattern', 0x2b0bf, [] )
FInfParticleTexturePattern = ShaderObjectInfo( 2738, 'FInfParticleTexturePattern', 0xdfe21, [] )
FInfParticleTexturePatternIndependent = ShaderObjectInfo( 2739, 'FInfParticleTexturePatternIndependent', 0x8a2ac, [] )
FInfParticleTexturePatternAnimate = ShaderObjectInfo( 2740, 'FInfParticleTexturePatternAnimate', 0x64df8, [] )
FInfParticleVSAlphaClip = ShaderObjectInfo( 2741, 'FInfParticleVSAlphaClip', 0x1bfe5, [] )
FInfParticleVSAlphaClipDefault = ShaderObjectInfo( 2742, 'FInfParticleVSAlphaClipDefault', 0x43f17, [] )
VS_InfParticle = ShaderObjectInfo( 2743, 'VS_InfParticle', 0x5188, [] )
VS_InfParticle2 = ShaderObjectInfo( 2744, 'VS_InfParticle2', 0x85ac3, [] )
calcTexcoord = ShaderObjectInfo( 2745, 'calcTexcoord', 0x5e3d, [] )
GS_InfParticle = ShaderObjectInfo( 2746, 'GS_InfParticle', 0xd8c92, [] )
PS_InfParticle = ShaderObjectInfo( 2747, 'PS_InfParticle', 0x21a3e, [] )
FUserAlbedoMapNoAlpha = ShaderObjectInfo( 2748, 'FUserAlbedoMapNoAlpha', 0x13f60, [] )
FUserAlbedoMapIndirect = ShaderObjectInfo( 2749, 'FUserAlbedoMapIndirect', 0x31540, [] )
FUserAlbedoMapFrozen = ShaderObjectInfo( 2750, 'FUserAlbedoMapFrozen', 0x100ce, [] )
FUserDiffuseStageFloor = ShaderObjectInfo( 2751, 'FUserDiffuseStageFloor', 0xeced8, [] )
FUserDiffuseConstantMul = ShaderObjectInfo( 2752, 'FUserDiffuseConstantMul', 0xf02cc, [] )
FUserSimpleFinalCombiner = ShaderObjectInfo( 2753, 'FUserSimpleFinalCombiner', 0xdbe19, [] )
FUserSpecularMapIndirect = ShaderObjectInfo( 2754, 'FUserSpecularMapIndirect', 0x55efb, [] )
FTransparencyMapClamp = ShaderObjectInfo( 2755, 'FTransparencyMapClamp', 0x6c084, [] )
FFresnelLegacy = ShaderObjectInfo( 2756, 'FFresnelLegacy', 0x21080, [] )
FToonLightCalc = ShaderObjectInfo( 2757, 'FToonLightCalc', 0x97281, [] )
FToonLightCalcHalf = ShaderObjectInfo( 2758, 'FToonLightCalcHalf', 0x6cbb4, [] )
FToonLightCalcNone = ShaderObjectInfo( 2759, 'FToonLightCalcNone', 0xc8a5a, [] )
FToonLightRevCalc = ShaderObjectInfo( 2760, 'FToonLightRevCalc', 0xcf394, [] )
FToonLightRevCalcHalf = ShaderObjectInfo( 2761, 'FToonLightRevCalcHalf', 0xdcfa, [] )
doRGB2HSV = ShaderObjectInfo( 2762, 'doRGB2HSV', 0x35689, [] )
doHSV2RGB = ShaderObjectInfo( 2763, 'doHSV2RGB', 0xfc148, [] )
FCalcRimLight = ShaderObjectInfo( 2764, 'FCalcRimLight', 0xfe78b, [] )
FCalcRimLightDefault = ShaderObjectInfo( 2765, 'FCalcRimLightDefault', 0xcc36f, [] )
FCalcRimLightNone = ShaderObjectInfo( 2766, 'FCalcRimLightNone', 0xc9fa, [] )
FToonShader = ShaderObjectInfo( 2767, 'FToonShader', 0xf4aea, [] )
FToonShaderHigh = ShaderObjectInfo( 2768, 'FToonShaderHigh', 0x53928, [] )
FToonShaderNormal = ShaderObjectInfo( 2769, 'FToonShaderNormal', 0xfd0d9, [] )
FDiffuseColorCorectSimple = ShaderObjectInfo( 2770, 'FDiffuseColorCorectSimple', 0xecb66, [] )
FDiffuseColorCorect = ShaderObjectInfo( 2771, 'FDiffuseColorCorect', 0x35363, [] )
FDiffuseColorCorectSH = ShaderObjectInfo( 2772, 'FDiffuseColorCorectSH', 0x3d94c, [] )
FDiffuseColorCorectLightMap = ShaderObjectInfo( 2773, 'FDiffuseColorCorectLightMap', 0x12bf7, [] )
FDiffuseColorCorectBone = ShaderObjectInfo( 2774, 'FDiffuseColorCorectBone', 0x28c3b, [] )
FSpecularMaskToon = ShaderObjectInfo( 2775, 'FSpecularMaskToon', 0x9ddd7, [] )
FToonShaderUroko = ShaderObjectInfo( 2776, 'FToonShaderUroko', 0xc40dc, [] )
FWorldCoordinateSimple = ShaderObjectInfo( 2777, 'FWorldCoordinateSimple', 0xe054a, [] )
FWorldCoordinateSimple2 = ShaderObjectInfo( 2778, 'FWorldCoordinateSimple2', 0xd70b, [] )
_FinalCombinerUI = ShaderObjectInfo( 2779, '_FinalCombinerUI', 0x95080, [] )
VS_MaterialUI = ShaderObjectInfo( 2780, 'VS_MaterialUI', 0xc5ee1, [] )
PS_MaterialUI = ShaderObjectInfo( 2781, 'PS_MaterialUI', 0x9813c, [] )
VS_MaterialStgSimple = ShaderObjectInfo( 2782, 'VS_MaterialStgSimple', 0x69401, [] )
PS_MaterialStgSimple = ShaderObjectInfo( 2783, 'PS_MaterialStgSimple', 0x509d4, [] )
PS_MaterialStgSimple2 = ShaderObjectInfo( 2784, 'PS_MaterialStgSimple2', 0x8244, [] )
PS_MaterialChar = ShaderObjectInfo( 2785, 'PS_MaterialChar', 0xcf412, [] )
PS_MaterialCharAlpha = ShaderObjectInfo( 2786, 'PS_MaterialCharAlpha', 0xd8ed5, [] )
FFilterCopyColorWhiteBlackUser = ShaderObjectInfo( 2787, 'FFilterCopyColorWhiteBlackUser', 0x2e972, [] )
FFilterCopyColorNega = ShaderObjectInfo( 2788, 'FFilterCopyColorNega', 0xcffc4, [] )
FFilterCopyColorMono = ShaderObjectInfo( 2789, 'FFilterCopyColorMono', 0x443b2, [] )
FFilterSimpleHatching = ShaderObjectInfo( 2790, 'FFilterSimpleHatching', 0x74b09, [] )
VS_TVNoisePrimitive = ShaderObjectInfo( 2791, 'VS_TVNoisePrimitive', 0x43b57, [] )
PS_TVNoisePrimitive = ShaderObjectInfo( 2792, 'PS_TVNoisePrimitive', 0x83044, [] )
VS_MaterialFurSell = ShaderObjectInfo( 2793, 'VS_MaterialFurSell', 0xde962, [] )
FFilterAntiEdgeBrightnessDetectionSub = ShaderObjectInfo( 2794, 'FFilterAntiEdgeBrightnessDetectionSub', 0xa486b, [] )
FFilterAntiEdgeBrightnessDetectionFastSub = ShaderObjectInfo( 2795, 'FFilterAntiEdgeBrightnessDetectionFastSub', 0xf3b4a, [] )
FFilterAntiEdgeBrightnessDetection = ShaderObjectInfo( 2796, 'FFilterAntiEdgeBrightnessDetection', 0xce716, [] )
FFilterAntiEdgeBrightnessDetectionFast = ShaderObjectInfo( 2797, 'FFilterAntiEdgeBrightnessDetectionFast', 0x78ac, [] )
FFilterAntiEdgeBrightness = ShaderObjectInfo( 2798, 'FFilterAntiEdgeBrightness', 0xc00c8, [] )
FFilterAntiEdgeBrightnessEdgeColorOnly = ShaderObjectInfo( 2799, 'FFilterAntiEdgeBrightnessEdgeColorOnly', 0xcfe2, [] )
FFilterAnaglyphEdge = ShaderObjectInfo( 2800, 'FFilterAnaglyphEdge', 0x37011, [] )
FFilterAnaglyphEdgeGrayScale = ShaderObjectInfo( 2801, 'FFilterAnaglyphEdgeGrayScale', 0x5ad55, [] )
FFilterDistortion = ShaderObjectInfo( 2802, 'FFilterDistortion', 0x6e90d, [] )
FFilterDistortionColor = ShaderObjectInfo( 2803, 'FFilterDistortionColor', 0x59e19, [] )
TSystem = ShaderObjectInfo( 2804, 'TSystem', 0xa583b, [] )
TProceduralTexture = ShaderObjectInfo( 2805, 'TProceduralTexture', 0x3d31e, [] )
TAntialiasing = ShaderObjectInfo( 2806, 'TAntialiasing', 0x47bf2, [] )
TFilter = ShaderObjectInfo( 2807, 'TFilter', 0x316ad, [] )
TSMAA = ShaderObjectInfo( 2808, 'TSMAA', 0xdd074, [] )
TDevelop = ShaderObjectInfo( 2809, 'TDevelop', 0xb3467, [] )
TCollision = ShaderObjectInfo( 2810, 'TCollision', 0xf0408, [] )
TMaterialNull = ShaderObjectInfo( 2811, 'TMaterialNull', 0x4af70, [] )
TMaterialDummy = ShaderObjectInfo( 2812, 'TMaterialDummy', 0x10fdc, [] )
TDummy = ShaderObjectInfo( 2813, 'TDummy', 0x53e9b, [] )
TMaterialDummyEdge = ShaderObjectInfo( 2814, 'TMaterialDummyEdge', 0x8a043, [] )
TMaterialDummyPicker = ShaderObjectInfo( 2815, 'TMaterialDummyPicker', 0x48a50, [] )
TMaterialDebug = ShaderObjectInfo( 2816, 'TMaterialDebug', 0xba44, [] )
TMotionBlurFilter = ShaderObjectInfo( 2817, 'TMotionBlurFilter', 0x94525, [] )
TMaterialVelocity = ShaderObjectInfo( 2818, 'TMaterialVelocity', 0x76b01, [] )
TMaterialVelocityEdge = ShaderObjectInfo( 2819, 'TMaterialVelocityEdge', 0x54393, [] )
TMaterialOutline = ShaderObjectInfo( 2820, 'TMaterialOutline', 0x90af1, [] )
TShadowReceive = ShaderObjectInfo( 2821, 'TShadowReceive', 0x66f2a, [] )
TDualParaboloid = ShaderObjectInfo( 2822, 'TDualParaboloid', 0x3d37b, [] )
TDeferredLighting = ShaderObjectInfo( 2823, 'TDeferredLighting', 0x87a4a, [] )
TReflectiveShadowMap = ShaderObjectInfo( 2824, 'TReflectiveShadowMap', 0x85f0, [] )
TMaterialStd = ShaderObjectInfo( 2825, 'TMaterialStd', 0x25fcf, [] )
TAdhesion = ShaderObjectInfo( 2826, 'TAdhesion', 0xe04e, [] )
TMaterialSSS = ShaderObjectInfo( 2827, 'TMaterialSSS', 0xa48a5, [] )
TMaterialStdEst = ShaderObjectInfo( 2828, 'TMaterialStdEst', 0xc111e, [] )
TModelFog = ShaderObjectInfo( 2829, 'TModelFog', 0xd9f30, [] )
TMaterialConstant = ShaderObjectInfo( 2830, 'TMaterialConstant', 0x56870, [] )
TMaterialStdPN = ShaderObjectInfo( 2831, 'TMaterialStdPN', 0x9f515, [] )
TMaterialStdPH = ShaderObjectInfo( 2832, 'TMaterialStdPH', 0xa5020, [] )
TMaterialStdDM = ShaderObjectInfo( 2833, 'TMaterialStdDM', 0xe73fa, [] )
TMaterialStdCafeTes = ShaderObjectInfo( 2834, 'TMaterialStdCafeTes', 0xf46ba, [] )
TShadowCast = ShaderObjectInfo( 2835, 'TShadowCast', 0x17e15, [] )
TRadialBlurFilter = ShaderObjectInfo( 2836, 'TRadialBlurFilter', 0x85247, [] )
TTVNoiseFilter = ShaderObjectInfo( 2837, 'TTVNoiseFilter', 0xf34e7, [] )
TVarianceFilter = ShaderObjectInfo( 2838, 'TVarianceFilter', 0x94385, [] )
TBloomFilter = ShaderObjectInfo( 2839, 'TBloomFilter', 0x236fc, [] )
TImagePlaneFilter = ShaderObjectInfo( 2840, 'TImagePlaneFilter', 0x135f0, [] )
TLogAverage = ShaderObjectInfo( 2841, 'TLogAverage', 0xf29d7, [] )
TCubeMapFilter = ShaderObjectInfo( 2842, 'TCubeMapFilter', 0x54624, [] )
TGSDOFFilter = ShaderObjectInfo( 2843, 'TGSDOFFilter', 0x55045, [] )
TSSAO = ShaderObjectInfo( 2844, 'TSSAO', 0xd7309, [] )
TTangentFilter = ShaderObjectInfo( 2845, 'TTangentFilter', 0x664db, [] )
TPrimitive = ShaderObjectInfo( 2846, 'TPrimitive', 0xdea6d, [] )
TPrimitive2D = ShaderObjectInfo( 2847, 'TPrimitive2D', 0xd2659, [] )
TWater = ShaderObjectInfo( 2848, 'TWater', 0x2d87e, [] )
TGUI = ShaderObjectInfo( 2849, 'TGUI', 0xd7376, [] )
TTextureBlend = ShaderObjectInfo( 2850, 'TTextureBlend', 0x78108, [] )
TGPUParticle = ShaderObjectInfo( 2851, 'TGPUParticle', 0x5f420, [] )
TLightShaft = ShaderObjectInfo( 2852, 'TLightShaft', 0x66677, [] )
TGrass = ShaderObjectInfo( 2853, 'TGrass', 0xc5357, [] )
TGrassOutsourceing = ShaderObjectInfo( 2854, 'TGrassOutsourceing', 0xef994, [] )
TGrassDummy = ShaderObjectInfo( 2855, 'TGrassDummy', 0xc28e5, [] )
TGrassShadowDummy = ShaderObjectInfo( 2856, 'TGrassShadowDummy', 0x172f3, [] )
TMirage = ShaderObjectInfo( 2857, 'TMirage', 0xa401c, [] )
TSimWaterSimpleTex = ShaderObjectInfo( 2858, 'TSimWaterSimpleTex', 0x6f49f, [] )
TSoftBody = ShaderObjectInfo( 2859, 'TSoftBody', 0xee2da, [] )
TTattoo = ShaderObjectInfo( 2860, 'TTattoo', 0x905df, [] )
TBuilder = ShaderObjectInfo( 2861, 'TBuilder', 0x79401, [] )
TSky = ShaderObjectInfo( 2862, 'TSky', 0xe530b, [] )
TAmbientShadow = ShaderObjectInfo( 2863, 'TAmbientShadow', 0x543d7, [] )
TOcclusionQuery = ShaderObjectInfo( 2864, 'TOcclusionQuery', 0xb0751, [] )
TReCalcNormal = ShaderObjectInfo( 2865, 'TReCalcNormal', 0xf1cca, [] )
TMirror = ShaderObjectInfo( 2866, 'TMirror', 0x52fa, [] )
TInfParticle = ShaderObjectInfo( 2867, 'TInfParticle', 0x591ba, [] )
TMaterialUI = ShaderObjectInfo( 2868, 'TMaterialUI', 0x44e9b, [] )
TMaterialStgSimple = ShaderObjectInfo( 2869, 'TMaterialStgSimple', 0xe74c2, [] )
TMaterialStgSimple2 = ShaderObjectInfo( 2870, 'TMaterialStgSimple2', 0x90c68, [] )
TMaterialChar = ShaderObjectInfo( 2871, 'TMaterialChar', 0x104a0, [] )
TMaterialCharAlpha = ShaderObjectInfo( 2872, 'TMaterialCharAlpha', 0x6f3c3, [] )
TTVNoisePrimitive = ShaderObjectInfo( 2873, 'TTVNoisePrimitive', 0x73ab4, [] )
TMaterialFurSell = ShaderObjectInfo( 2874, 'TMaterialFurSell', 0x97137, [] )
_add( _EMPTY_ )
_add( IASystemCopy )
_add( IASystemClear )
_add( IAFilter )
_add( IAFilter0 )
_add( IAFilter1 )
_add( IAFilter2 )
_add( IADevelopPrim2D )
_add( IADevelopPrim3D )
_add( IACollisionInput )
_add( IASwing )
_add( IASwing2 )
_add( IASwingHighPrecision )
_add( IASwing2HighPrecision )
_add( IAInstancing )
_add( IAInstancingColor )
_add( IALatticeDeform )
_add( IATetraDeform )
_add( IATetraDeform2 )
_add( IASkinBridge1wt )
_add( IASkinBridge2wt )
_add( IASkinBridge4wt )
_add( IASkinBridge8wt )
_add( IASkinBridge4wt4M )
_add( IASkinTB1wt )
_add( IASkinTBN1wt )
_add( IASkinTBC1wt )
_add( IASkinTBNLA1wt )
_add( IASkinTB2wt )
_add( IASkinTBN2wt )
_add( IASkinTBC2wt )
_add( IASkinTBNLA2wt )
_add( IASkinTB4wt )
_add( IASkinTBN4wt )
_add( IASkinTBC4wt )
_add( IASkinTBNLA4wt )
_add( IASkinTB8wt )
_add( IASkinTBN8wt )
_add( IASkinTBC8wt )
_add( IASkinTBNLA8wt )
_add( IANonSkinTB )
_add( IANonSkinTBC )
_add( IANonSkinTBL )
_add( IANonSkinTBL_LA )
_add( IANonSkinTBN )
_add( IANonSkinTBA )
_add( IANonSkinTBNC )
_add( IANonSkinTBNL )
_add( IANonSkinTBNL_LA )
_add( IANonSkinTBNA )
_add( IANonSkinTBLA )
_add( IANonSkinTBCA )
_add( IANonSkinTBNCA )
_add( IANonSkinTBNLA )
_add( IANonSkinB )
_add( IANonSkinBC )
_add( IANonSkinBL )
_add( IANonSkinBL_LA )
_add( IANonSkinBA )
_add( IANonSkinBLA )
_add( IANonSkinBCA )
_add( IASkinOTB_4WT_4M )
_add( IANonSkinTBN_4M )
_add( IASkinVelocytyEdge )
_add( IADualParaboloid )
_add( IA_DeferredLighting_LightVolume )
_add( IAPrimitiveCloudBillboard )
_add( IAPrimitiveCloud )
_add( IAPrimitiveSprite )
_add( IAPrimitiveNT )
_add( IAPrimitivePolyline )
_add( IAPrimitivePolygon )
_add( IACubeMapFilter )
_add( IAGSDOFFilter )
_add( IABokeh )
_add( IAWater )
_add( IAWaterRipple )
_add( IAGUI )
_add( IATextureBlend )
_add( IAGPUParticle )
_add( IAGPULineParticle )
_add( IAGPUPolylineParticle )
_add( IALightShaftInput )
_add( IAGrass )
_add( IAGrassHicomp )
_add( IAGrassHicomp2 )
_add( IAGrassPoint )
_add( IAGrassLowest )
_add( IAGrassSPU )
_add( IAGrassOutsourcing )
_add( IAGrassOutsourcingF32 )
_add( IAMirage )
_add( IASimWaterForViewInput )
_add( IASoftBodyQuad )
_add( IASoftBodyVertex )
_add( IASoftBodyDecouple )
_add( IASoftBodyVertexNoVTF )
_add( IASoftBodyVertexPS3 )
_add( IASoftBodyDecoupleNoVTF )
_add( IATattooBlend2D )
_add( IABuilder )
_add( IASky )
_add( IAAstralBody )
_add( IASkyStar )
_add( IAAmbientShadow )
_add( IAVertexIndexF32 )
_add( IAVertexIndexF16 )
_add( IATriangleF32 )
_add( IATriangleF16 )
_add( IAInfParticle )
_add( IATVNoisePrimitive )
_add( IATVNoisePrimitiveVColor )
_add( IA_SYSTEM_COPY )
_add( IA_SYSTEM_CLEAR )
_add( SYSTEM_OUTPUT )
_add( SYSTEM_DEPTHOUT )
_add( SYSTEM_MRT2 )
_add( SYSTEM_MRT3 )
_add( SYSTEM_MRT4 )
_add( PROCEDURAL_TEXTURE_OUT )
_add( IA_FILTER )
_add( IA_FILTER0 )
_add( IA_FILTER1 )
_add( IA_FILTER2 )
_add( FILTER_OUT )
_add( FILTER_INPUT )
_add( FILTER_OUTPUT_16 )
_add( SMAA_OUTPUT )
_add( IA_DEVELOP_PRIM2D )
_add( IA_DEVELOP_PRIM3D )
_add( DEVELOP_OUTPUT )
_add( IA_COLLISION_VS_INPUT )
_add( COLLISION_OUT )
_add( MATERIAL_CONTEXT )
_add( FOG_OUT )
_add( SKINNING_INPUT )
_add( LIGHT_PARAM )
_add( LIGHT_OUTPUT )
_add( DEFERRED_LIGHTING_RESULT )
_add( MATERIAL_INPUT )
_add( MORPH_INPUT )
_add( SOFTBODY_INPUT )
_add( LATTICE_DEFORM_INPUT )
_add( SWING_INPUT )
_add( INSTANCING_INPUT )
_add( PROJECTION_INPUT )
_add( MATERIAL_OUTPUT )
_add( MATERIAL_HS_INPUT )
_add( MATERIAL_HS_OUTPUT )
_add( MATERIAL_OUTPUT_EX )
_add( IA_SWING )
_add( IA_SWING2 )
_add( IA_SWING_HIGH_PRECISION )
_add( IA_SWING2_HIGH_PRECISION )
_add( SWING_INFO )
_add( IA_INSTANCING )
_add( IA_INSTANCING_COLOR )
_add( IA_LATTICE_DEFORM )
_add( IA_TETRA_DEFORM )
_add( IA_TETRA_DEFORM2 )
_add( WORLD_COORDINATE_INPUT )
_add( IA_SKIN_BRIDGE_1WT )
_add( IA_SKIN_BRIDGE_2WT )
_add( IA_SKIN_BRIDGE_4WT )
_add( IA_SKIN_BRIDGE_8WT )
_add( IA_SKIN_BRIDGE_4WT_4M )
_add( IA_SKIN_TB_1WT )
_add( IA_SKIN_TBN_1WT )
_add( IA_SKIN_TBC_1WT )
_add( IA_SKIN_TBNLA_1WT )
_add( IA_SKIN_TB_2WT )
_add( IA_SKIN_TBN_2WT )
_add( IA_SKIN_TBC_2WT )
_add( IA_SKIN_TBNLA_2WT )
_add( IA_SKIN_TB_4WT )
_add( IA_SKIN_TBN_4WT )
_add( IA_SKIN_TBC_4WT )
_add( IA_SKIN_TBNLA_4WT )
_add( IA_SKIN_TB_8WT )
_add( IA_SKIN_TBN_8WT )
_add( IA_SKIN_TBC_8WT )
_add( IA_SKIN_TBNLA_8WT )
_add( IA_NONSKIN_TB )
_add( IA_NONSKIN_TBC )
_add( IA_NONSKIN_TBL )
_add( IA_NONSKIN_TBL_LA )
_add( IA_NONSKIN_TBN )
_add( IA_NONSKIN_TBA )
_add( IA_NONSKIN_TBNL )
_add( IA_NONSKIN_TBNL_LA )
_add( IA_NONSKIN_TBNC )
_add( IA_NONSKIN_TBNA )
_add( IA_NONSKIN_TBLA )
_add( IA_NONSKIN_TBCA )
_add( IA_NONSKIN_TBNCA )
_add( IA_NONSKIN_TBNLA )
_add( IA_NONSKIN_B )
_add( IA_NONSKIN_BC )
_add( IA_NONSKIN_BL )
_add( IA_NONSKIN_BL_LA )
_add( IA_NONSKIN_BA )
_add( IA_NONSKIN_BLA )
_add( IA_NONSKIN_BCA )
_add( IA_SKIN_OTB_4WT_4M )
_add( IA_NONSKIN_TBN_4M )
_add( MATERIAL_VELOCITY_OUTPUT )
_add( IA_SKIN_VELOCITY_EDGE )
_add( OUTLINE_DETECTOR )
_add( MATERIAL_OUTLINE_OUTPUT )
_add( ShadowReceiveParam )
_add( ShadowReceiveContext )
_add( SHADOWRECEIVE_OUTPUT )
_add( SHADOWRECEIVE_DEFERRED_OUTPUT )
_add( IA_DUAL_PARABOLOID )
_add( DUAL_PARABOLOID_OUTPUT )
_add( DEFERRED_LIGHTING_GEOMETRY_PARAMETER )
_add( DIFERRED_LIGHTING_MRT )
_add( DEFERRED_LIGHTING_GBUFFER_PASS_VS_OUTPUT )
_add( IA_DEFERRED_LIGHTING_LIGHT_VOLUME )
_add( DEFERRED_LIGHTING_LIGHT_VOLUME_VS_OUTPUT )
_add( DEFERRED_LIGHTING_LIGHT_VOLUME_MRT_PS_OUTPUT )
_add( RSM_PARAM )
_add( RSM_OUTPUT )
_add( ADHESION_INPUT )
_add( ADHESION_OUTPUT )
_add( ADHESION_OUTPUT_PV )
_add( HS_PN_CONSTANT )
_add( HS_PH_CONSTANT )
_add( MATERIAL_PH_OUTPUT )
_add( HS_DM_CONSTANT )
_add( SHADOWCAST_INPUT )
_add( SHADOWCAST_OUTPUT )
_add( IA_PRIMITIVE_CLOUD_BILLBOARD )
_add( IA_PRIMITIVE_CLOUD )
_add( IA_PRIMITIVE_SPRITE )
_add( IA_PRIMITIVE_NT )
_add( IA_PRIMITIVE_POLYLINE )
_add( IA_PRIMITIVE_POLYGON )
_add( PRIMITIVE_VS_INPUT )
_add( PRIMITIVE_VS_OUTPUT )
_add( PRIMITIVE_HS_INPUT )
_add( PRIMITIVE_HS_CONST_DATA )
_add( PRIMITIVE_HS_CONTROL_POINT )
_add( PRIMITIVE_DS_OUTPUT )
_add( PRIMITIVE_DC_OUTPUT )
_add( RADIAL_BLUR_OUTPUT )
_add( TVNOISE_FILTER_OUTPUT )
_add( VARIANCE_FILTER_OUTPUT )
_add( CUBEMAP_VARIANCE_FILTER_OUTPUT )
_add( BLOOM_FILTER_OUTPUT )
_add( IMAGE_PLANE_FILTER_OUT )
_add( IA_CUBEMAP_FILTER )
_add( CUBEMAP_FILTER_OUTPUT )
_add( IA_GSDOFFILTER )
_add( VS_DOF_INPUT )
_add( GS_DOF_INPUT )
_add( PS_DOF_INPUT )
_add( GS_DOF_OUTPUT )
_add( SSAO_OUTPUT )
_add( SSAO_NORMAL_OUT )
_add( IA_BOKEH )
_add( TANGENT_FILTER_OUT )
_add( PRIM_FOG_OUT )
_add( PRIM_EYE_OUT )
_add( PRIM_NTB_OUT )
_add( IA_WATER )
_add( IA_WATER_VCOLOR )
_add( IA_WATER_RIPPLE )
_add( WATER_OUTPUT )
_add( WATER_RIPPLE_OUTPUT )
_add( WATER_POSITION_OUTPUT )
_add( IA_GUI )
_add( VS_OUT_GUI )
_add( IA_TEXTURE_BLEND )
_add( TEXTURE_BLEND_OUTPUT )
_add( IA_GPU_PARTICLE )
_add( IA_GPU_LINE_PARTICLE )
_add( IA_GPU_POLYLINE_PARTICLE )
_add( GPU_PARTICLE_VS_INPUT )
_add( GPU_PARTICLE_PS_INPUT )
_add( IA_LIGHTSHAFT_INPUT )
_add( LIGHTSHAFT_OUTPUT )
_add( IA_GRASS )
_add( IA_GRASS_HICOMP )
_add( IA_GRASS_HICOMP2 )
_add( IA_GRASS_LOWEST )
_add( IA_GRASS_POINT )
_add( GRASS_INPUT )
_add( GRASS_OUTPUT )
_add( GRASS_SHADOWRECEIVE_OUTPUT )
_add( DYNAMICEDIT_INPUT )
_add( DYNAMICEDIT_OUTPUT )
_add( GRASS_INFOMATION )
_add( GRASS_REFLECTION )
_add( DEFERRED_MATERIAL_PS_OUTPUT )
_add( IA_GRASS_SPU_INPUT )
_add( IA_GRASS_OUTSOURCING )
_add( IA_GRASS_OUTSOURCING_F32 )
_add( GRASS_SPU_INPUT )
_add( GRASS_OUTSOURCING_INPUT )
_add( IA_MIRAGEFILTER )
_add( MIRAGE_FILTER_VS_INPUT )
_add( MIRAGE_FILTER_PS_INPUT )
_add( MIRAGE_HEAT_VS_INPUT )
_add( MIRAGE_HEAT_PS_INPUT )
_add( IA_SIMWATER_FOR_VIEW_VS_INPUT )
_add( SIMWATER_FOR_VIEW_VS_OUTPUT )
_add( SIMWATER_FOR_VIEW_PS_INPUT )
_add( IA_SOFTBODY_QUAD )
_add( IA_SOFTBODY_VERTEX )
_add( IA_SOFTBODY_DECOUPLE )
_add( IA_SOFTBODY_VERTEX_NOVTF )
_add( IA_SOFTBODY_VERTEX_PS3 )
_add( IA_SOFTBODY_DECOUPLE_NOVTF )
_add( SB_IC_OUTPUT )
_add( SB_INPUT )
_add( SB_OUTPUT )
_add( SB_OUTPUT2 )
_add( SB_PSMRTOUT )
_add( SB_PSMRTOUT2 )
_add( SB_PSMRTOUT3 )
_add( TATTOO_OUTPUT )
_add( IA_TATTOO_BLEND2D )
_add( TATTOO_BLEND2D_OUTPUT )
_add( IA_BUILDER )
_add( BUILDER_VS_INPUT )
_add( BUILDER_PS_INPUT )
_add( IA_SKY )
_add( IA_ASTRAL_BODY )
_add( SKY_MAP_VS_OUT )
_add( SKY_OUT )
_add( ASTRAL_BODY_VS_OUT )
_add( IA_SKY_STAR )
_add( SKY_STAR_OUT )
_add( SKY_STARRY_SKY_OUT )
_add( IA_AMBIENT_SHADOW )
_add( AMBIENT_SHADOW_OUT )
_add( OCCLUSION_QUERY_VS_OUTPUT )
_add( MRTOutput )
_add( MRTOutput3T )
_add( IA_VERTEX_INDEX_F32 )
_add( IA_VERTEX_INDEX_F16 )
_add( TRIANGLE_INPUT )
_add( TRIANGLE_OUTPUT )
_add( IA_TRIANGLE_INDEX_F32 )
_add( IA_TRIANGLE_INDEX_F16 )
_add( MIRROR_OUTPUT )
_add( MIRROR_FILTER )
_add( IA_INF_PARTICLE )
_add( INF_PARTICLE_VS_INPUT )
_add( INF_PARTICLE_PS_INPUT )
_add( IA_TVNoisePrimitive )
_add( IA_TVNoisePrimitive_VCOLOR )
_add( TVNoisePrimitive_OUTPUT )
_add( _DOLLAR_Globals )
_add( ComputeVals )
_add( CBViewProjection )
_add( CBScreen )
_add( CBViewProjectionPF )
_add( CBViewFrustum )
_add( CBWorld )
_add( CBTest )
_add( CBPicker )
_add( CBMipLevel )
_add( CBHDRFactor )
_add( CBROPTest )
_add( CBBlendFactor )
_add( SSPoint )
_add( SSLinear )
_add( SSAnisotoropic )
_add( SSWrapPoint )
_add( SSWrapLinear )
_add( SSWrapAnisotoropic )
_add( SSBorderPoint )
_add( SSBorderLinear )
_add( SSLinearMipPoint )
_add( SSClampPoint )
_add( SSClampLinear )
_add( BSDefault )
_add( BSSolid )
_add( BSSolidEx )
_add( BSBlendAlpha )
_add( BSComposite )
_add( BSInvComposite )
_add( BSBlendInvAlpha )
_add( BSAdd )
_add( BSMul )
_add( BSAddAlpha )
_add( BSAddInvAlpha )
_add( BSBlendFactor )
_add( BSBlendFactorAlpha )
_add( BSMax )
_add( BSNoWrite )
_add( BSAZero )
_add( BSAAdd )
_add( BSASub )
_add( BSAInvert )
_add( BSRGBWrite )
_add( BSRWrite )
_add( BSGWrite )
_add( BSBWrite )
_add( BSAWrite )
_add( BSAddColor )
_add( BSBlendColor )
_add( BSRevSubAlpha )
_add( BSRevSubInvAlpha )
_add( BSRevSubBlendAlpha )
_add( BSRevSubColor )
_add( BSRevSubBlendColor )
_add( BSRevSub )
_add( BSAddAlphaRGB )
_add( BSBlendAlphaRGB )
_add( BSAddColorRGB )
_add( BSBlendColorRGB )
_add( BSAddRGB )
_add( BSRevSubAlphaRGB )
_add( BSRevSubBlendAlphaRGB )
_add( BSRevSubColorRGB )
_add( BSRevSubBlendColorRGB )
_add( BSRevSubRGB )
_add( BSMinAlpha )
_add( BSMaxAlpha )
_add( BSMinAlphaRGB )
_add( BSMaxAlphaRGB )
_add( BSBlendAlphaEx )
_add( BSAddAlphaEx )
_add( BSBlendColorEx )
_add( BSAddColorEx )
_add( BSAccumulateColorAlpha )
_add( DSDefault )
_add( DSZTestWrite )
_add( DSZTestWriteGT )
_add( DSZTest )
_add( DSZWrite )
_add( DSZWriteStencilWrite )
_add( DSZTestWriteStencilWrite )
_add( DSZTestStencilWrite )
_add( DSStencilWrite )
_add( RSDefault )
_add( RSMesh )
_add( RSMeshBias1 )
_add( RSMeshBias2 )
_add( RSMeshBias3 )
_add( RSMeshBias4 )
_add( RSMeshBias5 )
_add( RSMeshBias6 )
_add( RSMeshBias7 )
_add( RSMeshBias8 )
_add( RSMeshBias9 )
_add( RSMeshBias10 )
_add( RSMeshBias11 )
_add( RSMeshBias12 )
_add( RSMeshCF )
_add( RSMeshCN )
_add( RSPrim )
_add( RSScissorMesh )
_add( RSScissorPrim )
_add( RSWireFrame )
_add( CBSystemGamma )
_add( CBSystemMipTarget )
_add( CBSystemNormalSlope )
_add( CBSystemDepthCopy )
_add( CBHDREmphasis )
_add( CBSystemStencilRouting )
_add( SSSystemCopy )
_add( BSMRTWrite0001 )
_add( BSMRTWrite0010 )
_add( BSMRTWrite0011 )
_add( BSMRTWrite0100 )
_add( BSMRTWrite0101 )
_add( BSMRTWrite0110 )
_add( BSMRTWrite0111 )
_add( BSMRTWrite1000 )
_add( BSMRTWrite1001 )
_add( BSMRTWrite1010 )
_add( BSMRTWrite1011 )
_add( BSMRTWrite1100 )
_add( BSMRTWrite1101 )
_add( BSMRTWrite1110 )
_add( SSProcedural )
_add( DSFilterStencilEqual )
_add( CBFilter )
_add( SSFilter )
_add( CBHermiteCurve )
_add( CBSMAA )
_add( CBDevelopFlags )
_add( SSDevelop )
_add( BSBlendAddAlpha )
_add( BSBlendBlendAlpha )
_add( BSBlendAddColor )
_add( BSBlendBlendColor )
_add( BSBlendAdd )
_add( BSBlendRevSubAlpha )
_add( BSBlendRevSubBlendAlpha )
_add( BSBlendRevSubColor )
_add( BSBlendRevSubBlendColor )
_add( BSBlendRevSub )
_add( BSBlendMinAlpha )
_add( BSBlendMaxAlpha )
_add( BSBlendNoBlend )
_add( BSBlendAddAlphaRGB )
_add( BSBlendBlendAlphaRGB )
_add( BSBlendAddColorRGB )
_add( BSBlendBlendColorRGB )
_add( BSBlendAddRGB )
_add( BSBlendRevSubAlphaRGB )
_add( BSBlendRevSubBlendAlphaRGB )
_add( BSBlendRevSubColorRGB )
_add( BSBlendRevSubBlendColorRGB )
_add( BSBlendRevSubRGB )
_add( BSBlendMinAlphaRGB )
_add( BSBlendMaxAlphaRGB )
_add( BSBlendAddDestColor )
_add( BSBlendBlendAddDestColor )
_add( BSBlendBlendAddDestAlpha )
_add( BSBlendAddDestColorRGB )
_add( BSBlendBlendAddDestColorRGB )
_add( BSBlendBlendAddDestAlphaRGB )
_add( BSBlendNoBlendRGB )
_add( CBLocalWind )
_add( CBMaterial )
_add( CBFog )
_add( CBBlendFog )
_add( BSFogBlend )
_add( CBSkinning )
_add( CBJointMatrix )
_add( CBJointMatrixPF )
_add( CBJointMatrixEx )
_add( CBAmbient )
_add( CBLightGroup )
_add( CBDeferredLightingDiscontinuitySensitiveFiltering )
_add( CBDynamicLighting )
_add( CBDynamicLightingDL )
_add( SSTransparencyMap )
_add( SSAlbedoMap )
_add( SSAlbedoMapClamp )
_add( SSOcclusionMap )
_add( SSNormalMap )
_add( SSNormalMapClamp )
_add( SSDetailNormalMap )
_add( SSParallaxHeightMap )
_add( CBLightMask )
_add( SSLightMap )
_add( SSThinMap )
_add( CBChannelBlend )
_add( SSFresnelMap )
_add( SSEnvMap )
_add( SSEnvMapLODBias1 )
_add( SSEnvMapLODBias2 )
_add( SSEnvMapLODBias3 )
_add( SSEnvMapLODBias4 )
_add( SSEnvMapLODBias5 )
_add( SSSphereMap )
_add( SSSpecularMap )
_add( SSSpecularMapClamp )
_add( SSShininessMap )
_add( SSEmissionMap )
_add( CBDistortion )
_add( CBDistortionRefract )
_add( SSDistortionMap )
_add( CBDissolve )
_add( SSDisolveMap )
_add( CBSwing1Weight )
_add( CBSwing2Weight )
_add( CBQuantCompress )
_add( CBSwingBillboard )
_add( CBInstanceMatrix )
_add( CBInstanceID )
_add( CBInstanceShadowCasterCache )
_add( CBLatticeDeform )
_add( CBMorph )
_add( SSWrapOneLinear )
_add( CBVertexDisplacement )
_add( CBVertexDisplacement2 )
_add( CBVertexDisplacement3 )
_add( CBVertexDisplacementWave )
_add( CBVertexDisplacementExplosion )
_add( CBVertexDisplacementRandUV )
_add( CBVertexDisplacementExplosionQuant )
_add( CBVertexDispMaskUV )
_add( CBVertexDispUV )
_add( CBVertexDisplacementDirExplosion )
_add( CBDebugView )
_add( CBMotionBlur )
_add( CBMaterialVelocity )
_add( BSOutlineModulate )
_add( BSOutlineBlend )
_add( CBOutlineFilter )
_add( CBOutlineMask )
_add( DSOutlineZTestStencilTest )
_add( DSOutlineZTestWriteStencilTest )
_add( CBShadowLight )
_add( CBShadowType )
_add( CBMultiShadow )
_add( CBShadowReceiverMode )
_add( CBShadowCasterRasterizerState )
_add( CBShadowCast )
_add( CBShadowCastOption )
_add( CBShadowFrustum )
_add( CBShadowReceive )
_add( SSShadowDepth )
_add( SSShadowDepthComp )
_add( SSShadowVariance )
_add( SSShadowVariance0 )
_add( SSShadowVariance1 )
_add( SSShadowVariance2 )
_add( SSShadowVariance3 )
_add( SSShadowVarianceMIP0 )
_add( BSShadowRecvSolidGroup0 )
_add( BSShadowRecvSolidGroup1 )
_add( BSShadowRecvTransparentGroup0 )
_add( BSShadowRecvTransparentGroup1 )
_add( BSShadowRecvMultiSolidGroup0 )
_add( BSShadowRecvMultiSolidGroup1 )
_add( BSShadowRecvMultiTransparentGroup0 )
_add( BSShadowRecvMultiTransparentGroup1 )
_add( BSShadowRecvZPass )
_add( CBDualParaboloid )
_add( DSDeferredLightingZWriteStencilTestRouted )
_add( DSDeferredLightingZTestStencilWriteDepthFail )
_add( DSDeferredLightingZTestStencilWriteDepthPass )
_add( DSDeferredLightingZTestStencilTest )
_add( DSDeferredLightingStencilTest )
_add( BSAccumulateColorAlphaMRT2 )
_add( BSMultiplyColorAlpha )
_add( BSMultiplyColorAlphaMRT2 )
_add( CBLightVolume )
_add( CBAmbientMask )
_add( BSAmbientMaskGroup0 )
_add( BSAmbientMaskGroup1 )
_add( BSAmbientMaskGroup2 )
_add( BSAmbientMaskGroup3 )
_add( BSAmbientMaskAlphaGroup0 )
_add( BSAmbientMaskAlphaGroup1 )
_add( BSAmbientMaskAlphaGroup2 )
_add( CBRSMIndirectLighting )
_add( CBAdhesion )
_add( CBMaterialSSS )
_add( CBMaterialSSSBlend )
_add( CBTessellation )
_add( SSDisplacementMap )
_add( CBDisplacement )
_add( CBShadowReceive0 )
_add( CBShadowReceive1 )
_add( CBShadowReceive2 )
_add( CBShadowReceive3 )
_add( CBBilateralFilter )
_add( CBPrimitiveDebug )
_add( CBPrimitiveView )
_add( CBPrimitiveCoord )
_add( CBPrimitiveEx )
_add( CBPrimitiveTessellationCmn )
_add( CBPrimitiveMetaDataFresnel )
_add( CBPrimitiveMetaDataUvClamp )
_add( CBPrimitiveMetaDataShade )
_add( CBPrimitiveMetaDataOcclusion )
_add( CBPrimitiveMetaDataLvCorrection )
_add( CBPrimitiveMetaDataLensFlare )
_add( CBCloudMetaData )
_add( CBPrimitiveModel )
_add( CBPrimitiveModelDistortion )
_add( CBPrimitiveTessellation )
_add( CBPrimitiveParallaxTess )
_add( CBPrimitiveParticleTess )
_add( SSPrimOcclusionMap )
_add( DSPrimStencilTestEQ )
_add( DSPrimStencilTestNEQ )
_add( DSPrimZTestStencilTestEQ )
_add( DSPrimZTestStencilTestNEQ )
_add( DSPrimZWriteStencilTestEQ )
_add( DSPrimZWriteStencilTestNEQ )
_add( DSPrimZTestWriteStencilTestEQ )
_add( DSPrimZTestWriteStencilTestNEQ )
_add( CBRadialBlurFilter )
_add( SSRadialFilterClampLinear )
_add( CBTVNoiseFilter )
_add( CBFishEyeFilter )
_add( CBColorCorrectMatrix )
_add( CBColorCorrectGamma )
_add( CBColorCorrectColor )
_add( SSVariance )
_add( CBBloomFilter )
_add( CBBloomGaussBlur )
_add( CBLightScattering )
_add( CBImagePlane )
_add( CBHazeFilter )
_add( CBToneMapFilter )
_add( CBCubeMapFilter )
_add( CBDOFFilter )
_add( CBSSAOFFilter )
_add( CBSSAOFFilterLinearDepth )
_add( CBSSAOFFilterIntensity )
_add( BSSSAO )
_add( CBBokehComposite )
_add( CBFilterEdgeAntiAliasing )
_add( CBGodRaysIterator )
_add( CBGodRaysFilter )
_add( SSP2O )
_add( BSGodRays )
_add( CBBlurMask )
_add( CBBlurMaskIntermediate )
_add( CBChromaticAberration )
_add( CBTangentFilter )
_add( CBBruteForceLightingParam )
_add( CBWaterWave )
_add( CBWaterNormal )
_add( CBWaterDetail )
_add( CBWaterFog )
_add( CBWaterCaustics )
_add( CBWaterBubble )
_add( CBWaterShadow )
_add( CBWaterRipple )
_add( CBWater )
_add( CBGUIGlobal )
_add( CBGUIMatrix )
_add( CBGUIStaticColor )
_add( CBGUIColor )
_add( CBGUIColorAttribute )
_add( CBGUICoord )
_add( CBGUIAlphaMask )
_add( CBGUIFontFilter )
_add( SSGUI )
_add( RSGUIScissorEnable )
_add( BSGUIAddColorRGB )
_add( BSGUIAddInvColor )
_add( BSGUIColorBlendAlphaAdd )
_add( BSGUIAlphaMaskWrite )
_add( BSGUIAlphaMaskUpdate )
_add( BSGUIAlphaMaskAdd )
_add( DSGUIStencilWrite )
_add( DSGUIStencilApply )
_add( DSGUIStencilApplyReverse )
_add( DSGUIStencilUpdate )
_add( DSGUIZTestStencilApply )
_add( DSGUIZTestStencilApplyReverse )
_add( DSGUIZTestStencilUpdate )
_add( DSGUIZWriteStencilApply )
_add( DSGUIZWriteStencilApplyReverse )
_add( DSGUIZWriteStencilUpdate )
_add( DSGUIZTestWriteStencilApply )
_add( DSGUIZTestWriteStencilApplyReverse )
_add( DSGUIZTestWriteStencilUpdate )
_add( CBProjectionTexture )
_add( CBTextureBlend )
_add( CBGPUParticleEx )
_add( CBGPUParticleTex )
_add( CBGPUParticleLvCorrection )
_add( CBLightShaft )
_add( CBMark )
_add( SSGrass )
_add( CBGrassCommon )
_add( CBGrassMaterial )
_add( CBGrassChain )
_add( CBGrassBillboard )
_add( CBGrassRoot )
_add( CBGrassGlobalWind )
_add( CBGrassUnit )
_add( CBGrassPointShadow )
_add( BSAddRWrite )
_add( BSAddGWrite )
_add( BSAddBWrite )
_add( BSAddAWrite )
_add( BSSubRWrite )
_add( BSSubGWrite )
_add( BSSubBWrite )
_add( BSSubAWrite )
_add( BSAlphaToCoverage )
_add( CBMirageCommon )
_add( CBMirageNoise )
_add( CBMirageRefract )
_add( CBMirageDepthBlend )
_add( BSRGWrite )
_add( BSBAWrite )
_add( DSZTestWriteBack )
_add( CBSoftBodySim )
_add( CBSoftBodyRtParam2 )
_add( CBSoftBodyDirectGrassWind )
_add( CBSoftBodyRtParam )
_add( CBSoftBodyQuad )
_add( CBSoftBodyCollision )
_add( CBSoftBodyWorldOffset )
_add( CBSoftBodyLWMatrix )
_add( CBSbViewProjection )
_add( CBSbExtrapolation )
_add( CBTattoo )
_add( CBSky )
_add( CBSkyFog )
_add( CBSkyAstralBody )
_add( CBSkyStar )
_add( CBSkyStarrySkyColor )
_add( CBAmbientShadow )
_add( DSAmbientShadow )
_add( BSAddMRT )
_add( CBMirror )
_add( CBInfParticleContext )
_add( CBInfParticleTexture )
_add( SSInfParticle )
_add( SSInfParticlePoint )
_add( SSIndirectMapUser )
_add( SSFrozenNoizeMapUser )
_add( CBIndirectUser )
_add( CBFrozenUser )
_add( SSMVC3AlbedoMap )
_add( SSMVC3AlbedoMapClamp )
_add( SSMVC3NormalMap )
_add( SSMVC3NormalMapClamp )
_add( SSMVC3TransparencyMap )
_add( SSMVC3SpecularMap )
_add( SSMVC3OcclusionMap )
_add( SSMVC3LightMap )
_add( SSTransparencyMapClamp )
_add( CBToon )
_add( CBToon2 )
_add( CBHalfLambert )
_add( CBDiffuseColorCorect )
_add( SSToonMap )
_add( CBHatchingFilter )
_add( CBFurSell )
_add( CBFilterAntiEdgeBrightness )
_add( SSAntiEdgeBrightnessMask )
_add( CBFilterAnaglyph )
_add( CBDistortionFilter )
_add( tBaseMap )
_add( tCubeMap )
_add( tDepthMap )
_add( tVolumeMap )
_add( tTestMap )
_add( tBlendMap )
_add( tReductionBlendMap )
_add( tOcclusionDepth )
_add( tTableMap )
_add( tVertexPositionMap )
_add( tVertexPositionSubMap )
_add( tVertexNormalMap )
_add( tVertexTangentMap )
_add( tProcedural1D0 )
_add( tProcedural1D1 )
_add( tProcedural1D2 )
_add( tProcedural1D3 )
_add( tProcedural2D0 )
_add( tProcedural2D1 )
_add( tProcedural2D2 )
_add( tProcedural2D3 )
_add( tFilterTempMap1 )
_add( tFilterTempMap2 )
_add( tFogTable )
_add( tFogTableVTF )
_add( tFogVolumeMap )
_add( tFogFrontDepth )
_add( tFogBackDepth )
_add( tFogFrontDepthSmall )
_add( tFogBackDepthSmall )
_add( tMatrixMap )
_add( tMatrixPFMap )
_add( tSpotLightTexture0 )
_add( tSpotLightTexture1 )
_add( tSpotLightTexture2 )
_add( tSpotLightTexture3 )
_add( tSpotLightTexture4 )
_add( tSpotLightTexture5 )
_add( tSpotLightTexture6 )
_add( tSpotLightTexture7 )
_add( tPointLightTexture0 )
_add( tPointLightTexture1 )
_add( tPointLightTexture2 )
_add( tPointLightTexture3 )
_add( tPointLightTexture4 )
_add( tPointLightTexture5 )
_add( tPointLightTexture6 )
_add( tPointLightTexture7 )
_add( tLightAccumulationTexture0 )
_add( tLightAccumulationTexture1 )
_add( tSpheremapLutTexture )
_add( tDSFBuffer )
_add( tTransparencyMap )
_add( tAlbedoMap )
_add( tAlbedoBlendMap )
_add( tOcclusionMap )
_add( tNormalMap )
_add( tNormalBlendMap )
_add( tDetailNormalMap )
_add( tDetailNormalMap2 )
_add( tDetailMaskMap )
_add( tHeightMap )
_add( tHairShiftMap )
_add( tLightMaskMap )
_add( tLightMap )
_add( tThinMap )
_add( tIndirectMap )
_add( tIndirectMaskMap )
_add( tFresnelMap )
_add( tEnvMap )
_add( tSphereMap )
_add( tGlobalEnvMap )
_add( tMaskMap )
_add( tSpecularMap )
_add( tSpecularBlendMap )
_add( tShininessMap )
_add( tEmissionMap )
_add( tDistortionMap )
_add( tNoise )
_add( tDepthTestMap )
_add( tWcVtfPos )
_add( tWcVtfPos1 )
_add( tWcVtfPrevPos )
_add( tWcVtfPrevPos1 )
_add( tShaderAttributes )
_add( tVtxDisplacement )
_add( tVtxDispMask )
_add( tShadowMapCombine )
_add( tShadowMapCombine0 )
_add( tShadowMapCombine1 )
_add( tShadowMapCombine2 )
_add( tShadowMapCombine3 )
_add( tVirtualCubeShadowFaceSelection )
_add( tVirtualCubeShadowFaceOffset )
_add( tVirtualCubeShadowIndirection )
_add( tFrontParaboloidMap )
_add( tBackParaboloidMap )
_add( tGBuffer )
_add( tComparisonTexture )
_add( tAmbientMaskMap )
_add( tReflectiveShadowMap0 )
_add( tReflectiveShadowMap1 )
_add( tIndirectLighting )
_add( tSSSDiffuseMap0 )
_add( tSSSDiffuseMap1 )
_add( tSSSDiffuseMap2 )
_add( tSSSDiffuseMap3 )
_add( tSSSDiffuseMap4 )
_add( tSSSDiffuseMap5 )
_add( tDisplacementMap )
_add( tDepthBiasMap )
_add( tDispersionMap )
_add( tPrimDepthMap )
_add( tPrimNormalMap )
_add( tPrimMaskMap )
_add( tPrimSceneMap )
_add( tPrimAlphaMap )
_add( tTVNoiseMap )
_add( tTVNoiseMaskMap )
_add( tColorCorrectTableMap )
_add( tCubeBlendMap )
_add( tDOFMap )
_add( tSSAONarrowMap )
_add( tSSAOWideMap )
_add( tSSAONormalMap )
_add( tSSAOReductionNormalMap )
_add( tSSAOBackFaceDepthMap )
_add( tTangentMap )
_add( tWaterRefraction )
_add( tWaterReflection )
_add( tWaterEnvironment )
_add( tWaterDetail )
_add( tWaterDetail2 )
_add( tWaterCaustics )
_add( tWaterBubble )
_add( tWaterBubble2 )
_add( tWaterBubbleMask )
_add( tWaterShadow )
_add( tWaterRipple )
_add( tWaterDepthMap )
_add( tWaterSurfaceMap )
_add( tWaterSurfaceMap2 )
_add( tGUIBaseMap )
_add( tGUIBlendMap )
_add( tGUIAlphaMap )
_add( tYUVDecoderY )
_add( tYUVDecoderU )
_add( tYUVDecoderV )
_add( tTextureBlendSource0 )
_add( tTextureBlendSource1 )
_add( tTextureBlendSourceCube0 )
_add( tTextureBlendSourceCube1 )
_add( tGrassAlbedoMap )
_add( tDynamicEditMap )
_add( tWindMap )
_add( tMirageDepthMap )
_add( tMirageSceneMap )
_add( tMirageRefractionMap )
_add( tMirageNoiseMap )
_add( tSimWaterForView )
_add( tSoftBodySrcTex1 )
_add( tSoftBodySrcTex2 )
_add( tSoftBodySrcTex3 )
_add( tSoftBodySrcTex4 )
_add( tSoftBodySrcTex5 )
_add( tSoftBodySrcTex6 )
_add( tSoftBodySrcTex7 )
_add( tSoftBodyTexSphere )
_add( tSoftBodyTexTriangle )
_add( tSoftBodyTexBox )
_add( tSoftBodyTexEllipsoid )
_add( tSoftBodyTexCapsule )
_add( tSoftBodyTexTerrain )
_add( tSoftBodyTexDepthNorm1 )
_add( tSoftBodyTexDepthNorm2 )
_add( tSoftBodyTexDepthNorm3 )
_add( tSoftBodyTexDepthNorm4 )
_add( tSoftBodyTexDepthNorm5 )
_add( tSoftBodyTexDepthNorm6 )
_add( tSoftBodyTexDepthNorm7 )
_add( tSoftBodyTexDepthNorm8 )
_add( tBuilderBaseMap )
_add( tRayleighDepthMap )
_add( tMieDepthMap )
_add( tRayleighScatterMap )
_add( tMieScatterMap )
_add( tCloudScatterMap )
_add( tStarrySkyMap )
_add( tAmbientShadowMap )
_add( tIndirectMapUser )
_add( tIndirectMapSpecularUser )
_add( tFrozenNoizeMapUser )
_add( tToonMap )
_add( tToonRevMap )
_add( rwTileMax )
_add( max4 )
_add( makeDirectionFromUV )
_add( easeIn )
_add( calcViewDepth )
_add( FLinearColor )
_add( FLinearColorSRGB )
_add( FFrontFaceNormal )
_add( FFrontFaceNormalTwoSidedLH )
_add( FFrontFaceReverseNormal )
_add( FFrontFaceReverseNormalTwoSidedLH )
_add( FViewProj )
_add( FUVProj )
_add( FDithering )
_add( FDitheringBayer10bit )
_add( FDitheringBayer8bit )
_add( VS_System )
_add( VS_SystemDownSample16 )
_add( FToneMap )
_add( FLuminance )
_add( FLuminanceEnable )
_add( FSystemCopy )
_add( FSystemCopyGamma )
_add( FSystemConvertHightMapToNormalMap )
_add( FSystemConvertHightMapToParallaxMap )
_add( FSystemConvertReverseHightMapToNormalMap )
_add( FSystemConvertReverseHightMapToParallaxMap )
_add( FSystemConvertBaseMapToNormalMap )
_add( FSystemMakeMipLevel )
_add( FSystemCacheCopyY )
_add( FSystemCacheCopyCb )
_add( FSystemCacheCopyCr )
_add( FSystemCacheDecodeCopy )
_add( PS_SystemCopy )
_add( PS_SystemDepthCopy )
_add( PS_SystemDepthDownSample )
_add( PS_SystemDepthHMax )
_add( PS_SystemDepthVMax )
_add( PS_SystemMiniDepthCopy )
_add( PS_SystemAACopy )
_add( PS_SystemToneMap )
_add( PS_SystemToneMapDepth )
_add( PS_SystemClear )
_add( PS_SystemClearMRT2 )
_add( PS_SystemClearMRT3 )
_add( PS_SystemClearMRT4 )
_add( PS_SystemDepthToAlpha )
_add( PS_SystemDepthToAlphaAA )
_add( PS_SystemDownSample4 )
_add( PS_SystemDownSample4Emphansis )
_add( PS_SystemDownSample4HDR )
_add( PS_SystemDownSample16 )
_add( PS_SystemOcclusionConvertZ )
_add( PS_SystemPS3AACopy )
_add( PS_SystemPS3AADepthCopy )
_add( PS_SystemPS3ZcullReload )
_add( PS_SystemClearStencilRouting )
_add( PS_SystemFillStencilRouting )
_add( FAlphaTest )
_add( FAlphaTestAlways )
_add( FAlphaTestNever )
_add( FAlphaTestGreater )
_add( FAlphaTestGreaterEqual )
_add( FAlphaTestLess )
_add( FAlphaTestLessEqual )
_add( FAlphaTestEqual )
_add( FAlphaTestNotEqual )
_add( FAlphaToCoverageROP )
_add( FAlphaToCoverage )
_add( encodeSRGB )
_add( FOutputEncode )
_add( FOutputEncodeNone )
_add( FOutputEncodeZero )
_add( FOutputEncodeDepth24 )
_add( FOutputEncodeRCRGB )
_add( FOutputEncodeRRRGB )
_add( FOutputEncodeRGBI )
_add( FOutputEncodeRRRGBI )
_add( FOutputEncodeNormal )
_add( FOutputEncodeVariance )
_add( FOutputEncodeSRGBRCRGB )
_add( FOutputEncodeSRGBRRRGBI )
_add( FOutputEncodeSRGBRRRGB )
_add( FOutputEncodeSRGB )
_add( FOutputEncodeSRGBRGBI )
_add( decodeSRGB )
_add( FProcedural1D1E0 )
_add( FProcedural1D1E1 )
_add( FProcedural1D1E2 )
_add( FProcedural1D1E3 )
_add( FProcedural1D2E0 )
_add( FProcedural1D2E1 )
_add( FProcedural1D2E2 )
_add( FProcedural1D2E3 )
_add( FProcedural1D3E0 )
_add( FProcedural1D3E1 )
_add( FProcedural1D3E2 )
_add( FProcedural1D3E3 )
_add( FProcedural1D4E0 )
_add( FProcedural1D4E1 )
_add( FProcedural1D4E2 )
_add( FProcedural1D4E3 )
_add( FProcedural2D1E0 )
_add( FProcedural2D1E1 )
_add( FProcedural2D1E2 )
_add( FProcedural2D1E3 )
_add( FProcedural2D2E0 )
_add( FProcedural2D2E1 )
_add( FProcedural2D2E2 )
_add( FProcedural2D2E3 )
_add( FProcedural2D3E0 )
_add( FProcedural2D3E1 )
_add( FProcedural2D3E2 )
_add( FProcedural2D3E3 )
_add( FProcedural2D4E0 )
_add( FProcedural2D4E1 )
_add( FProcedural2D4E2 )
_add( FProcedural2D4E3 )
_add( VS_ProceduralTexture )
_add( FProcedural1E )
_add( FProcedural2E )
_add( FProcedural3E )
_add( FProcedural4E )
_add( PS_ProceduralTextureUnorm )
_add( PS_ProceduralTextureSnorm )
_add( FxaaFilter )
_add( Fxaa3 )
_add( Fxaa3HQ )
_add( VS_FXAA )
_add( PS_FXAA )
_add( VS_FXAA3 )
_add( PS_FXAA3 )
_add( PS_FXAA3HQ )
_add( FSampleCount )
_add( FSampleCount1 )
_add( FSampleCount2 )
_add( FSampleCount3 )
_add( FSampleCount4 )
_add( FSampleCount5 )
_add( FSampleCount6 )
_add( FSampleCount7 )
_add( FSampleCount8 )
_add( FSampleCount9 )
_add( FSampleCount10 )
_add( FSampleCount11 )
_add( FSampleCount12 )
_add( FSampleCount13 )
_add( FSampleCount14 )
_add( FSampleCount15 )
_add( FSampleCount16 )
_add( FSampleCount17 )
_add( FSampleCount18 )
_add( FSampleCount19 )
_add( FSampleCount20 )
_add( FSampleCount21 )
_add( FSampleCount22 )
_add( FSampleCount23 )
_add( FSampleCount24 )
_add( FSampleCount25 )
_add( FSampleCount26 )
_add( FSampleCount27 )
_add( FSampleCount28 )
_add( FSampleCount29 )
_add( FSampleCount30 )
_add( FSampleCount31 )
_add( FSampleCount32 )
_add( FFilterTexcoord )
_add( FFilterScreenTexcoord )
_add( FFilterCopy )
_add( FFilterCopyColor )
_add( VS_Filter )
_add( PS_Filter )
_add( PS_FilterDepth )
_add( FFilterComposite )
_add( VS_EdgeDetection )
_add( VS_BlendingWeightCalculation )
_add( VS_NeighborhoodBlending )
_add( PS_EdgeDetection )
_add( smaaSearchXLeft )
_add( smaaSearchXRight )
_add( smaaSearchYUp )
_add( smaaSearchYDown )
_add( smaaArea )
_add( smaaDetectHorizontalCornerPattern )
_add( smaaDetectVerticalCornerPattern )
_add( PS_BlendingWeightCalculation )
_add( PS_NeighborhoodBlending )
_add( VS_Develop2D )
_add( VS_Develop3D )
_add( getDevelopTexEdgeFont )
_add( getDevelopTexCubeFace )
_add( getDevelopTexCubeRefrect )
_add( FDevelopTexture )
_add( FDevelopTexCubeFace )
_add( FDevelopTexCubeRefrect )
_add( FDevelopTexEdgeFont )
_add( getDevelopTexture )
_add( FDevelopDecode )
_add( FDevelopDecode_R )
_add( FDevelopDecode_G )
_add( FDevelopDecode_B )
_add( FDevelopDecode_A )
_add( FDevelopDecode_RGB )
_add( FDevelopDecode_RGBI )
_add( FDevelopDecode_RGBY )
_add( FDevelopDecode_RGBN )
_add( FDevelopDecode_Font )
_add( PS_Develop )
_add( PS_DevelopSimple )
_add( PS_DevelopEdgeFont )
_add( FCollisionSimpleVS )
_add( FCollisionSimplePS )
_add( FWindTriangleCurve )
_add( FWindSinCosCurve )
_add( FWindDirection )
_add( FWindPoint )
_add( FWindLine )
_add( FLocalWindLoopDirection )
_add( FLocalWindLoopPoint )
_add( FLocalWindLoopLine )
_add( FLocalWindLoopSlot0 )
_add( FLocalWindLoopSlot1 )
_add( FLocalWindLoopSlot2 )
_add( FLocalWindReference )
_add( FLocalWind )
_add( FLocalWindDisable )
_add( FDynamicLocalWind0 )
_add( FDynamicLocalWind1 )
_add( FDynamicLocalWind2 )
_add( FDynamicLocalWind3 )
_add( FDynamicLocalWind4 )
_add( FDynamicLocalWind5 )
_add( FDynamicLocalWind6 )
_add( FDynamicLocalWind7 )
_add( FLocalWindDirection )
_add( FLocalWindPoint )
_add( FLocalWindLine )
_add( FLocalWindUnroll )
_add( initMaterialContext )
_add( FBlendFog )
_add( FBlendFogDiffuse )
_add( FBlendFogModulate )
_add( FHeightFog )
_add( FHeightFogVTF )
_add( FHeightFogWorldY )
_add( FHeightFogDistance )
_add( FHeightFogVolume )
_add( FHeightFogModelSimple )
_add( FHeightFogModelSimpleVTF )
_add( FHeightFogModel )
_add( FHeightFogModelVTF )
_add( FDistanceFog )
_add( FDistanceFogLinear )
_add( FDistanceFogExp )
_add( FDistanceFogExp2 )
_add( FDistanceFogReverseExp )
_add( FDistanceFogReverseExp2 )
_add( FDistanceFogTable )
_add( FDistanceFogTableVTF )
_add( FFog )
_add( FFogDistance )
_add( FFogDistanceEst )
_add( FFogDistanceColorTable )
_add( FFogDistanceColorTableEst )
_add( FFogDistanceTable )
_add( FFogDistanceTableEst )
_add( FFogVTF )
_add( FFogVTFNone )
_add( FFogVTFDistance )
_add( FFogVTFDistanceEst )
_add( FFogVTFDistanceColorTable )
_add( FFogVTFDistanceColorTableEst )
_add( FFogVTFDistanceTable )
_add( FFogVTFDistanceTableEst )
_add( FFilterColorFogBlend )
_add( FFilterColorFogComposite )
_add( FFilterFogTable )
_add( FJointMatrix )
_add( FJointMatrixPF )
_add( FJointMatrixFromCBuf )
_add( FJointMatrixPFFromCBuf )
_add( FJointMatrixExFromCBuf )
_add( FSkinning )
_add( FSkinningNone )
_add( FSkinning1Weight )
_add( FSkinning2Weight )
_add( FSkinning4Weight )
_add( FSkinning4WeightBranch )
_add( FSkinning8Weight )
_add( FSkinning8WeightBranch )
_add( FSkinningPF )
_add( FSkinningPFNone )
_add( FSkinningPF1Weight )
_add( FSkinningPF2Weight )
_add( FSkinningPF4Weight )
_add( FSkinningPF4WeightBranch )
_add( FSkinningPF8Weight )
_add( FSkinningPF8WeightBranch )
_add( getSHdiffuse )
_add( FSHDiffuse )
_add( FSHDiffuseDisable )
_add( FDistanceAttenuation )
_add( FDistanceAttenuationSquareLaw )
_add( getAngularAttenuation )
_add( calcLightMask )
_add( FIsOutOfRange )
_add( FDeferredLightingGetClearColorLightBuffer )
_add( FDeferredLightingGetClearColorLightBufferLog )
_add( FDeferredLightingEncodeOutput )
_add( FDeferredLightingDecodeInput )
_add( FDeferredLightingDecodeInputExponent )
_add( FDeferredLightingDecodeInputLog )
_add( FDeferredLightingEncodeNormal )
_add( FDeferredLightingDecodeNormal )
_add( FDeferredLightingDecodeNormalSpheremapLUT )
_add( FDeferredLightingEncodeLinearDepth )
_add( FDeferredLightingDecodeLinearDepth )
_add( setupLight )
_add( setupLightBalance )
_add( setupLightSpecular )
_add( setupLightDiffuse )
_add( FDynamicLight0 )
_add( FDynamicLight1 )
_add( FDynamicLight2 )
_add( FDynamicLight3 )
_add( FDynamicLight4 )
_add( FDynamicLight5 )
_add( FDynamicLight6 )
_add( FDynamicLight7 )
_add( FDynamicLightDL0 )
_add( FDynamicLightDL1 )
_add( FDynamicLightDL2 )
_add( FDynamicLightDL3 )
_add( FDynamicLightDL4 )
_add( FDynamicLightDL5 )
_add( FDynamicLightDL6 )
_add( FDynamicLightDL7 )
_add( FInfiniteLight )
_add( FInfiniteLightB )
_add( FInfiniteLightS )
_add( FInfiniteLightD )
_add( FPointLight )
_add( FPointLightB )
_add( FPointLightD )
_add( FPointLightS )
_add( FPointLightR )
_add( FPointLightBR )
_add( FPointLightDR )
_add( FPointLightSR )
_add( FSpotLight )
_add( FSpotLightB )
_add( FSpotLightD )
_add( FSpotLightS )
_add( FSpotLightR )
_add( FSpotLightBR )
_add( FSpotLightDR )
_add( FSpotLightSR )
_add( FCapsuleLight )
_add( FCuboidLight )
_add( FCuboidLightB )
_add( FCuboidLightD )
_add( FCuboidLightS )
_add( FBRDF )
_add( FBRDFHalfLambert )
_add( FLighting )
_add( FLightingVS )
_add( FDeferredLightingSamplingLight )
_add( FDeferredLightingSamplingLightDiscontinuityFiltering )
_add( FDeferredLightingSamplingLightDiscontinuityFilteringLayer1 )
_add( FDeferredLightingSamplingLightComformanceFiltering )
_add( FLightingDeferredLighting )
_add( FLightingDeferredLightingApproximateSpecular )
_add( FLightingDeferredLightingSeparateSpecular )
_add( FTransparency )
_add( FTransparencyAlpha )
_add( FUVTransparencyMap )
_add( FChannelTransparencyMap )
_add( FTransparencyMap )
_add( FTransparencyDodgeMap )
_add( FTransparencyVolume )
_add( FTransparencyAlphaClip )
_add( FTransparencyMapAlphaClip )
_add( FUVAlbedoMap )
_add( FUVAlbedoBlendMap )
_add( FAlbedo )
_add( FAlbedoMap )
_add( FAlbedoMapBlend )
_add( FAlbedoMapBlendAlpha )
_add( FAlbedoMapBlendTransparencyMap )
_add( FAlbedoMapModulate )
_add( FAlbedoMapAdd )
_add( FAlbedoMapBlendColorOnly )
_add( FUVOcclusionMap )
_add( FChannelOcclusionMap )
_add( FOcclusion )
_add( FOcclusionMap )
_add( FOcclusionAmbient )
_add( FOcclusionAmbientMap )
_add( FUVNormalMap )
_add( FUVNormalBlendMap )
_add( FUVDetailNormalMap )
_add( FUVDetailNormalMap2 )
_add( FBump )
_add( FBumpNormalMap )
_add( FBumpNormalMapBlendTransparencyMap )
_add( FBumpDetailNormalMap )
_add( FChannelDetailMap )
_add( FBumpDetailMaskNormalMap )
_add( FBumpDetailNormalMap2 )
_add( FBumpHair )
_add( FBumpParallax )
_add( FBumpParallaxOcclusion )
_add( FLightMask )
_add( FLightMaskSolid0 )
_add( FLightMaskSolid1 )
_add( FLightMaskSolid01 )
_add( FLightMaskTransparent0 )
_add( FLightMaskTransparent1 )
_add( FLightMaskTransparent01 )
_add( FLightMaskEnable )
_add( FAmbient )
_add( FAmbientSH )
_add( FUVLightMap )
_add( FUVThinMap )
_add( FChannelThinMap )
_add( FDiffuse )
_add( FDiffuseConstant )
_add( FDiffuseConstantSRGB )
_add( FDiffuseConstantSRGBVertexColor )
_add( FDiffuseSH )
_add( FDiffuseThinSH )
_add( FDiffuseThin )
_add( FDiffuseLightMap )
_add( FDiffuseLightMapOcclusion )
_add( FDiffuseVertexColor )
_add( FDiffuseVertexColorOcclusion )
_add( FDiffuseVertexColorSH )
_add( FUVPrimary )
_add( FUVSecondary )
_add( FUVUnique )
_add( FUVExtend )
_add( FUVViewNormal )
_add( FUVScreen )
_add( FUVIndirectMap )
_add( FUVIndirectSource )
_add( FUVIndirect )
_add( FUVIndirectMask )
_add( FChannelR )
_add( FChannelG )
_add( FChannelB )
_add( FChannelA )
_add( FChannelBlend )
_add( FUVFresnelMap )
_add( FChannelFresnelMap )
_add( FFresnel )
_add( FFresnelSchlick )
_add( FFresnelSchlickRGB )
_add( FFresnelSchlickMap )
_add( FReflect )
_add( FReflectCubeMap )
_add( FReflectSphereMap )
_add( FReflectGlobalCubeMap )
_add( FUVSpecularMap )
_add( FUVSpecularBlendMap )
_add( FChannelSpecularMap )
_add( FSpecular )
_add( FSpecularMap )
_add( FSpecularMapBlendTransparencyMap )
_add( FSpecularDisable )
_add( FUVShininessMap )
_add( FChannelShininessMap )
_add( FShininess )
_add( FShininessMap )
_add( FUVEmissionMap )
_add( FChannelEmissionMap )
_add( FEmission )
_add( FEmissionConstant )
_add( FEmissionMap )
_add( FUVTransformOffset )
_add( FUVTransformOffset2 )
_add( FUVTransformOffset3 )
_add( FUVTransformPrimary )
_add( FUVTransformSecondary )
_add( FUVTransformUnique )
_add( FUVTransformExtend )
_add( FDistortion )
_add( FDistortionRefract )
_add( FDistortionRefractMask )
_add( FUVDisolveMap )
_add( FDissolvePatternDither )
_add( FDissolvePatternTexture )
_add( FDissolve )
_add( FDissolveDither )
_add( FDissolveTexture )
_add( FDepthTest )
_add( FDepthTestLT )
_add( FDepthTestGT )
_add( FColorModifier )
_add( FFinalCombiner )
_add( FFinalCombinerNoFog )
_add( FDefaultTransparency )
_add( FUseGlobalTransparency )
_add( createMaterialContext )
_add( createMaterialContextEx )
_add( createMaterialContextExEst )
_add( FQuaternionAxis )
_add( FQuaternionMultiplay )
_add( FQuaternionRotationArc )
_add( FQuaternionInverse )
_add( FPositionRotateQuaternion )
_add( FRotationNormalFromQuaternion )
_add( FQuaternionToMatrix )
_add( FMatrixToQuaternion )
_add( FSwingAdjustPosition )
_add( FSwingAdjustPositionDisable )
_add( FSwingAdjustNormalTangentDisable )
_add( FSwingAdjustNormalTangent )
_add( FSwingDisable )
_add( FSwingUpdate )
_add( FSwingUpdateYAxis )
_add( FSwingUpdateAll )
_add( FSwingUpdateBillboard )
_add( FSwingOriginDefault )
_add( FSwingOriginFromWorld )
_add( FSwingDefaultViewI )
_add( FSwingViewI )
_add( FSwingJointSupportDisable )
_add( FSwingJointSupport )
_add( FSwingBillboardDisable )
_add( FSwingBillboardTransform )
_add( FSwingBillboardTransformFixedY )
_add( FSwingBillboard )
_add( FSwingBillboardRotation )
_add( FSwing1Weight )
_add( FSwing2Weight )
_add( FInstancingStreamSourceMatrix )
_add( FInstancingConstantMatrix )
_add( FInstancingMultiply )
_add( FInstancingMultiplyEnable )
_add( FInstancing )
_add( FInstancingEnable )
_add( LdNormalPackF32 )
_add( LdNormalUnpackF32 )
_add( LdIdxToTexCoord )
_add( FLdTextureSampler3wPrev )
_add( FLdTextureSampler3wPrevXBOX )
_add( FLdDeformerWithPrev )
_add( FLdTextureSampler3 )
_add( FLdTextureSampler3XBOX )
_add( FLdDeformer )
_add( FLdLatticeDeformer )
_add( FLdTetraDeformer )
_add( FLdTestDeformer )
_add( FWorldMatrix )
_add( FMorph )
_add( FMorphPosition )
_add( FWorldCoordinate )
_add( FWorldCoordinateSwing )
_add( FWorldCoordinateTransformed )
_add( FWorldCoordinateLatticeDeform )
_add( FWorldCoordinateLatticeDeformEdge )
_add( FWorldCoordinateSymmetry )
_add( FWorldCoordinateFromTexture )
_add( FWorldCoordinateFromTextureCalcTangnet )
_add( FShaderAttributes )
_add( FShaderAttributesVTF )
_add( VS_MaterialNull )
_add( PS_MaterialNull )
_add( VS_MaterialDummy )
_add( PS_MaterialDummy )
_add( VS_Dummy )
_add( PS_Dummy )
_add( VS_MaterialDummyEdge )
_add( PS_DummyPicker0 )
_add( PS_DummyPicker1 )
_add( PS_DummyPicker2 )
_add( PS_DummyPicker3 )
_add( PS_DummyDynamicPicker )
_add( hsv2rgb )
_add( vdUnpackU8U8N )
_add( FVDMaskUVTransformOffset )
_add( FVDMaskUVTransform )
_add( FVDUVTransformOffset )
_add( FVDUVTransform )
_add( FVDUVPrimary )
_add( FVDUVSecondary )
_add( FVDUVUnique )
_add( FVDUVExtend )
_add( FUVVertexDisplacement )
_add( FVDGetMask )
_add( FVDGetMaskFromTexture )
_add( FVDGetMaskFromAO )
_add( FVDGetMaskDisable )
_add( FVertexDisplacement )
_add( FVertexDisplacementCurveU )
_add( FVertexDisplacementCurveV )
_add( FVertexDisplacementCurveUV )
_add( FVertexDisplacementDirU )
_add( FVertexDisplacementDirV )
_add( FVertexDisplacementDirUV )
_add( FVertexDisplacementMap )
_add( FVertexDisplacementMapDir )
_add( fVtxDispGenWave )
_add( FVertexDisplacementWave )
_add( FVertexDisplacementWaveRandom )
_add( FVertexDisplacementWavePlus )
_add( FVertexDisplacementDirExplosion )
_add( FVertexDisplacementDirExplosionPlus )
_add( FDebugViewVertex )
_add( FDebugViewVertexBonemap )
_add( FDebugViewVertexBoneweight )
_add( FDebugViewVertexBonenum )
_add( FDebugViewVertexPrelight )
_add( VS_MaterialDebug )
_add( FDebugViewPixel )
_add( FDebugViewPixelDefault )
_add( FDebugViewPixelBasemap )
_add( FDebugViewPixelBasemapAlpha )
_add( FDebugViewPixelTangentNormalmap )
_add( FDebugViewPixelWorldNormalmap )
_add( FDebugViewPixelNormal )
_add( FDebugViewPixelTangent )
_add( FDebugViewPixelBinormal )
_add( FDebugViewPixelMaskmap )
_add( FDebugViewPixelPrelight )
_add( FDebugViewPixelOcclusion )
_add( PS_MaterialDebug )
_add( FFilterVelocity )
_add( FFilterMotionBlurSource )
_add( FFilterMotionBlur8 )
_add( FFilterMotionBlur8Median )
_add( FFilterMotionBlur4 )
_add( FFilterMotionBlur4Median )
_add( FFilterMotionBlurVelocityBlend )
_add( FFilterMotionBlurReductionBlend )
_add( deconstructVelocity )
_add( CS_TileMax )
_add( FFilterMotionBlurTileMax )
_add( FFilterMotionBlurNeighborMax )
_add( depthCompare )
_add( spreadCompare )
_add( sampleWeight )
_add( FFilterMotionBlurReconstruct )
_add( FMaterialVelocityWPosNml )
_add( FMaterialVelocityWPosNmlSoftBody )
_add( FMaterialVlocityInflate )
_add( FMaterialVlocityInflateEnable )
_add( VS_MaterialVelocity )
_add( VS_MaterialVelocity2 )
_add( VS_MaterialVelocityEdge )
_add( PS_MaterialVelocity )
_add( TMaterialVelocityEdge_NoStretch_VS_MaterialVelocityEdge )
_add( TMaterialVelocityEdge_Stretch_VS_MaterialVelocityEdge )
_add( FOutlineBlend )
_add( FOutlineBlendHDREncode )
_add( FOutlineBlendAdd )
_add( FOutlineBlendAlpha )
_add( FOutlineBlendModulate )
_add( FOutlineFade )
_add( maskOutlineChannel )
_add( maskOutlineGeometry )
_add( FOutlineFadeDepth )
_add( FOutlineDetector )
_add( FOutlineDetector0 )
_add( FOutlineDetector1 )
_add( FOutlineDetector2 )
_add( FOutlineDetector3 )
_add( FOutlineDetectorID )
_add( FOutlineDetectorDepth )
_add( FOutlineDetectorDepthWrap )
_add( FOutlineComposite )
_add( FOutlineCompositeModulate )
_add( FOutlineCompositeBlend )
_add( FOutlineCompositeAdd )
_add( FOutlineCompositeMultiModulate )
_add( FOutlineCompositeMultiBlend )
_add( FOutlineCompositeMultiAdd )
_add( FOutlineSample )
_add( FOutlineSample4 )
_add( FOutlineSample12 )
_add( FFilterOutlineThick )
_add( FFilterOutlineThick1V )
_add( FFilterOutlineThick1H )
_add( FFilterOutlineThick2V )
_add( FFilterOutlineThick2H )
_add( FFilterOutlineBlur )
_add( FFilterOutlineBlur1H )
_add( FFilterOutlineBlur1V )
_add( FFilterOutlineBlur2H )
_add( FFilterOutlineBlur2V )
_add( FFilterOutlineSample )
_add( FFilterOutlineComposite )
_add( FFilterOutlineCompositeBloomF )
_add( FFilterOutlineCompositeEmit )
_add( FFilterOutlineSampleComposite )
_add( FFilterOutlineDetector )
_add( FFilterOutlineDirect )
_add( VS_MaterialOutline )
_add( PS_MaterialOutline )
_add( PS_MaterialOutline2 )
_add( FShadowReceiveFaceAttn )
_add( FShadowReceiveFaceAttnIncrease )
_add( FShadowReceiveFaceAttnDecrease )
_add( FShadowReceiveFaceAttnCut )
_add( FShadowReceiveAttn )
_add( FShadowReceiveAttnFade )
_add( FShadowReceiveAttnViewDistance )
_add( FShadowReceiveAttnDistance )
_add( FShadowReceiveAttnDistanceFade )
_add( FShadowReceiveAttnSpot )
_add( FShadowReceiveAttnSpotFade )
_add( FShadowIsOutOfRange )
_add( FShadowIsOutOfRangeEnable )
_add( sampleDepth )
_add( sampleDepthComp )
_add( sampleVariance )
_add( sampleLevelVariance )
_add( FShadowFilter )
_add( calcPCF2x2 )
_add( FShadowFilterPCF2x2 )
_add( FShadowFilterPCF2x2Comp )
_add( calcPCF3x3 )
_add( FShadowFilterPCF3x3 )
_add( FShadowFilterPCF3x3Comp )
_add( calcPCF4x4 )
_add( FShadowFilterPCF4x4 )
_add( FShadowFilterPCF4x4Comp )
_add( calcPmax )
_add( FShadowFilterVSM )
_add( FShadowFilterVLSM )
_add( filterCascadeVSSM )
_add( filterCascadeVLSM )
_add( getCubeTextureCordinate )
_add( FShadowFilterPoint )
_add( FShadowFilterPointPCF2x2 )
_add( FShadowFilterPointPCF3x3 )
_add( FShadowFilterPointPCF4x4 )
_add( FShadowFilterPointVSM )
_add( FShadowLightFace )
_add( FShadowLightFacePoint )
_add( VS_ShadowReceive )
_add( FShadowReceive )
_add( FShadowReceiveRT )
_add( FShadowReceiveCascadeSSM )
_add( FShadowReceiveCascadeSSMRT )
_add( FShadowReceiveCascadeSSMLite )
_add( FShadowReceiveCascadeSSMRTLite )
_add( FShadowReceiveSmoothCascadeSSM )
_add( FShadowReceiveSmoothCascadeSSMRT )
_add( FShadowReceiveSmoothCascadeSSMLite )
_add( FShadowReceiveSmoothCascadeSSMRTLite )
_add( FShadowReceiveLSM )
_add( FShadowReceiveLSMRT )
_add( FShadowReceiveCascadeLSM )
_add( FShadowReceiveCascadeLSMRT )
_add( FShadowReceiveSmoothCascadeLSM )
_add( FShadowReceiveSmoothCascadeLSMRT )
_add( FShadowReceiveCascadeVSSM )
_add( FShadowReceiveCascadeVSSMRT )
_add( FShadowReceiveCascadeVLSM )
_add( FShadowReceiveCascadeVLSMRT )
_add( FShadowReceiveSpotVSM )
_add( FShadowReceiveSpotVSMRT )
_add( FShadowReceivePoint )
_add( PS_ShadowReceive )
_add( PS_ShadowReceiveTransparent )
_add( getMaterialShadowRT )
_add( FLightMaskRTSolid0 )
_add( FLightMaskRTSolid1 )
_add( FLightMaskRTTransparent0 )
_add( FLightMaskRTTransparent1 )
_add( VS_ShadowReceiveDeferredRectangle )
_add( PS_ShadowReceiveDeferredRectangle )
_add( FParaboloidProjection )
_add( VS_DualParaboloid )
_add( PS_DualParaboloid )
_add( FDeferredLightingEncodeParameter )
_add( FDeferredLightingEncodeParameterHalfLambert )
_add( FDeferredLightingEncodeParameterOverlap )
_add( FDeferredLightingEncodeParameterMRT )
_add( FDeferredLightingEncodeParameterMRTHalfLambert )
_add( FDeferredLightingDecodeParameter )
_add( FDeferredLightingDecodeParameterHalfLambert )
_add( FDeferredLightingGetLightParam )
_add( FDeferredLightingGetLightParamFadeOut )
_add( FBRDFDeferredLighting )
_add( FDynamicLightingDeferredLighting )
_add( FDeferredLightingLightVolumeLightMask )
_add( FDeferredLightingLightVolumeLightMaskSolid0 )
_add( FDeferredLightingLightVolumeLightMaskSolid1 )
_add( FDeferredLightingLightVolumeLightMaskSolid01 )
_add( FDeferredLightingLightVolumeLightMaskTransparentFullSize )
_add( FDeferredLightingLightVolumeLightMaskTransparentQuarterSize )
_add( FDeferredLightingLightVolumeLightMaskTransparent0 )
_add( FDeferredLightingLightVolumeLightMaskTransparent1 )
_add( FDeferredLightingLightVolumeLightMaskTransparent01 )
_add( FDeferredLightingLightVolumeLightMaskRTSolid0 )
_add( FDeferredLightingLightVolumeLightMaskRTSolid1 )
_add( FDeferredLightingCompareEqualLightGroup )
_add( FDeferredLightingCompareEqualLightGroupDisable )
_add( FReconstructViewDepthFromDepth )
_add( FReconstructViewDepthFromLinearDepth )
_add( FReconstructWorldPosition )
_add( FReconstructWorldPositionDualPalaboloid )
_add( FDepthBoundsTest )
_add( FDepthBoundsTestEnable )
_add( FBumpMapFromGBuffer )
_add( FDeferredLightingGetLightingParameter )
_add( FDeferredLightingGetLightingResult )
_add( VS_DeferredLighting_LightVolume )
_add( VS_DeferredLighting_LightVolumeRectangle )
_add( PS_DeferredLighting_LightVolume_NoLighting )
_add( PS_DeferredLighting_LightVolume_NoLighting_MRT )
_add( PS_DeferredLighting_LightVolume_NoLighting_LightGroup )
_add( PS_DeferredLighting_LightVolume_NoLighting_LightGroup_MRT )
_add( PS_DeferredLighting_LightVolume )
_add( PS_DeferredLighting_LightVolume_MRT )
_add( FDeferredLightingEncodeOutputLog )
_add( FAmbientMask )
_add( FAmbientMaskEnable )
_add( FEncodeRSMParameter )
_add( FDecodeRSMParameter )
_add( FRSMComputeIndirectLighting )
_add( FRSMGatherIndirectLighting )
_add( FRSMGatherIndirectLightingLargeSize )
_add( FRSMGatherIndirectLightingHighQuality )
_add( FRSMGatherIndirectLightingVariable )
_add( FRSMGetIndirectLighting )
_add( PS_DeferredLighting_IndirectLighting )
_add( PS_DeferredLighting_GBufferReduction )
_add( PS_DeferredLighting_BilateralBlurH_Size8 )
_add( PS_DeferredLighting_BilateralBlurH_Size12 )
_add( PS_DeferredLighting_BilateralBlurH_Size16 )
_add( PS_DeferredLighting_BilateralBlurV_Size8 )
_add( PS_DeferredLighting_BilateralBlurV_Size12 )
_add( PS_DeferredLighting_BilateralBlurV_Size16 )
_add( PS_DeferredLighting_BilateralUpsampling )
_add( PS_DeferredLighting_BilinearUpsampling )
_add( VS_MaterialStd )
_add( PS_MaterialStd )
_add( PS_DeferredLighting_GBufferPass )
_add( PS_DeferredLighting_GBufferPassMRT )
_add( PS_ReflectiveShadowMap )
_add( VS_Adhesion )
_add( doAdhesionEachLighting )
_add( doAdhesionDynamicLighting )
_add( FAdhesionAlbedo )
_add( FAdhesionAlbedoSubtract )
_add( PS_Adhesion )
_add( VS_AdhesionPV )
_add( PS_AdhesionPV )
_add( FSSSIrradiance )
_add( FSSSFillMarginH )
_add( FSSSFillMarginV )
_add( FSSSGaussianFilterH )
_add( FSSSGaussianFilterV )
_add( PS_MaterialSSS )
_add( PS_MaterialSSSIrradiance )
_add( PS_MaterialSSSDistortion )
_add( VS_MaterialStdEst )
_add( PS_MaterialStdEst )
_add( PS_DeferredLighting_GBufferPassEst )
_add( PS_DeferredLighting_GBufferPassMRTEst )
_add( PS_ReflectiveShadowMapEst )
_add( VS_ModelFog )
_add( PS_ModelFog )
_add( VS_MaterialConstant )
_add( PS_MaterialConstant )
_add( getAdaptiveFactor )
_add( HS_PNTrianglesConstant )
_add( HS_MaterialPN )
_add( DS_MaterialPN )
_add( HS_PHTrianglesConstant )
_add( HS_MaterialPH )
_add( DS_MaterialPH )
_add( HS_DMTrianglesConstant )
_add( HS_MaterialDM )
_add( DS_MaterialDM )
_add( VS_MaterialStdCafeTes )
_add( FShadowBias )
_add( FShadowDepthBias )
_add( FShadowBiasDisable )
_add( VS_ShadowCast )
_add( FShadowCast )
_add( FShadowCastDepth )
_add( FShadowCastDistance )
_add( PS_ShadowCast )
_add( PS_ShadowCastTransparent )
_add( PS_ShadowCastZOffset )
_add( PS_ShadowCastTransparentZOffset )
_add( FShadowIsOutOfRange0 )
_add( FShadowIsOutOfRange1 )
_add( FShadowIsOutOfRange2 )
_add( FShadowIsOutOfRange3 )
_add( FShadowLightFace0 )
_add( FShadowLightFace1 )
_add( FShadowLightFace2 )
_add( FShadowLightFace3 )
_add( FShadowReceiveFaceAttn0 )
_add( FShadowReceiveFaceAttn1 )
_add( FShadowReceiveFaceAttn2 )
_add( FShadowReceiveFaceAttn3 )
_add( FShadowReceiveAttn0 )
_add( FShadowReceiveAttn1 )
_add( FShadowReceiveAttn2 )
_add( FShadowReceiveAttn3 )
_add( FShadowReceiveRT0 )
_add( FShadowReceiveRT1 )
_add( FShadowReceiveRT2 )
_add( FShadowReceiveRT3 )
_add( FShadowFilter0 )
_add( FShadowFilter1 )
_add( FShadowFilter2 )
_add( FShadowFilter3 )
_add( FShadowFilterPoint0 )
_add( FShadowFilterPoint1 )
_add( FShadowFilterPoint2 )
_add( FShadowFilterPoint3 )
_add( FShadowFilterMulti )
_add( FShadowFilterPointMulti )
_add( FShadowMultipleReceiveRT )
_add( FShadowMultiReceiveCascadeSSMRT )
_add( FShadowMultiReceiveSmoothCascadeSSMRT )
_add( FShadowMultiReceiveLSMRT )
_add( FShadowMultiReceiveCascadeLSMRT )
_add( FShadowMultiReceiveSmoothCascadeLSMRT )
_add( FShadowMultiReceiveSpotVSMRT )
_add( FShadowMultiReceivePoint )
_add( FLightMaskShadowMultiRT0 )
_add( FLightMaskShadowMultiRT1 )
_add( FLightMaskShadowMultiRT01 )
_add( FGaussianFilterH )
_add( FGaussianFilterV )
_add( FIntensityWeight )
_add( FIntensityWeightGrayScale )
_add( FIntensityWeightRGB )
_add( FIntensityWeightRGBA )
_add( FDispersionMap )
_add( FBilateralFilterH )
_add( FBilateralFilterV )
_add( convZValue )
_add( FClampSceneUV )
_add( FClampSceneUVClip )
_add( FClampSceneUVSmooth )
_add( FPrimitiveSample )
_add( FPrimitiveSampleNoTexture )
_add( FPrimitiveSampleBaseMap )
_add( FPrimitiveSampleBaseMapParalax )
_add( FPrimitiveSampleBaseMapLin )
_add( FPrimitiveSampleBaseMapParalaxLin )
_add( FPrimitiveSampleAlphaMap )
_add( FPrimitiveSampleAlphaMapPoint )
_add( FPrimitiveSampleAlphaMapParallaxPoint )
_add( FPrimitiveSampleAlphaMapLin )
_add( FPrimitiveSampleAlphaMapParallaxLin )
_add( FPrimitiveOcclusionSphere )
_add( FPrimitiveOcclusionLensFlare )
_add( FPrimitiveOcclusionFactor )
_add( FPrimitiveOcclusionFactorDefault )
_add( FPrimitiveOcclusionFactorOccMap )
_add( FPrimitiveOcclusionFactorPS )
_add( FPrimitivePSOcclusion )
_add( FPrimitivePSOcclusionDefault )
_add( FPrimitiveColTexInfluence )
_add( FPrimitiveColTexInfluenceDefault )
_add( FPrimitiveColTexInfluenceTexRGBColA )
_add( FPrimitiveCalcColorInt )
_add( FPrimitiveCalcColorIntDefault )
_add( FPrimitiveCalcIntensity )
_add( FPrimitiveCalcIntensityDefault )
_add( FPrimitiveCalcFresnel )
_add( FPrimitiveCalcFresnelDefault )
_add( FPrimitiveSceneSampler )
_add( FPrimitiveSceneSamplerBlur )
_add( FPrimitiveSceneSamplerBlurNoTex )
_add( FPrimitiveSceneSamplerRefract )
_add( FPrimitiveSceneSamplerRefractNoTex )
_add( FPrimitiveSceneSamplerRefractZ )
_add( FPrimitiveSceneSamplerRefractZBlur )
_add( FPrimitiveSceneSamplerRefractZNoTex )
_add( FPrimitiveSceneSamplerRefractZBlurNoTex )
_add( FPrimitiveSceneSamplerDistortion )
_add( FPrimitiveSceneSamplerDistortionNoTex )
_add( FPrimitiveToneMap )
_add( FPrimitiveToneMapNone )
_add( FPrimitiveMaskMap )
_add( FPrimitiveMaskMapDefault )
_add( FPrimitiveMaskMapParallax )
_add( FPrimitiveCalcNormalMap )
_add( FPrimitiveCalcNormalMapDefault )
_add( FPrimitiveCalcNormalMapParallax )
_add( FPrimitiveCalcNormalMapMask )
_add( FPrimitiveClip )
_add( FPrimitiveClipDefault )
_add( FPrimitiveVSAlphaClip )
_add( FPrimitiveVSAlphaClipDefault )
_add( FPrimitiveAlphaToColor )
_add( FPrimitiveAlphaToColorDefault )
_add( FPrimitiveUVOffset )
_add( FPrimitiveUVOffsetDefault )
_add( FPrimitiveModelSceneSampler )
_add( FPrimitiveModelSceneSamplerBlur )
_add( FPrimitiveModelSceneSamplerRefract )
_add( FPrimitiveModelSceneSamplerRefractAlpha )
_add( FPrimitiveModelSceneSamplerRefractDisplaceUV )
_add( FPrimitiveModelSmoothAlpha )
_add( FPrimitiveModelSmoothAlphaDefault )
_add( FPrimitiveModelSmoothAlphaInverse )
_add( FPrimitiveModelSmoothAlphaVertexNormal )
_add( FPrimitiveModelSmoothAlphaVertexNormalInverse )
_add( FPrimitiveTransparency )
_add( FPrimitiveTransparencyVolume )
_add( FPrimitiveLevelCorrection )
_add( FPrimitiveLevelCorrectionLinear )
_add( FPrimitiveLevelCorrectionNeg )
_add( FPrimitiveLevelCorrectionPos )
_add( FPrimitiveLevelCorrectionAlphaLinear )
_add( FPrimitiveLevelCorrectionAlphaNeg )
_add( FPrimitiveLevelCorrectionAlphaPos )
_add( FBlendFogPrimAlpha )
_add( FBlendFogPrimBlend )
_add( FPrimiteveColorModifier )
_add( FOcclusionFactorFilter )
_add( FFOcclusionFactor )
_add( FFOcclusionFactorFromTexture )
_add( FRadialFilterSampleColorScale )
_add( FRadialFilterSampleColorScaleFade )
_add( FRadialFilterMask )
_add( FRadialFilterMaskDisable )
_add( FRadialFilterAlpha )
_add( FRadialFilterAlphaColor )
_add( FRadialBlurWidth )
_add( FRadialBlurWidthOcclusion )
_add( FRadialBlurAlpha )
_add( FRadialBlurAlphaOcclusion )
_add( VS_RadialBlurFilter )
_add( PS_RadialBlurFilter )
_add( FFeedbackBlurFilter )
_add( VS_TVNoiseFilter )
_add( PS_TVNoiseFilter )
_add( FTVNoiseFilterScanLine )
_add( FFishEye )
_add( FFilterColorCorrect )
_add( FFilterColorCorrectTable )
_add( FFilterColorCorrectVolumeInterpolateHQ )
_add( FFilterColorCorrectVolumeInterpolate )
_add( FFilterColorCorrectVolume )
_add( FFilterColorCorrectVolumeSRGB )
_add( FFilterHermiteToneCurve )
_add( FVarianceFilter )
_add( FCubeMapVarianceFilter )
_add( FCubeMapVarianceFilterDir )
_add( FVarianceFilterH )
_add( FVarianceFilterV )
_add( FVarianceFilterCubeDirH )
_add( FVarianceFilterCubeH )
_add( FVarianceFilterCubeDirV )
_add( FVarianceFilterCubeV )
_add( FVarianceMakeMipLevel )
_add( FVarianceMakeMipLevelCube )
_add( VS_VarianceFilter )
_add( PS_VarianceFilter )
_add( VS_CubeMapVarianceFilter )
_add( PS_CubeMapVarianceFilter )
_add( FDepthToVariance )
_add( PS_BloomFinalOut )
_add( PS_BloomExtraction )
_add( PS_BloomExtractionCTR )
_add( PS_BloomDownSample4 )
_add( VS_BloomConeBlur )
_add( VS_BloomGaussBlur )
_add( PS_BloomGaussBlur )
_add( PS_BloomConeBlur )
_add( PS_BloomGather )
_add( FBaseLightScattering )
_add( FFogLightScattering )
_add( FFogVTFLightScattering )
_add( FFilterLightScatteringMul )
_add( FFilterLightScatteringMulRC )
_add( FFilterLightScatteringAdd )
_add( FFilterLightScattering )
_add( FImageBlend )
_add( FImageBlendScreen )
_add( FImageBlendOverlay )
_add( FImageBlendSoftLight )
_add( FImageBlendHardLight )
_add( FImageBlendDodge )
_add( FImageBlendBurn )
_add( FImageBlendDarken )
_add( FImageBlendLighten )
_add( FImageBlendDifference )
_add( FImageBlendExclusion )
_add( VS_ImagePlaneFilter )
_add( PS_ImagePlaneFilterBase )
_add( PS_ImagePlaneFilterCube )
_add( PS_ImagePlaneFilterBaseEx )
_add( PS_ImagePlaneFilterCubeEx )
_add( FFilterHaze )
_add( FFilterHazeInverse )
_add( FFilterHazeDepth )
_add( FToneMapLinear )
_add( FToneMapExposure )
_add( FToneMapExposureEx )
_add( FToneMapReinHard )
_add( VS_AvgLogInit )
_add( VS_AvgLog16 )
_add( PS_AvgLog16 )
_add( PS_AvgLogFinal )
_add( PS_AvgLogInit )
_add( PS_AverageCount )
_add( FFilterColorFog )
_add( FFilterColorFogHeight )
_add( VS_CubicBlur )
_add( PS_CubicBlur )
_add( VS_CubicBlend )
_add( PS_CubicBlend )
_add( FDOFFilterDownScale )
_add( correctDepthSub )
_add( FDOFFilterPoisson )
_add( FDOFFilterLight )
_add( FDOFFilterLight2 )
_add( FGSDOFCopy )
_add( VS_GSDOFFilter )
_add( GS_GSDOFFilter )
_add( PS_GSDOFFilter )
_add( FSSAOFilterDepthDownScale )
_add( FSSAOFilterLinearDepthDownScale )
_add( FSSAOFilterMakeLinearDepth )
_add( VS_SSAOMakeNormal )
_add( PS_SSAOMakeNormal )
_add( VS_SSAOMakeOcclusionMap )
_add( FSSAOBounce )
_add( FSSAOBounceDisable )
_add( getIntensityBothFaces )
_add( getIntensitySingleFace )
_add( FSSAOIntensityDisable )
_add( getBiasedViewPosition )
_add( getOccluderMatrix )
_add( getScaleOffset )
_add( PS_SSAOMakeOcclusionMap )
_add( PS_SSAOMakeSingleFaceOcclusionMap )
_add( FSSAOApplyAmbientOcclusion )
_add( FSSAOApplyIndirectBounce )
_add( FBokehAlpha )
_add( FBokehCompressFactor )
_add( FBokehCompressRangeFactor )
_add( FBokehBleeding )
_add( FBokehAntiBleeding )
_add( FBokehMask )
_add( FBokehMaskDither )
_add( FBokehReductionBlend )
_add( FBokehNearCopy )
_add( FBokehInflateMask )
_add( FBokehMaskValue )
_add( FBokehInverseMaskValue )
_add( FBokehAntiBleedingMaskValue )
_add( FBokehAntiBleedingInverseMaskValue )
_add( FBokehCalculation )
_add( FBokehDefaultFarZ )
_add( FBokehReductionFarZ )
_add( FBokehFarFilter )
_add( FBokehNearFilter )
_add( FFilterEdgeAntiAliasingGetDepth )
_add( FFilterEdgeAntiAliasingGetEdgeWeight )
_add( FFilterEdgeAntiAliasingGetEdgeWeightFast )
_add( FFilterEdgeAntiAliasing )
_add( FFilterEdgeAntiAliasingDynamicBranch )
_add( FFilterEdgeAntiAliasingOutputWeight )
_add( FFilterGodRaysAlpha )
_add( FFilterGodRaysAlphaOcclusion )
_add( FFilterGodRaysScale )
_add( FFilterGodRaysScaleOcclusion )
_add( FFilterGodRaysSourceColor )
_add( FFilterGodRaysSourceGrayColor )
_add( FFilterGodRaysThreshold )
_add( FFilterGodRaysThresholdWithZ )
_add( FFilterGodRaysThreshold3DBoundMaskWeightZero )
_add( FFilterGodRaysThreshold3DBound )
_add( FGodRaysDirection )
_add( FFilterGodRaysIteratorSC )
_add( FFilterGodRaysBlend )
_add( FFilterGodRaysP2O )
_add( FFilterGodRaysO2P )
_add( FFilterGodRaysBegin )
_add( FFilterGodRays16SamplesIterator )
_add( FFilterGodRays8SamplesIterator )
_add( FFilterGodRaysCopy )
_add( FFilterGodRaysGammaCopy )
_add( FBlurDistanceMask )
_add( FBlurDistanceMaskEnable )
_add( FBlurAlphaMask )
_add( FBlurAlphaMaskEnable )
_add( FBlurMaskFilter )
_add( FBlurMaskCopyColor )
_add( FCAFishEye )
_add( FCANormalMap )
_add( FChromaticAberrationFilter )
_add( FChromaticAberrationFilterHQ )
_add( FChromaticAberrationFilterDownSample )
_add( VS_TangentFilter )
_add( PS_TangentFilter_Blur4 )
_add( PS_TangentFilter_Blur8 )
_add( FTangentModifier )
_add( NullLightTexture )
_add( SpotLightTexture )
_add( PointLightTexture )
_add( SpotPointLightTexture )
_add( FBruteForceLighting )
_add( FBruteForceLightingNullLightTexture )
_add( FBruteForceApproximateLighting )
_add( calcScreenZtoViewDepth )
_add( calcScreenUVtoViewDepth )
_add( calcFog )
_add( FPrimitiveCalcTexCoord )
_add( FPrimitiveCalcTexCoordNormalize )
_add( FPrimitiveCalcTexCoordTexel )
_add( calcZOffset )
_add( FPrimitiveCalcPos )
_add( FPrimitiveCalcPosParticle )
_add( FPrimitiveCalcPosParticleNT )
_add( FPrimitiveCalcPosPolyline )
_add( FPrimitiveCalcPosCloudBillboard )
_add( FPrimitiveCalcPosCloud )
_add( FPrimitiveCalcDepthBlend )
_add( FPrimitiveCalcDepthBlendDefault )
_add( FPrimitiveCalcVolumeBlend )
_add( FPrimitiveCalcVolumeBlendDefault )
_add( FPrimitiveCalcVolumeBlendPS )
_add( FPrimitiveCalcVolumeBlendPSVolume )
_add( FPrimitiveCalcVolumeBlendPSInvVolume )
_add( FPrimitiveCalcVolumeBlendPSDepthVolume )
_add( FPrimitiveCalcPosVolumeBlendDepthVolume )
_add( FPrimitiveCalcPosVolumeBlendDepthVolumeDefault )
_add( FPrimitiveCalcFog )
_add( FPrimitiveCalcFogColor )
_add( FPrimitiveCalcFogAlpha )
_add( FPrimitiveCalcFogBlend )
_add( FPrimitiveCalcFogPS )
_add( FPrimitiveCalcFogPSDefault )
_add( FPrimitiveCalcShade )
_add( FPrimitiveCalcShadeColor )
_add( FPrimitiveCalcShadeColorRatio )
_add( FPrimitiveCalcEye )
_add( FPrimitiveCalcEyeDefault )
_add( FPrimitiveCalcNTB )
_add( FPrimitiveCalcNTBPolygon )
_add( FPrimitiveCalcNTBParticle )
_add( FPrimitiveCalcNTBPolyline )
_add( FPrimitiveCalcNTBTessParticle )
_add( FPrimitiveCalcDiffuse )
_add( FPrimitiveCalcDiffuseNormalMap )
_add( FPrimitiveUVClamp )
_add( FPrimitiveUVClampDefault )
_add( FPrimitiveParallax )
_add( FPrimitiveParallaxDefault )
_add( FPrimitiveParallaxScale )
_add( FPrimitiveParallaxScaleDefault )
_add( FPrimitiveCalcSpecular )
_add( FPrimitiveCalcSpecularDefault )
_add( FPrimitiveDepthComparison )
_add( FPrimitiveDepthComparisonEnable )
_add( FPrimitiveCloudEnv )
_add( FPrimitiveCloudEnvDefault )
_add( FPrimitiveCloudColor )
_add( FPrimitiveCloudColorDefault )
_add( FPrimitiveTessellate )
_add( FPrimitiveTessellateParticle )
_add( VS_Primitive )
_add( PS_Primitive )
_add( VS_CloudPrimitive )
_add( PS_CloudPrimitive )
_add( VS_PrimitiveTessellate )
_add( PrimitiveConstHS )
_add( HS_PrimitiveTessellate )
_add( DS_PrimitiveTessellate )
_add( PS_PrimitiveTessellate )
_add( calcZOffset2D )
_add( FPrimitive2DVirtualScreen )
_add( FPrimitive2DVirtualScreenFullScreen )
_add( FPrimitive2DVirtualScreenPanScan )
_add( FPrimitive2DVirtualScreenLetterBox )
_add( FPrimitive2DCalcPos )
_add( FPrimitive2DCalcPosPolyline )
_add( FPrimitive2DCalcPosSprite )
_add( FPrimitive2DCalcPosLensFlare )
_add( FPrimitive2DCalcTexCoord )
_add( FPrimitive2DCalcTexCoordNormalize )
_add( FPrimitive2DCalcTexCoordTexel )
_add( FPrimitive2DLensFlareIntensity )
_add( FPrimitive2DLensFlareIntensityDefault )
_add( VS_Primitive2D )
_add( PS_Primitive2D )
_add( FWaterWPosProt )
_add( FWaterWPosProtFromModel )
_add( FWaterUnitProt )
_add( FWaterUnitProtFromModel )
_add( calcWavePhase )
_add( calcWaveHeight )
_add( calcWavePlane )
_add( FWaterDetailCoodinate )
_add( FWaterDetailWorldCoodinate )
_add( FWaterDetailTextureCoodinate )
_add( FWaterRipple )
_add( FWaterRippleFrustum )
_add( FWaterRippleDisable )
_add( FWaterNormal )
_add( FWaterDetailNormal )
_add( FWaterDetailNormalMulti )
_add( calcFluctuation )
_add( FWaterCaustics )
_add( FWaterCausticsDisable )
_add( FWaterCausticsFilter )
_add( FWaterReflection )
_add( FWaterReflectionEnvironmentMap )
_add( FWaterRefraction )
_add( FWaterRefractionScene )
_add( FWaterRefractionOcean )
_add( FWaterBubbleCoordinate )
_add( FWaterBubbleWorldCoordinate )
_add( FWaterBubbleTextureCoordinate )
_add( getBubbleColor )
_add( FWaterBubbleMask )
_add( FWaterBubbleMapMask )
_add( FWaterBubble )
_add( FWaterBubbleNormal )
_add( FWaterBubbleDepth )
_add( FWaterBubbleHeight )
_add( FWaterShadow )
_add( FWaterShadowDisable )
_add( FWaterVolumeBlend )
_add( FWaterVolumeBlendDisable )
_add( FWaterTransform )
_add( WaterWindEffect )
_add( FWaterWindTransform )
_add( FWaterTransformVTF )
_add( VS_Water )
_add( PS_Water )
_add( VS_WaterMask )
_add( PS_WaterMask )
_add( FWaterCombiner )
_add( VS_WaterShadowMap )
_add( PS_WaterShadowMap )
_add( FWaterShadowFace )
_add( FWaterShadowReceiveCascadeLSM )
_add( FWaterShadowReceiveSingleLSM )
_add( FWaterShadowReceive )
_add( encodeRippleHeight )
_add( decodeRippleHeight )
_add( VS_WaterRipple )
_add( PS_WaterRipple )
_add( FWaterHeight2Normal )
_add( VS_WaterWPosB )
_add( PS_WaterWPosB )
_add( FGUICalcPosition )
_add( FGUICalcPosition2D )
_add( FGUICalcPosition3D )
_add( FGUICalcPositionDev )
_add( FGUICalcPositionDev2D )
_add( FGUICalcPositionDev3D )
_add( FGUICalcUV )
_add( FGUICalcUVWrap )
_add( FGUICalcUVClamp )
_add( FGUICalcUVAlphaMask )
_add( FGUICalcUVAlphaMaskOn )
_add( FGUIGetVertexColor )
_add( FGUIGetVertexColorStatic )
_add( FGUICalcColorScaling )
_add( FGUICalcColorScalingOn )
_add( FGUICalcColorAttribute )
_add( FGUICalcColorAttributeOn )
_add( FGUICalcColorAlphaMask )
_add( FGUICalcColorAlphaMaskWrite )
_add( FGUICalcColorAlphaMaskApply )
_add( FGUICalcColor )
_add( FGUITextureSampling )
_add( VS_GUI_Polygon )
_add( VS_GUI_Texture )
_add( VS_GUI_Blend )
_add( VS_GUI_Dev )
_add( PS_GUI_Polygon )
_add( PS_GUI_Texture )
_add( PS_GUI_Blend )
_add( PS_GUI_Dev )
_add( FDegamma )
_add( FDegammaDesable )
_add( FYUVDecoder )
_add( FProjectionTextureColor )
_add( FProjectionTextureColorR )
_add( FProjectionTextureColorG )
_add( FProjectionTextureColorB )
_add( FProjectionTextureColorA )
_add( getProjectionTexture )
_add( FProjectionTexture )
_add( VS_TextureBlend )
_add( PS_TextureBlend )
_add( PS_TextureBlendCube )
_add( convRot )
_add( FGPUParticleCalcPos )
_add( FGPUParticleCalcPosParticle )
_add( FGPUParticleCalcPosLineParticle )
_add( FGPUParticleCalcPosPolylineParticle )
_add( FGPUParticleIntensity )
_add( FGPUParticleIntensityDefault )
_add( FGPUParticleCalcTexCoord )
_add( FGPUParticleCalcTexCoordNone )
_add( FGPUParticleCalcTexCoordDefault )
_add( FGPUParticleCalcTexCoordPolyline )
_add( FGPUParticleSample )
_add( FGPUParticleSampleNoTexture )
_add( FGPUParticleSampleBaseMap )
_add( FGPUParticleSampleBaseMapLin )
_add( FGPUParticleToneMap )
_add( FGPUParticleToneMapDefault )
_add( FGPUParticleToneMapNone )
_add( FGPUParticleCalcDepthBlend )
_add( FGPUParticleCalcDepthBlendNone )
_add( FGPUParticleCalcDepthBlendDefault )
_add( FGPUParticleFogVS )
_add( FGPUParticleFogVSColor )
_add( FGPUParticleFogVSAlpha )
_add( FGPUParticleFogVSBlend )
_add( FGPUParticleFogPS )
_add( FGPUParticleFogPSDefault )
_add( FGPUParticleVSAlphaClip )
_add( FGPUParticleVSAlphaClipDefault )
_add( FGpuParticleLevelCorrection )
_add( FGpuParticleLevelCorrectionLinear )
_add( FGpuParticleLevelCorrectionNeg )
_add( FGpuParticleLevelCorrectionPos )
_add( VS_GpuParticle )
_add( VS_GpuParticle2 )
_add( calcPos )
_add( GS_GpuParticle )
_add( PS_GpuParticle )
_add( VS_LightShaft )
_add( calcLightShaftSearchLength )
_add( PS_LightShaft )
_add( FMarkPoint )
_add( FMarkLine )
_add( FMarkLoopPoint )
_add( FMarkLoopLine )
_add( FMarkDisable )
_add( FMark )
_add( FGrassMaterialNormal )
_add( FGrassInput )
_add( FGrassCompressedInput )
_add( FGrassPosition )
_add( FGrassBillboardPosition )
_add( FGrassChainPosition )
_add( FGrassUV )
_add( FGrassBillboardUV )
_add( FGrassChainUV )
_add( FGrassNormal )
_add( FGrassBillboardNormal )
_add( FGrassChainNormal )
_add( FGrassTangent )
_add( FGrassBillboardTangent )
_add( FGrassChainTangent )
_add( FGrassCosSin )
_add( FGrassCosSinFromAngle )
_add( FGrassShapeInvisible )
_add( FGrassXZRotate )
_add( FGrassXZRotateEnable )
_add( FGrassUVSwitchDisable )
_add( FGrassUVSwitch )
_add( FGrassUVMixer )
_add( FGrassUVMixerEnable )
_add( FPerVertexShadowFilter4x4 )
_add( getDepthColumn6 )
_add( FPerVertexShadowFilter6x6 )
_add( getDepthColumn8 )
_add( FPerVertexShadowFilter8x8 )
_add( FFixedCoordinate )
_add( FGrassDiffuse )
_add( FGrassFade )
_add( FBRDFGrassDiffuse )
_add( FBRDFGrassDefault )
_add( FGrassAdjustNormal )
_add( FGrassAdjustNormalDisable )
_add( FGrassIllumination )
_add( FGrassLightMask )
_add( FGrassPerVertexLightMask )
_add( FGrassPerVertexShading )
_add( FGrassPerPixelLightMask )
_add( FGrassUsePosition )
_add( FGrassUsePointPosition )
_add( FGrassPerPixelShading )
_add( FGrassShadingDisable )
_add( FDirectionalWind )
_add( FGrassGlobalWind )
_add( FGrassGlobalWind_Disable )
_add( FDynamicEditMapCoordinate )
_add( FDynamicEditMapReject )
_add( FDynamicEditMapFade )
_add( FDynamicEditMapScaling )
_add( FDynamicEditMapLying )
_add( FDynamicEditMapCoordinateEnable )
_add( FDynamicEditMapRejectEnable )
_add( FDynamicEditMapFadeEnable )
_add( FDynamicEditMapScalingEnable )
_add( FDynamicEditMapLyingEnable )
_add( FGrassConstraint )
_add( FGrassConstraintBillboard )
_add( FGrassInfo )
_add( FGrassInfoWithNormal )
_add( VS_GrassLowest )
_add( VS_Grass )
_add( PS_Grass )
_add( PS_GrassFinalCombiner )
_add( VS_GrassShadowReceive )
_add( PS_GrassShadowReceiveTransparent )
_add( PS_GrassShadowReceiveZPass )
_add( VS_GrassPointMap )
_add( PS_GrassPointMap )
_add( VS_TransitionDynamicEdit )
_add( PS_TransitionDynamicEdit )
_add( VS_DynamicEdit )
_add( PS_DynamicEdit )
_add( VS_Grass_Deferred )
_add( PS_Grass_Deferred )
_add( FFilterDeferredRendering )
_add( VS_GrassOutsourceing )
_add( VS_GrassDummy )
_add( PS_GrassDummy )
_add( VS_GrassShadowDummy )
_add( PS_GrassShadowDummy )
_add( FMirageModColor )
_add( FMirageModColorDebug )
_add( FMirageSampleScene )
_add( FMirageSampleSceneRefractionMap )
_add( FMirageRefract )
_add( FMirageRefractDefault )
_add( FMirageCalcOutput )
_add( FMirageCalcOutputNoise )
_add( FMirageDepthBlend )
_add( FMirageDepthBlendDefault )
_add( FMirageSectCombiner )
_add( FMirageClamp )
_add( FMirageClampNearFar )
_add( VS_Mirage )
_add( PS_Mirage )
_add( VS_MirageSect )
_add( PS_MirageSect )
_add( VS_HeatDepth )
_add( PS_HeatDepth )
_add( FSimWaterSimpleTexVS )
_add( FSimWaterSimpleTexPS )
_add( SbPositionToTexCoordX )
_add( SbPositionToTexCoordY )
_add( SbPositionToTexCoord )
_add( SbTexCoordToPositionX )
_add( SbTexCoordToPositionY )
_add( SbTexCoordToPosition )
_add( SbIdxToTexUV )
_add( SbIdxToTexCoord )
_add( SbIdxToPosition )
_add( SbNormalPackF16 )
_add( SbNormalUnpackF16 )
_add( SbNormalPackF32 )
_add( SbNormalUnpackF32 )
_add( fSbRand )
_add( fSbRand2 )
_add( unpackU8U8 )
_add( SbPassThroughVS )
_add( SbApplyWorldOffsetPS )
_add( SbApplyWorldOffsetPS_XBOX )
_add( SbToLocalSpacePS )
_add( SbToLocalSpacePS_XBOX )
_add( SbInitPS )
_add( SbInitPS_XBOX )
_add( SbLodTransPS )
_add( SbLodTransPS_XBOX )
_add( SbPsSkinningPS )
_add( SbPsSkinningPS_XBOX )
_add( SbPsSkinningAddPosPS )
_add( SbPsSkinningAddPosPS_XBOX )
_add( SbIntegratePS )
_add( SbIntegratePS_XBOX )
_add( SbPlaneConstraint )
_add( SbSphereConstraint )
_add( SbCapsuleConstraint )
_add( SbBoxConstraint )
_add( SbTriangleConstraint )
_add( SbIscCalcFt )
_add( SbIscCalcBk )
_add( SbPrimCollision )
_add( SbSolveConstPS )
_add( SbSolveConstPS_XBOX )
_add( SbSolveEdgeConst2PS )
_add( SbSolveEdgeConst2PS_XBOX )
_add( SbIscConstraint )
_add( SbSolveConstIscPS )
_add( SbSolveConstIscPS_XBOX )
_add( SbCreateDepthNormVS )
_add( SbCreateDepthNormFrontPS )
_add( SbCreateDepthNormBackPS )
_add( SbFilterDepthNormPS )
_add( FTattooUV )
_add( FTattooUVNormalMap )
_add( VS_Tattoo )
_add( FTattooOutput )
_add( FTattooOutputHeight )
_add( PS_Tattoo )
_add( getTattooHeight )
_add( FTattooHeightToNormal )
_add( VS_TattooNormalBlend2D )
_add( PS_TattooNormalBlend2D )
_add( FBuilderSample )
_add( FBuilderSampleBaseMap )
_add( VS_Builder )
_add( PS_Builder )
_add( getOpticalDepth )
_add( getCrossPoint )
_add( FRayleighDepthMap )
_add( FMieDepthMap )
_add( getAtmosphereDepth )
_add( getAerosolDepth )
_add( getRayleighScatter )
_add( getMieScatter )
_add( getCloudScatter )
_add( getOpticalDepthMap )
_add( updateDepth )
_add( updateDensity )
_add( getCloudDepth2 )
_add( getCloudDepth )
_add( updateCloudDepth )
_add( calcScatter )
_add( calcScattering )
_add( FSkyMapBeginEnd )
_add( FSkyMapBeginEndRayleigh )
_add( FSkyMapBeginEndMie )
_add( FSkyMapBeginEndCloud )
_add( FSkyMapOutputSelect )
_add( FSkyMapOutputSelectRayleigh )
_add( FSkyMapOutputSelectMie )
_add( FSkyMapOutputSelectCloud )
_add( FSkyCorrectHorizon )
_add( FSkyCorrectHorizonDisable )
_add( FSkyCorrectHorizonEnable )
_add( VS_SkyMap )
_add( PS_SkyMap )
_add( FSkyFog )
_add( FSkyFinalCombiner )
_add( VS_Sky )
_add( PS_Sky )
_add( getAstralScattering )
_add( VS_SkyAstralBody )
_add( PS_SkySunBody )
_add( PS_SkyMoonBody )
_add( VS_SkyStar )
_add( PS_SkyStar )
_add( VS_SkyStarrySkyColor )
_add( PS_SkyStarrySkyColor )
_add( FDiffuseReflectanceModel )
_add( FTexSinTan )
_add( FTexOrenNayar )
_add( FOrenNayarModel )
_add( FOrenNayarRGBModel )
_add( FSpecularReflectanceModel )
_add( FTexBeckmannModel )
_add( FBeckmannModel )
_add( FCookTorranceModel )
_add( FKelemenSzirmayModel )
_add( StrandSpecular )
_add( FScheuermannModel )
_add( FTexAnisotropicPhongSpecularModel )
_add( FTex2AnisotropicPhongSpecularModel )
_add( FAnisotropicPhongSpecularModel )
_add( FTexAnisotropicPhongDiffusegModel )
_add( FAnisotropicPhongDiffusegModel )
_add( FBRDFCray )
_add( FBRDFBeckmann )
_add( FBRDFMetal )
_add( FBRDFSkin )
_add( FBRDFHair )
_add( FBRDFHairHalfLambert )
_add( FBRDFAnisotropicPhong )
_add( VS_AmbientShadow )
_add( FAmbientShadowDecay )
_add( FAmbientShadowDecayUniform )
_add( FAmbientShadowDecayPerspective )
_add( FAmbientShadowImage )
_add( FAmbientShadowTexture )
_add( FAmbientShadowCircular )
_add( FAmbientShadowCircularSpread )
_add( PS_AmbientShadow )
_add( PS_AmbientShadowAlpha )
_add( VS_OcclusinQuery_Basic )
_add( PS_OcclusinQuery_Basic )
_add( FOutputTexcoord )
_add( FMRTNormalCombinear )
_add( FTriangleVertexSelector )
_add( FTriangleVertex1 )
_add( FTriangleVertex2 )
_add( VS_VertexOutput )
_add( PS_VertexOutput )
_add( PS_VertexOutput3T )
_add( VS_ModelNormalize )
_add( PS_ModelNormalize )
_add( PS_NormalizedSeparation )
_add( FMirrorFilter )
_add( VS_Mirror )
_add( PS_Mirror )
_add( calcPRNG )
_add( calcCurvePosition )
_add( calcParticleRatio )
_add( calcParticleIntensity )
_add( FInfParticleRandomizePos )
_add( FInfParticleRandomizePosDefault )
_add( FInfParticlePos )
_add( FInfParticlePosSpline )
_add( FInfParticlePosBezier )
_add( FInfParticleColor )
_add( FInfParticleColorConstant )
_add( FInfParticleColorConstantBlend )
_add( FInfParticleColorLerp )
_add( FInfParticleColorLerpBlend )
_add( calcParticleRotation )
_add( FInfParticleSample )
_add( FInfParticleSampleAlbedo )
_add( FInfParticleCalcTexCoord )
_add( FInfParticleCalcTexCoordPattern )
_add( FInfParticleTexturePattern )
_add( FInfParticleTexturePatternIndependent )
_add( FInfParticleTexturePatternAnimate )
_add( FInfParticleVSAlphaClip )
_add( FInfParticleVSAlphaClipDefault )
_add( VS_InfParticle )
_add( VS_InfParticle2 )
_add( calcTexcoord )
_add( GS_InfParticle )
_add( PS_InfParticle )
_add( FUserAlbedoMapNoAlpha )
_add( FUserAlbedoMapIndirect )
_add( FUserAlbedoMapFrozen )
_add( FUserDiffuseStageFloor )
_add( FUserDiffuseConstantMul )
_add( FUserSimpleFinalCombiner )
_add( FUserSpecularMapIndirect )
_add( FTransparencyMapClamp )
_add( FFresnelLegacy )
_add( FToonLightCalc )
_add( FToonLightCalcHalf )
_add( FToonLightCalcNone )
_add( FToonLightRevCalc )
_add( FToonLightRevCalcHalf )
_add( doRGB2HSV )
_add( doHSV2RGB )
_add( FCalcRimLight )
_add( FCalcRimLightDefault )
_add( FCalcRimLightNone )
_add( FToonShader )
_add( FToonShaderHigh )
_add( FToonShaderNormal )
_add( FDiffuseColorCorectSimple )
_add( FDiffuseColorCorect )
_add( FDiffuseColorCorectSH )
_add( FDiffuseColorCorectLightMap )
_add( FDiffuseColorCorectBone )
_add( FSpecularMaskToon )
_add( FToonShaderUroko )
_add( FWorldCoordinateSimple )
_add( FWorldCoordinateSimple2 )
_add( _FinalCombinerUI )
_add( VS_MaterialUI )
_add( PS_MaterialUI )
_add( VS_MaterialStgSimple )
_add( PS_MaterialStgSimple )
_add( PS_MaterialStgSimple2 )
_add( PS_MaterialChar )
_add( PS_MaterialCharAlpha )
_add( FFilterCopyColorWhiteBlackUser )
_add( FFilterCopyColorNega )
_add( FFilterCopyColorMono )
_add( FFilterSimpleHatching )
_add( VS_TVNoisePrimitive )
_add( PS_TVNoisePrimitive )
_add( VS_MaterialFurSell )
_add( FFilterAntiEdgeBrightnessDetectionSub )
_add( FFilterAntiEdgeBrightnessDetectionFastSub )
_add( FFilterAntiEdgeBrightnessDetection )
_add( FFilterAntiEdgeBrightnessDetectionFast )
_add( FFilterAntiEdgeBrightness )
_add( FFilterAntiEdgeBrightnessEdgeColorOnly )
_add( FFilterAnaglyphEdge )
_add( FFilterAnaglyphEdgeGrayScale )
_add( FFilterDistortion )
_add( FFilterDistortionColor )
_add( TSystem )
_add( TProceduralTexture )
_add( TAntialiasing )
_add( TFilter )
_add( TSMAA )
_add( TDevelop )
_add( TCollision )
_add( TMaterialNull )
_add( TMaterialDummy )
_add( TDummy )
_add( TMaterialDummyEdge )
_add( TMaterialDummyPicker )
_add( TMaterialDebug )
_add( TMotionBlurFilter )
_add( TMaterialVelocity )
_add( TMaterialVelocityEdge )
_add( TMaterialOutline )
_add( TShadowReceive )
_add( TDualParaboloid )
_add( TDeferredLighting )
_add( TReflectiveShadowMap )
_add( TMaterialStd )
_add( TAdhesion )
_add( TMaterialSSS )
_add( TMaterialStdEst )
_add( TModelFog )
_add( TMaterialConstant )
_add( TMaterialStdPN )
_add( TMaterialStdPH )
_add( TMaterialStdDM )
_add( TMaterialStdCafeTes )
_add( TShadowCast )
_add( TRadialBlurFilter )
_add( TTVNoiseFilter )
_add( TVarianceFilter )
_add( TBloomFilter )
_add( TImagePlaneFilter )
_add( TLogAverage )
_add( TCubeMapFilter )
_add( TGSDOFFilter )
_add( TSSAO )
_add( TTangentFilter )
_add( TPrimitive )
_add( TPrimitive2D )
_add( TWater )
_add( TGUI )
_add( TTextureBlend )
_add( TGPUParticle )
_add( TLightShaft )
_add( TGrass )
_add( TGrassOutsourceing )
_add( TGrassDummy )
_add( TGrassShadowDummy )
_add( TMirage )
_add( TSimWaterSimpleTex )
_add( TSoftBody )
_add( TTattoo )
_add( TBuilder )
_add( TSky )
_add( TAmbientShadow )
_add( TOcclusionQuery )
_add( TReCalcNormal )
_add( TMirror )
_add( TInfParticle )
_add( TMaterialUI )
_add( TMaterialStgSimple )
_add( TMaterialStgSimple2 )
_add( TMaterialChar )
_add( TMaterialCharAlpha )
_add( TTVNoisePrimitive )
_add( TMaterialFurSell )
